_RNvXNtNtNtCs3HmALEVcYcb_9arbitrary7foreign5alloc5boxedINtNtCs8f6x4lOZV33_5alloc5boxed3BoxNtCsiZ6QsNdkp8Z_15rsonpath_syntax11LogicalExprENtB8_9Arbitrary9arbitraryB1r_:
   10|  22.0k|    fn arbitrary(u: &mut Unstructured<'a>) -> Result<Self> {
   11|  22.0k|        Arbitrary::arbitrary(u).map(Self::new)
   12|  22.0k|    }

_RNvXNtNtNtCs3HmALEVcYcb_9arbitrary7foreign5alloc3vecINtNtCs8f6x4lOZV33_5alloc3vec3VecNtCsiZ6QsNdkp8Z_15rsonpath_syntax15SingularSegmentENtB8_9Arbitrary9arbitraryB1n_:
   10|  6.19k|    fn arbitrary(u: &mut Unstructured<'a>) -> Result<Self> {
   11|  6.19k|        u.arbitrary_iter()?.collect()
   12|  6.19k|    }
_RNvXNtNtNtCs3HmALEVcYcb_9arbitrary7foreign5alloc3vecINtNtCs8f6x4lOZV33_5alloc3vec3VecNtCsiZ6QsNdkp8Z_15rsonpath_syntax7SegmentENtB8_9Arbitrary19arbitrary_take_restB1n_:
   14|  1.31k|    fn arbitrary_take_rest(u: Unstructured<'a>) -> Result<Self> {
   15|  1.31k|        u.arbitrary_take_rest_iter()?.collect()
   16|  1.31k|    }
_RNvXNtNtNtCs3HmALEVcYcb_9arbitrary7foreign5alloc3vecINtNtCs8f6x4lOZV33_5alloc3vec3VecNtCsiZ6QsNdkp8Z_15rsonpath_syntax7SegmentENtB8_9Arbitrary9arbitraryB1n_:
   10|  17.8k|    fn arbitrary(u: &mut Unstructured<'a>) -> Result<Self> {
   11|  17.8k|        u.arbitrary_iter()?.collect()
   12|  17.8k|    }
_RNvXNtNtNtCs3HmALEVcYcb_9arbitrary7foreign5alloc3vecINtNtCs8f6x4lOZV33_5alloc3vec3VecNtCsiZ6QsNdkp8Z_15rsonpath_syntax7SegmentENtB8_9Arbitrary9size_hintB1n_:
   19|  1.31k|    fn size_hint(_depth: usize) -> (usize, Option<usize>) {
   20|  1.31k|        (0, None)
   21|  1.31k|    }
_RNvXNtNtNtCs3HmALEVcYcb_9arbitrary7foreign5alloc3vecINtNtCs8f6x4lOZV33_5alloc3vec3VecNtCsiZ6QsNdkp8Z_15rsonpath_syntax8SelectorENtB8_9Arbitrary9arbitraryB1n_:
   10|  19.1k|    fn arbitrary(u: &mut Unstructured<'a>) -> Result<Self> {
   11|  19.1k|        u.arbitrary_iter()?.collect()
   12|  19.1k|    }

_RNvXNtNtNtCs3HmALEVcYcb_9arbitrary7foreign4core4boolbNtB8_9Arbitrary9arbitrary:
    4|   105k|    fn arbitrary(u: &mut Unstructured<'a>) -> Result<Self> {
    5|   105k|        Ok(<u8 as Arbitrary<'a>>::arbitrary(u)? & 1 == 1)
    6|   105k|    }

_RNvXNtNtNtCs3HmALEVcYcb_9arbitrary7foreign4core4charcNtB8_9Arbitrary9arbitrary:
    4|  15.3k|    fn arbitrary(u: &mut Unstructured<'a>) -> Result<Self> {
    5|       |        // The highest unicode code point is 0x11_FFFF
    6|       |        const CHAR_END: u32 = 0x11_0000;
    7|       |        // The size of the surrogate blocks
    8|       |        const SURROGATES_START: u32 = 0xD800;
    9|  15.3k|        let mut c = <u32 as Arbitrary<'a>>::arbitrary(u)? % CHAR_END;
   10|  15.3k|        if let Some(c) = char::from_u32(c) {
   11|  14.8k|            Ok(c)
   12|       |        } else {
   13|       |            // We found a surrogate, wrap and try again
   14|    482|            c -= SURROGATES_START;
   15|    482|            Ok(char::from_u32(c)
   16|    482|                .expect("Generated character should be valid! This is a bug in arbitrary-rs"))
   17|       |        }
   18|  15.3k|    }

_RNvXs1_NtNtNtCs3HmALEVcYcb_9arbitrary7foreign4core3numhNtBb_9Arbitrary9arbitrary:
   16|   105k|                fn arbitrary(u: &mut Unstructured<'a>) -> Result<Self> {
   17|   105k|                    let mut buf = [0; mem::size_of::<$ty>()];
   18|   105k|                    u.fill_buffer(&mut buf)?;
   19|   105k|                    Ok(Self::from_le_bytes(buf))
   20|   105k|                }
_RNvXs3_NtNtNtCs3HmALEVcYcb_9arbitrary7foreign4core3nummNtBb_9Arbitrary9arbitrary:
   16|   146k|                fn arbitrary(u: &mut Unstructured<'a>) -> Result<Self> {
   17|   146k|                    let mut buf = [0; mem::size_of::<$ty>()];
   18|   146k|                    u.fill_buffer(&mut buf)?;
   19|   146k|                    Ok(Self::from_le_bytes(buf))
   20|   146k|                }
_RNvXs4_NtNtNtCs3HmALEVcYcb_9arbitrary7foreign4core3numyNtBb_9Arbitrary9arbitrary:
   16|    562|                fn arbitrary(u: &mut Unstructured<'a>) -> Result<Self> {
   17|    562|                    let mut buf = [0; mem::size_of::<$ty>()];
   18|    562|                    u.fill_buffer(&mut buf)?;
   19|    562|                    Ok(Self::from_le_bytes(buf))
   20|    562|                }
_RNvXsc_NtNtNtCs3HmALEVcYcb_9arbitrary7foreign4core3numdNtBb_9Arbitrary9arbitrary:
   75|    562|                fn arbitrary(u: &mut Unstructured<'a>) -> Result<Self> {
   76|    562|                    Ok(Self::from_bits(<$unsigned as Arbitrary<'a>>::arbitrary(u)?))
   77|    562|                }

_RNvXNtNtNtCs3HmALEVcYcb_9arbitrary7foreign4core6optionINtNtCshZc3FwCJ069_4core6option6OptionNtCsiZ6QsNdkp8Z_15rsonpath_syntax5IndexENtB8_9Arbitrary9arbitraryB1u_:
    7|  1.99k|    fn arbitrary(u: &mut Unstructured<'a>) -> Result<Self> {
    8|  1.99k|        Ok(if <bool as Arbitrary<'a>>::arbitrary(u)? {
    9|  1.51k|            Some(Arbitrary::arbitrary(u)?)
   10|       |        } else {
   11|    476|            None
   12|       |        })
   13|  1.99k|    }

_RNvYINtNtCs8f6x4lOZV33_5alloc3vec3VecNtCsiZ6QsNdkp8Z_15rsonpath_syntax7SegmentENtCs3HmALEVcYcb_9arbitrary9Arbitrary13try_size_hintBB_:
  423|  1.31k|    fn try_size_hint(depth: usize) -> Result<(usize, Option<usize>), MaxRecursionReached> {
  424|  1.31k|        Ok(Self::size_hint(depth))
  425|  1.31k|    }

_RINvNtCs3HmALEVcYcb_9arbitrary9size_hint19try_recursion_guardNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs9_1__NtB14_13JsonPathQueryNtB4_9Arbitrary13try_size_hint0EB14_:
   38|  1.31k|pub fn try_recursion_guard(
   39|  1.31k|    depth: usize,
   40|  1.31k|    f: impl FnOnce(usize) -> Result<(usize, Option<usize>), crate::MaxRecursionReached>,
   41|  1.31k|) -> Result<(usize, Option<usize>), crate::MaxRecursionReached> {
   42|  1.31k|    if depth > MAX_DEPTH {
   43|      0|        Err(crate::MaxRecursionReached {})
   44|       |    } else {
   45|  1.31k|        f(depth + 1)
   46|       |    }
   47|  1.31k|}
_RNvNtCs3HmALEVcYcb_9arbitrary9size_hint3andCsiZ6QsNdkp8Z_15rsonpath_syntax:
   51|  1.31k|pub fn and(lhs: (usize, Option<usize>), rhs: (usize, Option<usize>)) -> (usize, Option<usize>) {
   52|  1.31k|    let lower = lhs.0 + rhs.0;
   53|  1.31k|    let upper = lhs.1.and_then(|lhs| rhs.1.map(|rhs| lhs + rhs));
   54|  1.31k|    (lower, upper)
   55|  1.31k|}
_RNvNtCs3HmALEVcYcb_9arbitrary9size_hint7and_allCsiZ6QsNdkp8Z_15rsonpath_syntax:
   62|  1.31k|pub fn and_all(hints: &[(usize, Option<usize>)]) -> (usize, Option<usize>) {
   63|  1.31k|    hints.iter().copied().fold((0, Some(0)), and)
   64|  1.31k|}
_RNCNvNtCs3HmALEVcYcb_9arbitrary9size_hint3and0B5_:
   53|  1.31k|    let upper = lhs.1.and_then(|lhs| rhs.1.map(|rhs| lhs + rhs));

_RINvMNtCs3HmALEVcYcb_9arbitrary12unstructuredNtB3_12Unstructured12int_in_rangexECsiZ6QsNdkp8Z_15rsonpath_syntax:
  295|  10.0k|    pub fn int_in_range<T>(&mut self, range: ops::RangeInclusive<T>) -> Result<T>
  296|  10.0k|    where
  297|  10.0k|        T: Int,
  298|  10.0k|    {
  299|  10.0k|        let (result, bytes_consumed) = Self::int_in_range_impl(range, self.data.iter().cloned())?;
  300|  10.0k|        self.data = &self.data[bytes_consumed..];
  301|  10.0k|        Ok(result)
  302|  10.0k|    }
_RINvMNtCs3HmALEVcYcb_9arbitrary12unstructuredNtB3_12Unstructured14arbitrary_iterNtCsiZ6QsNdkp8Z_15rsonpath_syntax15SingularSegmentEB1i_:
  643|  6.19k|    pub fn arbitrary_iter<'b, ElementType: Arbitrary<'a>>(
  644|  6.19k|        &'b mut self,
  645|  6.19k|    ) -> Result<ArbitraryIter<'a, 'b, ElementType>> {
  646|  6.19k|        Ok(ArbitraryIter {
  647|  6.19k|            u: &mut *self,
  648|  6.19k|            _marker: PhantomData,
  649|  6.19k|        })
  650|  6.19k|    }
_RINvMNtCs3HmALEVcYcb_9arbitrary12unstructuredNtB3_12Unstructured14arbitrary_iterNtCsiZ6QsNdkp8Z_15rsonpath_syntax7SegmentEB1i_:
  643|  17.8k|    pub fn arbitrary_iter<'b, ElementType: Arbitrary<'a>>(
  644|  17.8k|        &'b mut self,
  645|  17.8k|    ) -> Result<ArbitraryIter<'a, 'b, ElementType>> {
  646|  17.8k|        Ok(ArbitraryIter {
  647|  17.8k|            u: &mut *self,
  648|  17.8k|            _marker: PhantomData,
  649|  17.8k|        })
  650|  17.8k|    }
_RINvMNtCs3HmALEVcYcb_9arbitrary12unstructuredNtB3_12Unstructured14arbitrary_iterNtCsiZ6QsNdkp8Z_15rsonpath_syntax8SelectorEB1i_:
  643|  19.1k|    pub fn arbitrary_iter<'b, ElementType: Arbitrary<'a>>(
  644|  19.1k|        &'b mut self,
  645|  19.1k|    ) -> Result<ArbitraryIter<'a, 'b, ElementType>> {
  646|  19.1k|        Ok(ArbitraryIter {
  647|  19.1k|            u: &mut *self,
  648|  19.1k|            _marker: PhantomData,
  649|  19.1k|        })
  650|  19.1k|    }
_RINvMNtCs3HmALEVcYcb_9arbitrary12unstructuredNtB3_12Unstructured14arbitrary_itercECsiZ6QsNdkp8Z_15rsonpath_syntax:
  643|  11.2k|    pub fn arbitrary_iter<'b, ElementType: Arbitrary<'a>>(
  644|  11.2k|        &'b mut self,
  645|  11.2k|    ) -> Result<ArbitraryIter<'a, 'b, ElementType>> {
  646|  11.2k|        Ok(ArbitraryIter {
  647|  11.2k|            u: &mut *self,
  648|  11.2k|            _marker: PhantomData,
  649|  11.2k|        })
  650|  11.2k|    }
_RINvMNtCs3HmALEVcYcb_9arbitrary12unstructuredNtB3_12Unstructured17int_in_range_implxINtNtNtNtCshZc3FwCJ069_4core4iter8adapters6cloned6ClonedINtNtNtB1t_5slice4iter4IterhEEECsiZ6QsNdkp8Z_15rsonpath_syntax:
  304|  10.0k|    fn int_in_range_impl<T>(
  305|  10.0k|        range: ops::RangeInclusive<T>,
  306|  10.0k|        mut bytes: impl Iterator<Item = u8>,
  307|  10.0k|    ) -> Result<(T, usize)>
  308|  10.0k|    where
  309|  10.0k|        T: Int,
  310|  10.0k|    {
  311|  10.0k|        let start = *range.start();
  312|  10.0k|        let end = *range.end();
  313|  10.0k|        assert!(
  314|  10.0k|            start <= end,
  315|      0|            "`arbitrary::Unstructured::int_in_range` requires a non-empty range"
  316|       |        );
  317|       |
  318|       |        // When there is only one possible choice, don't waste any entropy from
  319|       |        // the underlying data.
  320|  10.0k|        if start == end {
  321|      0|            return Ok((start, 0));
  322|  10.0k|        }
  323|  10.0k|
  324|  10.0k|        // From here on out we work with the unsigned representation. All of the
  325|  10.0k|        // operations performed below work out just as well whether or not `T`
  326|  10.0k|        // is a signed or unsigned integer.
  327|  10.0k|        let start = start.to_unsigned();
  328|  10.0k|        let end = end.to_unsigned();
  329|  10.0k|
  330|  10.0k|        let delta = end.wrapping_sub(start);
  331|  10.0k|        debug_assert_ne!(delta, T::Unsigned::ZERO);
  332|       |
  333|       |        // Compute an arbitrary integer offset from the start of the range. We
  334|       |        // do this by consuming `size_of(T)` bytes from the input to create an
  335|       |        // arbitrary integer and then clamping that int into our range bounds
  336|       |        // with a modulo operation.
  337|  10.0k|        let mut arbitrary_int = T::Unsigned::ZERO;
  338|  10.0k|        let mut bytes_consumed: usize = 0;
  339|       |
  340|  78.9k|        while (bytes_consumed < mem::size_of::<T>())
  341|  78.9k|            && (delta >> T::Unsigned::from_usize(bytes_consumed * 8)) > T::Unsigned::ZERO
  342|       |        {
  343|  69.0k|            let byte = match bytes.next() {
  344|    212|                None => break,
  345|  68.8k|                Some(b) => b,
  346|  68.8k|            };
  347|  68.8k|            bytes_consumed += 1;
  348|  68.8k|
  349|  68.8k|            // Combine this byte into our arbitrary integer, but avoid
  350|  68.8k|            // overflowing the shift for `u8` and `i8`.
  351|  68.8k|            arbitrary_int = if mem::size_of::<T>() == 1 {
  352|      0|                T::Unsigned::from_u8(byte)
  353|       |            } else {
  354|  68.8k|                (arbitrary_int << 8) | T::Unsigned::from_u8(byte)
  355|       |            };
  356|       |        }
  357|       |
  358|  10.0k|        let offset = if delta == T::Unsigned::MAX {
  359|      0|            arbitrary_int
  360|       |        } else {
  361|  10.0k|            arbitrary_int % (delta.checked_add(T::Unsigned::ONE).unwrap())
  362|       |        };
  363|       |
  364|       |        // Finally, we add `start` to our offset from `start` to get the result
  365|       |        // actual value within the range.
  366|  10.0k|        let result = start.wrapping_add(offset);
  367|  10.0k|
  368|  10.0k|        // And convert back to our maybe-signed representation.
  369|  10.0k|        let result = T::from_unsigned(result);
  370|  10.0k|        debug_assert!(*range.start() <= result);
  371|  10.0k|        debug_assert!(result <= *range.end());
  372|       |
  373|  10.0k|        Ok((result, bytes_consumed))
  374|  10.0k|    }
_RINvMNtCs3HmALEVcYcb_9arbitrary12unstructuredNtB3_12Unstructured24arbitrary_take_rest_iterNtCsiZ6QsNdkp8Z_15rsonpath_syntax7SegmentEB1s_:
  657|  1.31k|    pub fn arbitrary_take_rest_iter<ElementType: Arbitrary<'a>>(
  658|  1.31k|        self,
  659|  1.31k|    ) -> Result<ArbitraryTakeRestIter<'a, ElementType>> {
  660|  1.31k|        Ok(ArbitraryTakeRestIter {
  661|  1.31k|            u: self,
  662|  1.31k|            _marker: PhantomData,
  663|  1.31k|        })
  664|  1.31k|    }
_RINvMNtCs3HmALEVcYcb_9arbitrary12unstructuredNtB3_12Unstructured9arbitraryINtNtCs8f6x4lOZV33_5alloc3vec3VecNtCsiZ6QsNdkp8Z_15rsonpath_syntax8SelectorEEB1J_:
  168|  19.1k|    pub fn arbitrary<A>(&mut self) -> Result<A>
  169|  19.1k|    where
  170|  19.1k|        A: Arbitrary<'a>,
  171|  19.1k|    {
  172|  19.1k|        <A as Arbitrary<'a>>::arbitrary(self)
  173|  19.1k|    }
_RINvMNtCs3HmALEVcYcb_9arbitrary12unstructuredNtB3_12Unstructured9arbitraryNtCsiZ6QsNdkp8Z_15rsonpath_syntax8SelectorEB1c_:
  168|  20.0k|    pub fn arbitrary<A>(&mut self) -> Result<A>
  169|  20.0k|    where
  170|  20.0k|        A: Arbitrary<'a>,
  171|  20.0k|    {
  172|  20.0k|        <A as Arbitrary<'a>>::arbitrary(self)
  173|  20.0k|    }
_RINvMNtCs3HmALEVcYcb_9arbitrary12unstructuredNtB3_12Unstructured9arbitraryNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax3num7JsonIntEB1e_:
  168|  9.77k|    pub fn arbitrary<A>(&mut self) -> Result<A>
  169|  9.77k|    where
  170|  9.77k|        A: Arbitrary<'a>,
  171|  9.77k|    {
  172|  9.77k|        <A as Arbitrary<'a>>::arbitrary(self)
  173|  9.77k|    }
_RINvMNtCs3HmALEVcYcb_9arbitrary12unstructuredNtB3_12Unstructured9arbitrarydECsiZ6QsNdkp8Z_15rsonpath_syntax:
  168|    562|    pub fn arbitrary<A>(&mut self) -> Result<A>
  169|    562|    where
  170|    562|        A: Arbitrary<'a>,
  171|    562|    {
  172|    562|        <A as Arbitrary<'a>>::arbitrary(self)
  173|    562|    }
_RNvXs0_NtCs3HmALEVcYcb_9arbitrary12unstructuredINtB5_21ArbitraryTakeRestIterNtCsiZ6QsNdkp8Z_15rsonpath_syntax7SegmentENtNtNtNtCshZc3FwCJ069_4core4iter6traits8iterator8Iterator4nextB1e_:
  775|  3.50k|    fn next(&mut self) -> Option<Result<ElementType>> {
  776|  3.50k|        let keep_going = self.u.arbitrary().unwrap_or(false);
  777|  3.50k|        if keep_going {
  778|  2.48k|            Some(Arbitrary::arbitrary(&mut self.u))
  779|       |        } else {
  780|  1.01k|            None
  781|       |        }
  782|  3.50k|    }
_RNvXs_NtCs3HmALEVcYcb_9arbitrary12unstructuredINtB4_13ArbitraryIterNtCsiZ6QsNdkp8Z_15rsonpath_syntax15SingularSegmentENtNtNtNtCshZc3FwCJ069_4core4iter6traits8iterator8Iterator4nextB15_:
  757|  10.6k|    fn next(&mut self) -> Option<Result<ElementType>> {
  758|  10.6k|        let keep_going = self.u.arbitrary().unwrap_or(false);
  759|  10.6k|        if keep_going {
  760|  4.48k|            Some(Arbitrary::arbitrary(self.u))
  761|       |        } else {
  762|  6.19k|            None
  763|       |        }
  764|  10.6k|    }
_RNvXs_NtCs3HmALEVcYcb_9arbitrary12unstructuredINtB4_13ArbitraryIterNtCsiZ6QsNdkp8Z_15rsonpath_syntax7SegmentENtNtNtNtCshZc3FwCJ069_4core4iter6traits8iterator8Iterator4nextB15_:
  757|  34.0k|    fn next(&mut self) -> Option<Result<ElementType>> {
  758|  34.0k|        let keep_going = self.u.arbitrary().unwrap_or(false);
  759|  34.0k|        if keep_going {
  760|  17.5k|            Some(Arbitrary::arbitrary(self.u))
  761|       |        } else {
  762|  16.5k|            None
  763|       |        }
  764|  34.0k|    }
_RNvXs_NtCs3HmALEVcYcb_9arbitrary12unstructuredINtB4_13ArbitraryIterNtCsiZ6QsNdkp8Z_15rsonpath_syntax8SelectorENtNtNtNtCshZc3FwCJ069_4core4iter6traits8iterator8Iterator4nextB15_:
  757|  28.3k|    fn next(&mut self) -> Option<Result<ElementType>> {
  758|  28.3k|        let keep_going = self.u.arbitrary().unwrap_or(false);
  759|  28.3k|        if keep_going {
  760|  9.95k|            Some(Arbitrary::arbitrary(self.u))
  761|       |        } else {
  762|  18.4k|            None
  763|       |        }
  764|  28.3k|    }
_RNvXs_NtCs3HmALEVcYcb_9arbitrary12unstructuredINtB4_13ArbitraryItercENtNtNtNtCshZc3FwCJ069_4core4iter6traits8iterator8Iterator4nextCsiZ6QsNdkp8Z_15rsonpath_syntax:
  757|  26.6k|    fn next(&mut self) -> Option<Result<ElementType>> {
  758|  26.6k|        let keep_going = self.u.arbitrary().unwrap_or(false);
  759|  26.6k|        if keep_going {
  760|  15.3k|            Some(Arbitrary::arbitrary(self.u))
  761|       |        } else {
  762|  11.2k|            None
  763|       |        }
  764|  26.6k|    }
_RNvMNtCs3HmALEVcYcb_9arbitrary12unstructuredNtB2_12Unstructured3lenCsiZ6QsNdkp8Z_15rsonpath_syntax:
  109|   164k|    pub fn len(&self) -> usize {
  110|   164k|        self.data.len()
  111|   164k|    }
_RNvMNtCs3HmALEVcYcb_9arbitrary12unstructuredNtB2_12Unstructured8is_emptyCsiZ6QsNdkp8Z_15rsonpath_syntax:
  133|   164k|    pub fn is_empty(&self) -> bool {
  134|   164k|        self.len() == 0
  135|   164k|    }
_RNvMNtCs3HmALEVcYcb_9arbitrary12unstructuredNtB2_12Unstructured3new:
   86|  1.31k|    pub fn new(data: &'a [u8]) -> Self {
   87|  1.31k|        Unstructured { data }
   88|  1.31k|    }
_RINvMNtCs3HmALEVcYcb_9arbitrary12unstructuredNtB3_12Unstructured9arbitrarybEB5_:
  168|   103k|    pub fn arbitrary<A>(&mut self) -> Result<A>
  169|   103k|    where
  170|   103k|        A: Arbitrary<'a>,
  171|   103k|    {
  172|   103k|        <A as Arbitrary<'a>>::arbitrary(self)
  173|   103k|    }
_RNvMNtCs3HmALEVcYcb_9arbitrary12unstructuredNtB2_12Unstructured11fill_buffer:
  558|   252k|    pub fn fill_buffer(&mut self, buffer: &mut [u8]) -> Result<()> {
  559|   252k|        let n = std::cmp::min(buffer.len(), self.data.len());
  560|   252k|        buffer[..n].copy_from_slice(&self.data[..n]);
  561|   252k|        for byte in buffer[n..].iter_mut() {
  562|  35.8k|            *byte = 0;
  563|  35.8k|        }
  564|   252k|        self.data = &self.data[n..];
  565|   252k|        Ok(())
  566|   252k|    }
_RNvXs5_NtCs3HmALEVcYcb_9arbitrary12unstructuredyNtB5_3Int7from_u8:
  858|  68.8k|                fn from_u8(b: u8) -> Self {
  859|  68.8k|                    b as Self
  860|  68.8k|                }
_RNvXs5_NtCs3HmALEVcYcb_9arbitrary12unstructuredyNtB5_3Int10from_usize:
  862|  78.9k|                fn from_usize(u: usize) -> Self {
  863|  78.9k|                    u as Self
  864|  78.9k|                }
_RNvXs5_NtCs3HmALEVcYcb_9arbitrary12unstructuredyNtB5_3Int11checked_add:
  866|  10.0k|                fn checked_add(self, rhs: Self) -> Option<Self> {
  867|  10.0k|                    <$ty>::checked_add(self, rhs)
  868|  10.0k|                }
_RNvXs5_NtCs3HmALEVcYcb_9arbitrary12unstructuredyNtB5_3Int12wrapping_add:
  870|  10.0k|                fn wrapping_add(self, rhs: Self) -> Self {
  871|  10.0k|                    <$ty>::wrapping_add(self, rhs)
  872|  10.0k|                }
_RNvXs5_NtCs3HmALEVcYcb_9arbitrary12unstructuredyNtB5_3Int12wrapping_sub:
  874|  10.0k|                fn wrapping_sub(self, rhs: Self) -> Self {
  875|  10.0k|                    <$ty>::wrapping_sub(self, rhs)
  876|  10.0k|                }
_RNvXsb_NtCs3HmALEVcYcb_9arbitrary12unstructuredxNtB5_3Int11to_unsigned:
  878|  20.0k|                fn to_unsigned(self) -> Self::Unsigned {
  879|  20.0k|                    self as $unsigned_ty
  880|  20.0k|                }
_RNvXsb_NtCs3HmALEVcYcb_9arbitrary12unstructuredxNtB5_3Int13from_unsigned:
  882|  10.0k|                fn from_unsigned(unsigned: $unsigned_ty) -> Self {
  883|  10.0k|                    unsigned as Self
  884|  10.0k|                }

LLVMFuzzerInitialize:
  312|      2|            pub extern "C" fn LLVMFuzzerInitialize(_argc: *const isize, _argv: *const *const *const u8) -> isize {
  313|      2|                $crate::initialize(_argc, _argv);
  314|      2|
  315|      2|                // Supplied init code
  316|      2|                $init;
  317|      2|                0
  318|      2|            }
rust_fuzzer_test_input:
  321|  1.31k|            pub extern "C" fn rust_fuzzer_test_input(bytes: &[u8]) -> i32 {
  322|       |                use $crate::arbitrary::{Arbitrary, Unstructured};
  323|       |
  324|       |                // Early exit if we don't have enough bytes for the `Arbitrary`
  325|       |                // implementation. This helps the fuzzer avoid exploring all the
  326|       |                // different not-enough-input-bytes paths inside the `Arbitrary`
  327|       |                // implementation. Additionally, it exits faster, letting the fuzzer
  328|       |                // get to longer inputs that actually lead to interesting executions
  329|       |                // quicker.
  330|  1.31k|                if bytes.len() < <$dty as Arbitrary>::size_hint(0).0 {
  331|      0|                    return -1;
  332|  1.31k|                }
  333|  1.31k|
  334|  1.31k|                let mut u = Unstructured::new(bytes);
  335|  1.31k|                let data = <$dty as Arbitrary>::arbitrary_take_rest(u);
  336|       |
  337|       |                // When `RUST_LIBFUZZER_DEBUG_PATH` is set, write the debug
  338|       |                // formatting of the input to that file. This is only intended for
  339|       |                // `cargo fuzz`'s use!
  340|       |
  341|       |                // `RUST_LIBFUZZER_DEBUG_PATH` is set in initialization.
  342|  1.31k|                if let Some(path) = $crate::rust_libfuzzer_debug_path() {
  343|       |                    use std::io::Write;
  344|      0|                    let mut file = std::fs::File::create(path)
  345|      0|                        .expect("failed to create `RUST_LIBFUZZER_DEBUG_PATH` file");
  346|      0|                    (match data {
  347|      0|                        Ok(data) => writeln!(&mut file, "{:#?}", data),
  348|      0|                        Err(err) => writeln!(&mut file, "Arbitrary Error: {}", err),
  349|       |                    })
  350|      0|                    .expect("failed to write to `RUST_LIBFUZZER_DEBUG_PATH` file");
  351|      0|                    return -1;
  352|  1.31k|                }
  353|  1.31k|
  354|  1.31k|                let data = match data {
  355|  1.01k|                    Ok(d) => d,
  356|    300|                    Err(_) => return -1,
  357|       |                };
  358|       |
  359|  1.01k|                let result = ::libfuzzer_sys::Corpus::from(__libfuzzer_sys_run(data));
  360|  1.01k|                result.to_libfuzzer_code()
  361|       |            }
_RNvNvCsaryQ4xZOwOZ_21query_fuzz_round_trip1__19___libfuzzer_sys_run:
  364|  1.01k|            fn __libfuzzer_sys_run($data: $dty) -> $rty {
  365|       |                $body
  366|       |            }
_RNvMs_CskkpDSEEzbp3_13libfuzzer_sysNtB4_6Corpus17to_libfuzzer_code:
   40|  1.01k|    pub fn to_libfuzzer_code(self) -> i32 {
   41|  1.01k|        match self {
   42|    975|            Corpus::Keep => 0,
   43|     39|            Corpus::Reject => -1,
   44|       |        }
   45|  1.01k|    }
LLVMFuzzerTestOneInput:
   59|  1.31k|pub unsafe fn test_input_wrap(data: *const u8, size: usize) -> i32 {
   60|  1.31k|    let test_input = ::std::panic::catch_unwind(|| {
   61|       |        let data_slice = ::std::slice::from_raw_parts(data, size);
   62|       |        rust_fuzzer_test_input(data_slice)
   63|  1.31k|    });
   64|  1.31k|
   65|  1.31k|    match test_input {
   66|  1.31k|        Ok(i) => i,
   67|       |        Err(_) => {
   68|       |            // hopefully the custom panic hook will be called before and abort the
   69|       |            // process before the stack frames are unwinded.
   70|      0|            ::std::process::abort();
   71|       |        }
   72|       |    }
   73|  1.31k|}
_RNCNvCskkpDSEEzbp3_13libfuzzer_sys15test_input_wrap0B3_:
   60|  1.31k|    let test_input = ::std::panic::catch_unwind(|| {
   61|  1.31k|        let data_slice = ::std::slice::from_raw_parts(data, size);
   62|  1.31k|        rust_fuzzer_test_input(data_slice)
   63|  1.31k|    });
_RNvCskkpDSEEzbp3_13libfuzzer_sys25rust_libfuzzer_debug_path:
   76|  1.31k|pub fn rust_libfuzzer_debug_path() -> &'static Option<String> {
   77|       |    static RUST_LIBFUZZER_DEBUG_PATH: OnceLock<Option<String>> = OnceLock::new();
   78|  1.31k|    RUST_LIBFUZZER_DEBUG_PATH.get_or_init(|| std::env::var("RUST_LIBFUZZER_DEBUG_PATH").ok())
   79|  1.31k|}
_RNCNvCskkpDSEEzbp3_13libfuzzer_sys25rust_libfuzzer_debug_path0B3_:
   78|      1|    RUST_LIBFUZZER_DEBUG_PATH.get_or_init(|| std::env::var("RUST_LIBFUZZER_DEBUG_PATH").ok())
_RNvCskkpDSEEzbp3_13libfuzzer_sys10initialize:
   82|      2|pub fn initialize(_argc: *const isize, _argv: *const *const *const u8) -> isize {
   83|      2|    // Registers a panic hook that aborts the process before unwinding.
   84|      2|    // It is useful to abort before unwinding so that the fuzzer will then be
   85|      2|    // able to analyse the process stack frames to tell different bugs appart.
   86|      2|    //
   87|      2|    // HACK / FIXME: it would be better to use `-C panic=abort` but it's currently
   88|      2|    // impossible to build code using compiler plugins with this flag.
   89|      2|    // We will be able to remove this code when
   90|      2|    // https://github.com/rust-lang/cargo/issues/5423 is fixed.
   91|      2|    let default_hook = std::panic::take_hook();
   92|      2|    std::panic::set_hook(Box::new(move |panic_info| {
   93|       |        default_hook(panic_info);
   94|       |        std::process::abort();
   95|      2|    }));
   96|      2|    0
   97|      2|}

_RINvNtCselIyhuOc7xF_3nom6branch3altTINtNtB4_8internal3MapNCINvNtNtB4_5bytes8complete3tagReB1o_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtB4_10combinator5valueB1o_NtB1y_12ComparisonOpB1u_BT_E0EBy_By_By_IBz_NCINvNtNtB4_9character8complete4charB1o_B1u_E0NCIB2y_B1o_B31_B1u_B3I_E0EB3E_EEB1y_:
   41|  17.5k|pub fn alt<List>(l: List) -> Choice<List> {
   42|  17.5k|  Choice { parser: l }
   43|  17.5k|}
_RINvNtCselIyhuOc7xF_3nom6branch3altTINtNtB4_8internal3MapNCINvNtNtB4_5bytes8complete3tagReB1o_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtB4_10combinator5valueB1o_NtNvNtB1y_6parser12logical_expr9BooleanOpB1u_BT_E0EBy_EEB1y_:
   41|  25.2k|pub fn alt<List>(l: List) -> Choice<List> {
   42|  25.2k|  Choice { parser: l }
   43|  25.2k|}
_RINvNtCselIyhuOc7xF_3nom6branch3altTINtNtB4_8internal3MapNCINvNtNtB4_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtB4_10combinator5valueB1t_NtNtB1z_6parser16RootSelectorTypeB1v_BT_E0EBy_EEB1z_:
   41|  19.4k|pub fn alt<List>(l: List) -> Choice<List> {
   42|  19.4k|  Choice { parser: l }
   43|  19.4k|}
_RINvNtCselIyhuOc7xF_3nom6branch3altTINtNtB4_8internal3MapNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17wildcard_selectorNvMst_BX_NtBX_9Selectors3oneENvBV_21member_name_shorthandNCINvBV_14failed_segmentB21_E0EEBX_:
   41|  6.16k|pub fn alt<List>(l: List) -> Choice<List> {
   42|  6.16k|  Choice { parser: l }
   43|  6.16k|}
_RINvNtCselIyhuOc7xF_3nom6branch3altTINtNtB4_8internal4IntoNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser6numberNtBY_7LiteralNtNtBY_5error18InternalParseErrorEIBz_NvBW_14string_literalB1H_B1U_EINtBB_3MapNCINvNtNtB4_5bytes8complete3tagReB3F_B1U_E0NCINvNtB4_10combinator5valueB3F_B1H_B1U_B3a_E0EB30_B30_EEBY_:
   41|  23.2k|pub fn alt<List>(l: List) -> Choice<List> {
   42|  23.2k|  Choice { parser: l }
   43|  23.2k|}
_RINvNtCselIyhuOc7xF_3nom6branch3altTINtNtB4_8internal4IntoNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser7literalNtBY_10ComparableNtNtBY_5error18InternalParseErrorENCNvBW_10comparable0EEBY_:
   41|  4.31k|pub fn alt<List>(l: List) -> Choice<List> {
   42|  4.31k|  Choice { parser: l }
   43|  4.31k|}
_RINvNtCselIyhuOc7xF_3nom6branch3altTINtNtB4_8sequence8PrecededNCINvNtNtB4_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INvB13_6digit1B1y_B1A_EEB2B_EEB1E_:
   41|  39.7k|pub fn alt<List>(l: List) -> Choice<List> {
   42|  39.7k|  Choice { parser: l }
   43|  39.7k|}
_RINvNtCselIyhuOc7xF_3nom6branch3altTINtNtB4_8sequence8PrecededNCINvNtNtB4_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCNvNtB1E_6parser6string0EBy_EEB1E_:
   41|  49.9k|pub fn alt<List>(l: List) -> Choice<List> {
   42|  49.9k|  Choice { parser: l }
   43|  49.9k|}
_RINvNtCselIyhuOc7xF_3nom6branch3altTINtNtB4_8sequence8PrecededNCINvNtNtB4_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NvNvNtB1E_6parser5float10base_floatEB2B_EEB1E_:
   41|  23.2k|pub fn alt<List>(l: List) -> Choice<List> {
   42|  23.2k|  Choice { parser: l }
   43|  23.2k|}
_RINvNtCselIyhuOc7xF_3nom6branch3altTNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtBF_8SelectorNvBD_13name_selectorNtNtBF_5error18InternalParseErrorE0NCIBB_B1A_NvBD_17wildcard_selectorB28_E0NCIBB_B1A_NvBD_14slice_selectorB28_E0NCIBB_B1A_NvBD_14index_selectorB28_E0NCIBB_B1A_NCNvBD_8selector0B28_E0NvBD_15failed_selectorEEBF_:
   41|  27.5k|pub fn alt<List>(l: List) -> Choice<List> {
   42|  27.5k|  Choice { parser: l }
   43|  27.5k|}
_RINvNtCselIyhuOc7xF_3nom6branch3altTNCINvNtNtB4_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0By_EEB1e_:
   41|  23.2k|pub fn alt<List>(l: List) -> Choice<List> {
   42|  23.2k|  Choice { parser: l }
   43|  23.2k|}
_RINvNtCselIyhuOc7xF_3nom6branch3altTNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12filter_query0NCBA_s_0NCINvBC_28failed_segment_within_filterNtBE_7SegmentE0EEBE_:
   41|  17.9k|pub fn alt<List>(l: List) -> Choice<List> {
   42|  17.9k|  Choice { parser: l }
   43|  17.9k|}
_RINvNtCselIyhuOc7xF_3nom6branch3altTNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser13child_segment0INtNtB4_8sequence8PrecededNCINvNtNtB4_9character8complete4charReNtNtBE_5error18InternalParseErrorE0INtNtB4_10combinator3CutINtB2_6ChoiceTINtNtB4_8internal3MapNvBC_17wildcard_selectorNvMst_BE_NtBE_9Selectors3oneENvBC_21member_name_shorthandNCINvBC_14failed_segmentB4B_E0EEEEEEBE_:
   41|  6.16k|pub fn alt<List>(l: List) -> Choice<List> {
   42|  6.16k|  Choice { parser: l }
   43|  6.16k|}
_RINvNtCselIyhuOc7xF_3nom6branch3altTNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser18descendant_segment0INtNtB4_8internal3MapNvBC_17wildcard_selectorNvMst_BE_NtBE_9Selectors3oneENvBC_21member_name_shorthandNCINvBC_14failed_segmentB2t_E0EEBE_:
   41|  19.8k|pub fn alt<List>(l: List) -> Choice<List> {
   42|  19.8k|  Choice { parser: l }
   43|  19.8k|}
_RINvNtCselIyhuOc7xF_3nom6branch3altTNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser7segment0NCBA_s_0NCINvBC_14failed_segmentNtBE_7SegmentE0EEBE_:
   41|  1.90k|pub fn alt<List>(l: List) -> Choice<List> {
   42|  1.90k|  Choice { parser: l }
   43|  1.90k|}
_RINvXs1_NtCselIyhuOc7xF_3nom6branchINtB6_6ChoiceTINtNtB8_8internal3MapNCINvNtNtB8_5bytes8complete3tagReB1B_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtB8_10combinator5valueB1B_NtNvNtB1L_6parser12logical_expr9BooleanOpB1H_B16_E0EBL_EEINtBO_6ParserB1B_E7processINtBO_7OutputMNtBO_4EmitB4N_NtBO_9StreamingEEB1L_:
  127|  25.2k|      fn process<OM: crate::OutputMode>(
  128|  25.2k|        &mut self,
  129|  25.2k|        input: Input,
  130|  25.2k|      ) -> crate::PResult<OM, Input, Self::Output, Self::Error> {
  131|  25.2k|        match self.parser.0.process::<OM>(input.clone()) {
  132|  1.33k|          Ok(res) => Ok(res),
  133|      0|          Err(Err::Failure(e))=> Err(Err::Failure(e)),
  134|      0|          Err(Err::Incomplete(i))=> Err(Err::Incomplete(i)),
  135|  23.8k|          Err(Err::Error(e)) => alt_trait_inner!(1, self, input, e, $($id)+),
  136|       |        }
  137|  25.2k|      }
_RINvXs1_NtCselIyhuOc7xF_3nom6branchINtB6_6ChoiceTINtNtB8_8internal3MapNCINvNtNtB8_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtB8_10combinator5valueB1G_NtNtB1M_6parser16RootSelectorTypeB1I_B16_E0EBL_EEINtBO_6ParserB1G_E7processINtBO_7OutputMNtBO_4EmitB4G_NtBO_9StreamingEEB1M_:
  127|  19.4k|      fn process<OM: crate::OutputMode>(
  128|  19.4k|        &mut self,
  129|  19.4k|        input: Input,
  130|  19.4k|      ) -> crate::PResult<OM, Input, Self::Output, Self::Error> {
  131|  19.4k|        match self.parser.0.process::<OM>(input.clone()) {
  132|  15.6k|          Ok(res) => Ok(res),
  133|      0|          Err(Err::Failure(e))=> Err(Err::Failure(e)),
  134|      0|          Err(Err::Incomplete(i))=> Err(Err::Incomplete(i)),
  135|  3.82k|          Err(Err::Error(e)) => alt_trait_inner!(1, self, input, e, $($id)+),
  136|       |        }
  137|  19.4k|      }
_RINvXs1_NtCselIyhuOc7xF_3nom6branchINtB6_6ChoiceTINtNtB8_8internal4IntoNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser7literalNtB1b_10ComparableNtNtB1b_5error18InternalParseErrorENCNvB19_10comparable0EEINtBO_6ParserReE7processINtBO_7OutputMNtBO_4EmitB3L_NtBO_9StreamingEEB1b_:
  127|  4.31k|      fn process<OM: crate::OutputMode>(
  128|  4.31k|        &mut self,
  129|  4.31k|        input: Input,
  130|  4.31k|      ) -> crate::PResult<OM, Input, Self::Output, Self::Error> {
  131|  4.31k|        match self.parser.0.process::<OM>(input.clone()) {
  132|  1.92k|          Ok(res) => Ok(res),
  133|      0|          Err(Err::Failure(e))=> Err(Err::Failure(e)),
  134|      0|          Err(Err::Incomplete(i))=> Err(Err::Incomplete(i)),
  135|  2.38k|          Err(Err::Error(e)) => alt_trait_inner!(1, self, input, e, $($id)+),
  136|       |        }
  137|  4.31k|      }
_RINvXs1_NtCselIyhuOc7xF_3nom6branchINtB6_6ChoiceTINtNtB8_8sequence8PrecededNCINvNtNtB8_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCNvNtB1R_6parser6string0EBL_EEINtNtB8_8internal6ParserB1L_E7processINtB3m_7OutputMNtB3m_4EmitB49_NtB3m_9StreamingEEB1R_:
  127|  49.9k|      fn process<OM: crate::OutputMode>(
  128|  49.9k|        &mut self,
  129|  49.9k|        input: Input,
  130|  49.9k|      ) -> crate::PResult<OM, Input, Self::Output, Self::Error> {
  131|  49.9k|        match self.parser.0.process::<OM>(input.clone()) {
  132|  6.64k|          Ok(res) => Ok(res),
  133|      0|          Err(Err::Failure(e))=> Err(Err::Failure(e)),
  134|      0|          Err(Err::Incomplete(i))=> Err(Err::Incomplete(i)),
  135|  43.3k|          Err(Err::Error(e)) => alt_trait_inner!(1, self, input, e, $($id)+),
  136|       |        }
  137|  49.9k|      }
_RINvXs2_NtCselIyhuOc7xF_3nom6branchINtB6_6ChoiceTNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12filter_query0NCBN_s_0NCINvBP_28failed_segment_within_filterNtBR_7SegmentE0EEINtNtB8_8internal6ParserReE7processINtB2M_7OutputMNtB2M_4EmitB3x_NtB2M_9StreamingEEBR_:
  127|  17.9k|      fn process<OM: crate::OutputMode>(
  128|  17.9k|        &mut self,
  129|  17.9k|        input: Input,
  130|  17.9k|      ) -> crate::PResult<OM, Input, Self::Output, Self::Error> {
  131|  17.9k|        match self.parser.0.process::<OM>(input.clone()) {
  132|  11.3k|          Ok(res) => Ok(res),
  133|  1.23k|          Err(Err::Failure(e))=> Err(Err::Failure(e)),
  134|      0|          Err(Err::Incomplete(i))=> Err(Err::Incomplete(i)),
  135|  5.38k|          Err(Err::Error(e)) => alt_trait_inner!(1, self, input, e, $($id)+),
  136|       |        }
  137|  17.9k|      }
_RINvXs2_NtCselIyhuOc7xF_3nom6branchINtB6_6ChoiceTNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser7segment0NCBN_s_0NCINvBP_14failed_segmentNtBR_7SegmentE0EEINtNtB8_8internal6ParserReE7processINtB2s_7OutputMNtB2s_4EmitB3d_NtB2s_9StreamingEEBR_:
  127|  1.90k|      fn process<OM: crate::OutputMode>(
  128|  1.90k|        &mut self,
  129|  1.90k|        input: Input,
  130|  1.90k|      ) -> crate::PResult<OM, Input, Self::Output, Self::Error> {
  131|  1.90k|        match self.parser.0.process::<OM>(input.clone()) {
  132|  1.10k|          Ok(res) => Ok(res),
  133|     26|          Err(Err::Failure(e))=> Err(Err::Failure(e)),
  134|      0|          Err(Err::Incomplete(i))=> Err(Err::Incomplete(i)),
  135|    774|          Err(Err::Error(e)) => alt_trait_inner!(1, self, input, e, $($id)+),
  136|       |        }
  137|  1.90k|      }
_RINvXs4_NtCselIyhuOc7xF_3nom6branchINtB6_6ChoiceTINtNtB8_8internal4IntoNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser6numberNtB1b_7LiteralNtNtB1b_5error18InternalParseErrorEIBM_NvB19_14string_literalB1U_B28_EINtBO_3MapNCINvNtNtB8_5bytes8complete3tagReB3V_B28_E0NCINvNtB8_10combinator5valueB3V_B1U_B28_B3q_E0EB3g_B3g_EEINtBO_6ParserB3V_E7processINtBO_7OutputMNtBO_4EmitB5G_NtBO_9StreamingEEB1b_:
  127|  23.2k|      fn process<OM: crate::OutputMode>(
  128|  23.2k|        &mut self,
  129|  23.2k|        input: Input,
  130|  23.2k|      ) -> crate::PResult<OM, Input, Self::Output, Self::Error> {
  131|  23.2k|        match self.parser.0.process::<OM>(input.clone()) {
  132|    777|          Ok(res) => Ok(res),
  133|      0|          Err(Err::Failure(e))=> Err(Err::Failure(e)),
  134|      0|          Err(Err::Incomplete(i))=> Err(Err::Incomplete(i)),
  135|  22.4k|          Err(Err::Error(e)) => alt_trait_inner!(1, self, input, e, $($id)+),
  136|       |        }
  137|  23.2k|      }
_RINvXs5_NtCselIyhuOc7xF_3nom6branchINtB6_6ChoiceTINtNtB8_8internal3MapNCINvNtNtB8_5bytes8complete3tagReB1B_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtB8_10combinator5valueB1B_NtB1L_12ComparisonOpB1H_B16_E0EBL_BL_BL_IBM_NCINvNtNtB8_9character8complete4charB1B_B1H_E0NCIB2L_B1B_B3e_B1H_B3W_E0EB3S_EEINtBO_6ParserB1B_E7processINtBO_7OutputMNtBO_4EmitB5Q_NtBO_9StreamingEEB1L_:
  127|  17.5k|      fn process<OM: crate::OutputMode>(
  128|  17.5k|        &mut self,
  129|  17.5k|        input: Input,
  130|  17.5k|      ) -> crate::PResult<OM, Input, Self::Output, Self::Error> {
  131|  17.5k|        match self.parser.0.process::<OM>(input.clone()) {
  132|    908|          Ok(res) => Ok(res),
  133|      0|          Err(Err::Failure(e))=> Err(Err::Failure(e)),
  134|      0|          Err(Err::Incomplete(i))=> Err(Err::Incomplete(i)),
  135|  16.6k|          Err(Err::Error(e)) => alt_trait_inner!(1, self, input, e, $($id)+),
  136|       |        }
  137|  17.5k|      }
_RINvXs5_NtCselIyhuOc7xF_3nom6branchINtB6_6ChoiceTNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtBS_8SelectorNvBQ_13name_selectorNtNtBS_5error18InternalParseErrorE0NCIBO_B1N_NvBQ_17wildcard_selectorB2l_E0NCIBO_B1N_NvBQ_14slice_selectorB2l_E0NCIBO_B1N_NvBQ_14index_selectorB2l_E0NCIBO_B1N_NCNvBQ_8selector0B2l_E0NvBQ_15failed_selectorEEINtNtB8_8internal6ParserReE7processINtB5I_7OutputMNtB5I_4EmitB6t_NtB5I_9StreamingEEBS_:
  127|  27.5k|      fn process<OM: crate::OutputMode>(
  128|  27.5k|        &mut self,
  129|  27.5k|        input: Input,
  130|  27.5k|      ) -> crate::PResult<OM, Input, Self::Output, Self::Error> {
  131|  27.5k|        match self.parser.0.process::<OM>(input.clone()) {
  132|  6.64k|          Ok(res) => Ok(res),
  133|      0|          Err(Err::Failure(e))=> Err(Err::Failure(e)),
  134|      0|          Err(Err::Incomplete(i))=> Err(Err::Incomplete(i)),
  135|  20.8k|          Err(Err::Error(e)) => alt_trait_inner!(1, self, input, e, $($id)+),
  136|       |        }
  137|  27.5k|      }
_RNCINvXs1_NtCselIyhuOc7xF_3nom6branchINtB8_6ChoiceTINtNtBa_8internal3MapNCINvNtNtBa_5bytes8complete3tagReB1D_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtBa_10combinator5valueB1D_NtNvNtB1N_6parser12logical_expr9BooleanOpB1J_B18_E0EBN_EEINtBQ_6ParserB1D_E7processINtBQ_7OutputMNtBQ_4EmitB4P_NtBQ_9StreamingEE0B1N_:
  149|  20.4k|        succ!($it, alt_trait_inner!($self, $input, <OM::Error as crate::Mode>::combine($err, e, |e1, e2| e1.or(e2)), $($id)+))
_RNCINvXs1_NtCselIyhuOc7xF_3nom6branchINtB8_6ChoiceTINtNtBa_8internal3MapNCINvNtNtBa_5bytes8complete3tagReB1D_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtBa_10combinator5valueB1D_NtNvNtB1N_6parser12logical_expr9BooleanOpB1J_B18_E0EBN_EEINtBQ_6ParserB1D_E7processINtBQ_7OutputMNtBQ_4EmitB4P_NtBQ_9StreamingEEs_0B1N_:
  154|  20.4k|    Err(Err::Error(<OM::Error as crate::Mode>::map($err, |err| Error::append($input, ErrorKind::Alt, err))))
_RNCINvXs1_NtCselIyhuOc7xF_3nom6branchINtB8_6ChoiceTINtNtBa_8sequence8PrecededNCINvNtNtBa_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INvB1i_6digit1B1N_B1P_EEB2Q_EEINtNtBa_8internal6ParserB1N_E7processINtB3n_7OutputMNtB3n_5CheckNtB3n_4EmitNtB3n_9StreamingEE0B1T_:
  149|  28.8k|        succ!($it, alt_trait_inner!($self, $input, <OM::Error as crate::Mode>::combine($err, e, |e1, e2| e1.or(e2)), $($id)+))
_RNCINvXs1_NtCselIyhuOc7xF_3nom6branchINtB8_6ChoiceTINtNtBa_8sequence8PrecededNCINvNtNtBa_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INvB1i_6digit1B1N_B1P_EEB2Q_EEINtNtBa_8internal6ParserB1N_E7processINtB3n_7OutputMNtB3n_5CheckNtB3n_4EmitNtB3n_9StreamingEEs_0B1T_:
  154|  28.8k|    Err(Err::Error(<OM::Error as crate::Mode>::map($err, |err| Error::append($input, ErrorKind::Alt, err))))
_RNCINvXs1_NtCselIyhuOc7xF_3nom6branchINtB8_6ChoiceTINtNtBa_8sequence8PrecededNCINvNtNtBa_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCNvNtB1T_6parser6string0EBN_EEINtNtBa_8internal6ParserB1N_E7processINtB3o_7OutputMNtB3o_4EmitB4b_NtB3o_9StreamingEE0B1T_:
  149|  41.3k|        succ!($it, alt_trait_inner!($self, $input, <OM::Error as crate::Mode>::combine($err, e, |e1, e2| e1.or(e2)), $($id)+))
_RNCINvXs1_NtCselIyhuOc7xF_3nom6branchINtB8_6ChoiceTINtNtBa_8sequence8PrecededNCINvNtNtBa_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCNvNtB1T_6parser6string0EBN_EEINtNtBa_8internal6ParserB1N_E7processINtB3o_7OutputMNtB3o_4EmitB4b_NtB3o_9StreamingEEs_0B1T_:
  154|  41.3k|    Err(Err::Error(<OM::Error as crate::Mode>::map($err, |err| Error::append($input, ErrorKind::Alt, err))))
_RNCINvXs1_NtCselIyhuOc7xF_3nom6branchINtB8_6ChoiceTINtNtBa_8sequence8PrecededNCINvNtNtBa_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NvNvNtB1T_6parser5float10base_floatEB2Q_EEINtNtBa_8internal6ParserB1N_E7processINtB3z_7OutputMNtB3z_5CheckNtB3z_4EmitNtB3z_9StreamingEE0B1T_:
  149|  22.4k|        succ!($it, alt_trait_inner!($self, $input, <OM::Error as crate::Mode>::combine($err, e, |e1, e2| e1.or(e2)), $($id)+))
_RNCINvXs1_NtCselIyhuOc7xF_3nom6branchINtB8_6ChoiceTINtNtBa_8sequence8PrecededNCINvNtNtBa_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NvNvNtB1T_6parser5float10base_floatEB2Q_EEINtNtBa_8internal6ParserB1N_E7processINtB3z_7OutputMNtB3z_5CheckNtB3z_4EmitNtB3z_9StreamingEEs_0B1T_:
  154|  22.4k|    Err(Err::Error(<OM::Error as crate::Mode>::map($err, |err| Error::append($input, ErrorKind::Alt, err))))
_RNCINvXs4_NtCselIyhuOc7xF_3nom6branchINtB8_6ChoiceTINtNtBa_8internal4IntoNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser6numberNtB1d_7LiteralNtNtB1d_5error18InternalParseErrorEIBO_NvB1b_14string_literalB1W_B2a_EINtBQ_3MapNCINvNtNtBa_5bytes8complete3tagReB3X_B2a_E0NCINvNtBa_10combinator5valueB3X_B1W_B2a_B3s_E0EB3i_B3i_EEINtBQ_6ParserB3X_E7processINtBQ_7OutputMNtBQ_4EmitB5I_NtBQ_9StreamingEE0B1d_:
  149|  19.4k|        succ!($it, alt_trait_inner!($self, $input, <OM::Error as crate::Mode>::combine($err, e, |e1, e2| e1.or(e2)), $($id)+))
_RNCINvXs4_NtCselIyhuOc7xF_3nom6branchINtB8_6ChoiceTINtNtBa_8internal4IntoNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser6numberNtB1d_7LiteralNtNtB1d_5error18InternalParseErrorEIBO_NvB1b_14string_literalB1W_B2a_EINtBQ_3MapNCINvNtNtBa_5bytes8complete3tagReB3X_B2a_E0NCINvNtBa_10combinator5valueB3X_B1W_B2a_B3s_E0EB3i_B3i_EEINtBQ_6ParserB3X_E7processINtBQ_7OutputMNtBQ_4EmitB5I_NtBQ_9StreamingEEs0_0B1d_:
  149|  19.4k|        succ!($it, alt_trait_inner!($self, $input, <OM::Error as crate::Mode>::combine($err, e, |e1, e2| e1.or(e2)), $($id)+))
_RNCINvXs4_NtCselIyhuOc7xF_3nom6branchINtB8_6ChoiceTINtNtBa_8internal4IntoNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser6numberNtB1d_7LiteralNtNtB1d_5error18InternalParseErrorEIBO_NvB1b_14string_literalB1W_B2a_EINtBQ_3MapNCINvNtNtBa_5bytes8complete3tagReB3X_B2a_E0NCINvNtBa_10combinator5valueB3X_B1W_B2a_B3s_E0EB3i_B3i_EEINtBQ_6ParserB3X_E7processINtBQ_7OutputMNtBQ_4EmitB5I_NtBQ_9StreamingEEs1_0B1d_:
  149|  19.4k|        succ!($it, alt_trait_inner!($self, $input, <OM::Error as crate::Mode>::combine($err, e, |e1, e2| e1.or(e2)), $($id)+))
_RNCINvXs4_NtCselIyhuOc7xF_3nom6branchINtB8_6ChoiceTINtNtBa_8internal4IntoNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser6numberNtB1d_7LiteralNtNtB1d_5error18InternalParseErrorEIBO_NvB1b_14string_literalB1W_B2a_EINtBQ_3MapNCINvNtNtBa_5bytes8complete3tagReB3X_B2a_E0NCINvNtBa_10combinator5valueB3X_B1W_B2a_B3s_E0EB3i_B3i_EEINtBQ_6ParserB3X_E7processINtBQ_7OutputMNtBQ_4EmitB5I_NtBQ_9StreamingEEs2_0B1d_:
  154|  19.4k|    Err(Err::Error(<OM::Error as crate::Mode>::map($err, |err| Error::append($input, ErrorKind::Alt, err))))
_RNCINvXs4_NtCselIyhuOc7xF_3nom6branchINtB8_6ChoiceTINtNtBa_8internal4IntoNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser6numberNtB1d_7LiteralNtNtB1d_5error18InternalParseErrorEIBO_NvB1b_14string_literalB1W_B2a_EINtBQ_3MapNCINvNtNtBa_5bytes8complete3tagReB3X_B2a_E0NCINvNtBa_10combinator5valueB3X_B1W_B2a_B3s_E0EB3i_B3i_EEINtBQ_6ParserB3X_E7processINtBQ_7OutputMNtBQ_4EmitB5I_NtBQ_9StreamingEEs_0B1d_:
  149|  19.4k|        succ!($it, alt_trait_inner!($self, $input, <OM::Error as crate::Mode>::combine($err, e, |e1, e2| e1.or(e2)), $($id)+))
_RNCINvXs5_NtCselIyhuOc7xF_3nom6branchINtB8_6ChoiceTINtNtBa_8internal3MapNCINvNtNtBa_5bytes8complete3tagReB1D_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtBa_10combinator5valueB1D_NtB1N_12ComparisonOpB1J_B18_E0EBN_BN_BN_IBO_NCINvNtNtBa_9character8complete4charB1D_B1J_E0NCIB2N_B1D_B3g_B1J_B3Y_E0EB3U_EEINtBQ_6ParserB1D_E7processINtBQ_7OutputMNtBQ_4EmitB5S_NtBQ_9StreamingEE0B1N_:
  149|  13.2k|        succ!($it, alt_trait_inner!($self, $input, <OM::Error as crate::Mode>::combine($err, e, |e1, e2| e1.or(e2)), $($id)+))
_RNCINvXs5_NtCselIyhuOc7xF_3nom6branchINtB8_6ChoiceTINtNtBa_8internal3MapNCINvNtNtBa_5bytes8complete3tagReB1D_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtBa_10combinator5valueB1D_NtB1N_12ComparisonOpB1J_B18_E0EBN_BN_BN_IBO_NCINvNtNtBa_9character8complete4charB1D_B1J_E0NCIB2N_B1D_B3g_B1J_B3Y_E0EB3U_EEINtBQ_6ParserB1D_E7processINtBQ_7OutputMNtBQ_4EmitB5S_NtBQ_9StreamingEEs0_0B1N_:
  149|  13.2k|        succ!($it, alt_trait_inner!($self, $input, <OM::Error as crate::Mode>::combine($err, e, |e1, e2| e1.or(e2)), $($id)+))
_RNCINvXs5_NtCselIyhuOc7xF_3nom6branchINtB8_6ChoiceTINtNtBa_8internal3MapNCINvNtNtBa_5bytes8complete3tagReB1D_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtBa_10combinator5valueB1D_NtB1N_12ComparisonOpB1J_B18_E0EBN_BN_BN_IBO_NCINvNtNtBa_9character8complete4charB1D_B1J_E0NCIB2N_B1D_B3g_B1J_B3Y_E0EB3U_EEINtBQ_6ParserB1D_E7processINtBQ_7OutputMNtBQ_4EmitB5S_NtBQ_9StreamingEEs1_0B1N_:
  149|  13.2k|        succ!($it, alt_trait_inner!($self, $input, <OM::Error as crate::Mode>::combine($err, e, |e1, e2| e1.or(e2)), $($id)+))
_RNCINvXs5_NtCselIyhuOc7xF_3nom6branchINtB8_6ChoiceTINtNtBa_8internal3MapNCINvNtNtBa_5bytes8complete3tagReB1D_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtBa_10combinator5valueB1D_NtB1N_12ComparisonOpB1J_B18_E0EBN_BN_BN_IBO_NCINvNtNtBa_9character8complete4charB1D_B1J_E0NCIB2N_B1D_B3g_B1J_B3Y_E0EB3U_EEINtBQ_6ParserB1D_E7processINtBQ_7OutputMNtBQ_4EmitB5S_NtBQ_9StreamingEEs2_0B1N_:
  149|  13.2k|        succ!($it, alt_trait_inner!($self, $input, <OM::Error as crate::Mode>::combine($err, e, |e1, e2| e1.or(e2)), $($id)+))
_RNCINvXs5_NtCselIyhuOc7xF_3nom6branchINtB8_6ChoiceTINtNtBa_8internal3MapNCINvNtNtBa_5bytes8complete3tagReB1D_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtBa_10combinator5valueB1D_NtB1N_12ComparisonOpB1J_B18_E0EBN_BN_BN_IBO_NCINvNtNtBa_9character8complete4charB1D_B1J_E0NCIB2N_B1D_B3g_B1J_B3Y_E0EB3U_EEINtBQ_6ParserB1D_E7processINtBQ_7OutputMNtBQ_4EmitB5S_NtBQ_9StreamingEEs3_0B1N_:
  154|  13.2k|    Err(Err::Error(<OM::Error as crate::Mode>::map($err, |err| Error::append($input, ErrorKind::Alt, err))))
_RNCINvXs5_NtCselIyhuOc7xF_3nom6branchINtB8_6ChoiceTINtNtBa_8internal3MapNCINvNtNtBa_5bytes8complete3tagReB1D_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtBa_10combinator5valueB1D_NtB1N_12ComparisonOpB1J_B18_E0EBN_BN_BN_IBO_NCINvNtNtBa_9character8complete4charB1D_B1J_E0NCIB2N_B1D_B3g_B1J_B3Y_E0EB3U_EEINtBQ_6ParserB1D_E7processINtBQ_7OutputMNtBQ_4EmitB5S_NtBQ_9StreamingEEs_0B1N_:
  149|  13.2k|        succ!($it, alt_trait_inner!($self, $input, <OM::Error as crate::Mode>::combine($err, e, |e1, e2| e1.or(e2)), $($id)+))
_RINvXs1_NtCselIyhuOc7xF_3nom6branchINtB6_6ChoiceTINtNtB8_8sequence8PrecededNCINvNtNtB8_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INvB1g_6digit1B1L_B1N_EEB2O_EEINtNtB8_8internal6ParserB1L_E7processINtB3l_7OutputMNtB3l_5CheckNtB3l_4EmitNtB3l_9StreamingEEB1R_:
  127|  39.7k|      fn process<OM: crate::OutputMode>(
  128|  39.7k|        &mut self,
  129|  39.7k|        input: Input,
  130|  39.7k|      ) -> crate::PResult<OM, Input, Self::Output, Self::Error> {
  131|  39.7k|        match self.parser.0.process::<OM>(input.clone()) {
  132|  4.81k|          Ok(res) => Ok(res),
  133|      0|          Err(Err::Failure(e))=> Err(Err::Failure(e)),
  134|      0|          Err(Err::Incomplete(i))=> Err(Err::Incomplete(i)),
  135|  34.9k|          Err(Err::Error(e)) => alt_trait_inner!(1, self, input, e, $($id)+),
  136|       |        }
  137|  39.7k|      }
_RINvXs1_NtCselIyhuOc7xF_3nom6branchINtB6_6ChoiceTINtNtB8_8sequence8PrecededNCINvNtNtB8_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NvNvNtB1R_6parser5float10base_floatEB2O_EEINtNtB8_8internal6ParserB1L_E7processINtB3x_7OutputMNtB3x_5CheckNtB3x_4EmitNtB3x_9StreamingEEB1R_:
  127|  23.2k|      fn process<OM: crate::OutputMode>(
  128|  23.2k|        &mut self,
  129|  23.2k|        input: Input,
  130|  23.2k|      ) -> crate::PResult<OM, Input, Self::Output, Self::Error> {
  131|  23.2k|        match self.parser.0.process::<OM>(input.clone()) {
  132|    405|          Ok(res) => Ok(res),
  133|      0|          Err(Err::Failure(e))=> Err(Err::Failure(e)),
  134|      0|          Err(Err::Incomplete(i))=> Err(Err::Incomplete(i)),
  135|  22.8k|          Err(Err::Error(e)) => alt_trait_inner!(1, self, input, e, $($id)+),
  136|       |        }
  137|  23.2k|      }
_RINvXs1_NtCselIyhuOc7xF_3nom6branchINtB6_6ChoiceTNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser13child_segment0INtNtB8_8sequence8PrecededNCINvNtNtB8_9character8complete4charReNtNtBR_5error18InternalParseErrorE0INtNtB8_10combinator3CutIBy_TINtNtB8_8internal3MapNvBP_17wildcard_selectorNvMst_BR_NtBR_9Selectors3oneENvBP_21member_name_shorthandNCINvBP_14failed_segmentB4F_E0EEEEEEINtB3Q_6ParserB2J_E7processINtB3Q_7OutputMNtB3Q_4EmitB6H_NtB3Q_9StreamingEEBR_:
  127|  6.16k|      fn process<OM: crate::OutputMode>(
  128|  6.16k|        &mut self,
  129|  6.16k|        input: Input,
  130|  6.16k|      ) -> crate::PResult<OM, Input, Self::Output, Self::Error> {
  131|  6.16k|        match self.parser.0.process::<OM>(input.clone()) {
  132|  6.04k|          Ok(res) => Ok(res),
  133|    123|          Err(Err::Failure(e))=> Err(Err::Failure(e)),
  134|      0|          Err(Err::Incomplete(i))=> Err(Err::Incomplete(i)),
  135|      0|          Err(Err::Error(e)) => alt_trait_inner!(1, self, input, e, $($id)+),
  136|       |        }
  137|  6.16k|      }
_RINvXs3_NtCselIyhuOc7xF_3nom6branchINtB6_6ChoiceTNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser18descendant_segment0INtNtB8_8internal3MapNvBP_17wildcard_selectorNvMst_BR_NtBR_9Selectors3oneENvBP_21member_name_shorthandNCINvBP_14failed_segmentB2G_E0EEINtB1R_6ParserReE7processINtB1R_7OutputMNtB1R_4EmitB4C_NtB1R_9StreamingEEBR_:
  127|  13.6k|      fn process<OM: crate::OutputMode>(
  128|  13.6k|        &mut self,
  129|  13.6k|        input: Input,
  130|  13.6k|      ) -> crate::PResult<OM, Input, Self::Output, Self::Error> {
  131|  13.6k|        match self.parser.0.process::<OM>(input.clone()) {
  132|  12.4k|          Ok(res) => Ok(res),
  133|  1.25k|          Err(Err::Failure(e))=> Err(Err::Failure(e)),
  134|      0|          Err(Err::Incomplete(i))=> Err(Err::Incomplete(i)),
  135|      0|          Err(Err::Error(e)) => alt_trait_inner!(1, self, input, e, $($id)+),
  136|       |        }
  137|  13.6k|      }

_RINvNtNtCselIyhuOc7xF_3nom5bytes8complete11tag_no_caseReBQ_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEBZ_:
   68|  23.2k|pub fn tag_no_case<T, I, Error: ParseError<I>>(tag: T) -> impl Fn(I) -> IResult<I, I, Error>
   69|  23.2k|where
   70|  23.2k|  I: Input + Compare<T>,
   71|  23.2k|  T: Input + Clone,
   72|  23.2k|{
   73|       |  move |i: I| {
   74|       |    let mut parser = super::TagNoCase {
   75|       |      tag: tag.clone(),
   76|       |      e: PhantomData,
   77|       |    };
   78|       |
   79|       |    parser.process::<OutputM<Emit, Emit, Complete>>(i)
   80|       |  }
   81|  23.2k|}
_RINvNtNtCselIyhuOc7xF_3nom5bytes8complete3tagReBH_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEBQ_:
   32|   231k|pub fn tag<T, I, Error: ParseError<I>>(tag: T) -> impl Fn(I) -> IResult<I, I, Error>
   33|   231k|where
   34|   231k|  I: Input + Compare<T>,
   35|   231k|  T: Input + Clone,
   36|   231k|{
   37|       |  move |i: I| {
   38|       |    let mut parser = super::Tag {
   39|       |      tag: tag.clone(),
   40|       |      e: PhantomData,
   41|       |    };
   42|       |
   43|       |    parser.process::<OutputM<Emit, Emit, Complete>>(i)
   44|       |  }
   45|   231k|}
_RNCINvNtNtCselIyhuOc7xF_3nom5bytes8complete11tag_no_caseReBS_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0B11_:
   73|    777|  move |i: I| {
   74|    777|    let mut parser = super::TagNoCase {
   75|    777|      tag: tag.clone(),
   76|    777|      e: PhantomData,
   77|    777|    };
   78|    777|
   79|    777|    parser.process::<OutputM<Emit, Emit, Complete>>(i)
   80|    777|  }
_RNCINvNtNtCselIyhuOc7xF_3nom5bytes8complete3tagReBJ_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0BS_:
   37|   217k|  move |i: I| {
   38|   217k|    let mut parser = super::Tag {
   39|   217k|      tag: tag.clone(),
   40|   217k|      e: PhantomData,
   41|   217k|    };
   42|   217k|
   43|   217k|    parser.process::<OutputM<Emit, Emit, Complete>>(i)
   44|   217k|  }

_RINvXNtCselIyhuOc7xF_3nom5bytesINtB3_3TagReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtNtB5_8internal6ParserBD_E7processINtB1I_7OutputMNtB1I_4EmitB2u_NtB1I_8CompleteEEBJ_:
   71|   217k|  fn process<OM: OutputMode>(&mut self, i: I) -> crate::PResult<OM, I, Self::Output, Self::Error> {
   72|   217k|    let tag_len = self.tag.input_len();
   73|   217k|    let t = self.tag.clone();
   74|   217k|
   75|   217k|    match i.compare(t) {
   76|  23.5k|      CompareResult::Ok => Ok((i.take_from(tag_len), OM::Output::bind(|| i.take(tag_len)))),
   77|       |      CompareResult::Incomplete => {
   78|      0|        if OM::Incomplete::is_streaming() {
   79|      0|          Err(Err::Incomplete(Needed::new(tag_len - i.input_len())))
   80|       |        } else {
   81|      0|          Err(Err::Error(OM::Error::bind(|| {
   82|       |            let e: ErrorKind = ErrorKind::Tag;
   83|       |            Error::from_error_kind(i, e)
   84|      0|          })))
   85|       |        }
   86|       |      }
   87|   193k|      CompareResult::Error => Err(Err::Error(OM::Error::bind(|| {
   88|       |        let e: ErrorKind = ErrorKind::Tag;
   89|       |        Error::from_error_kind(i, e)
   90|   193k|      }))),
   91|       |    }
   92|   217k|  }
_RINvXs_NtCselIyhuOc7xF_3nom5bytesINtB5_9TagNoCaseReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtNtB7_8internal6ParserBL_E7processINtB1Q_7OutputMNtB1Q_4EmitB2C_NtB1Q_8CompleteEEBR_:
  140|    777|  fn process<OM: OutputMode>(&mut self, i: I) -> crate::PResult<OM, I, Self::Output, Self::Error> {
  141|    777|    let tag_len = self.tag.input_len();
  142|    777|    let t = self.tag.clone();
  143|    777|
  144|    777|    match i.compare_no_case(t) {
  145|      0|      CompareResult::Ok => Ok((i.take_from(tag_len), OM::Output::bind(|| i.take(tag_len)))),
  146|       |      CompareResult::Incomplete => {
  147|      0|        if OM::Incomplete::is_streaming() {
  148|      0|          Err(Err::Incomplete(Needed::new(tag_len - i.input_len())))
  149|       |        } else {
  150|      0|          Err(Err::Error(OM::Error::bind(|| {
  151|       |            let e: ErrorKind = ErrorKind::Tag;
  152|       |            Error::from_error_kind(i, e)
  153|      0|          })))
  154|       |        }
  155|       |      }
  156|    777|      CompareResult::Error => Err(Err::Error(OM::Error::bind(|| {
  157|       |        let e: ErrorKind = ErrorKind::Tag;
  158|       |        Error::from_error_kind(i, e)
  159|    777|      }))),
  160|       |    }
  161|    777|  }
_RNCINvXNtCselIyhuOc7xF_3nom5bytesINtB5_3TagReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtNtB7_8internal6ParserBF_E7processINtB1K_7OutputMNtB1K_4EmitB2w_NtB1K_8CompleteEE0BL_:
   76|  23.5k|      CompareResult::Ok => Ok((i.take_from(tag_len), OM::Output::bind(|| i.take(tag_len)))),
_RNCINvXNtCselIyhuOc7xF_3nom5bytesINtB5_3TagReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtNtB7_8internal6ParserBF_E7processINtB1K_7OutputMNtB1K_4EmitB2w_NtB1K_8CompleteEEs0_0BL_:
   87|   193k|      CompareResult::Error => Err(Err::Error(OM::Error::bind(|| {
   88|   193k|        let e: ErrorKind = ErrorKind::Tag;
   89|   193k|        Error::from_error_kind(i, e)
   90|   193k|      }))),
_RNCINvXs_NtCselIyhuOc7xF_3nom5bytesINtB7_9TagNoCaseReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtNtB9_8internal6ParserBN_E7processINtB1S_7OutputMNtB1S_4EmitB2E_NtB1S_8CompleteEEs0_0BT_:
  156|    777|      CompareResult::Error => Err(Err::Error(OM::Error::bind(|| {
  157|    777|        let e: ErrorKind = ErrorKind::Tag;
  158|    777|        Error::from_error_kind(i, e)
  159|    777|      }))),

_RINvNtNtCselIyhuOc7xF_3nom9character8complete4charReINtNtB6_5error5ErrorBM_EECsiZ6QsNdkp8Z_15rsonpath_syntax:
   33|  45.5k|pub fn char<I, Error: ParseError<I>>(c: char) -> impl FnMut(I) -> IResult<I, char, Error>
   34|  45.5k|where
   35|  45.5k|  I: Input,
   36|  45.5k|  <I as Input>::Item: AsChar,
   37|  45.5k|{
   38|  45.5k|  let mut parser = super::char(c);
   39|       |  move |i: I| parser.process::<OutputM<Emit, Emit, Complete>>(i)
   40|  45.5k|}
_RINvNtNtCselIyhuOc7xF_3nom9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEBS_:
   33|   394k|pub fn char<I, Error: ParseError<I>>(c: char) -> impl FnMut(I) -> IResult<I, char, Error>
   34|   394k|where
   35|   394k|  I: Input,
   36|   394k|  <I as Input>::Item: AsChar,
   37|   394k|{
   38|   394k|  let mut parser = super::char(c);
   39|       |  move |i: I| parser.process::<OutputM<Emit, Emit, Complete>>(i)
   40|   394k|}
_RINvNtNtCselIyhuOc7xF_3nom9character8complete4charReuECsiZ6QsNdkp8Z_15rsonpath_syntax:
   33|  31.0k|pub fn char<I, Error: ParseError<I>>(c: char) -> impl FnMut(I) -> IResult<I, char, Error>
   34|  31.0k|where
   35|  31.0k|  I: Input,
   36|  31.0k|  <I as Input>::Item: AsChar,
   37|  31.0k|{
   38|  31.0k|  let mut parser = super::char(c);
   39|       |  move |i: I| parser.process::<OutputM<Emit, Emit, Complete>>(i)
   40|  31.0k|}
_RINvNtNtCselIyhuOc7xF_3nom9character8complete6digit1ReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEBU_:
  410|  63.3k|pub fn digit1<T, E: ParseError<T>>(input: T) -> IResult<T, T, E>
  411|  63.3k|where
  412|  63.3k|  T: Input,
  413|  63.3k|  <T as Input>::Item: AsChar,
  414|  63.3k|{
  415|  63.3k|  input.split_at_position1_complete(|item| !item.is_dec_digit(), ErrorKind::Digit)
  416|  63.3k|}
_RINvNtNtCselIyhuOc7xF_3nom9character8complete6one_ofReBO_uECsiZ6QsNdkp8Z_15rsonpath_syntax:
   79|  36.0k|pub fn one_of<I, T, Error: ParseError<I>>(list: T) -> impl FnMut(I) -> IResult<I, char, Error>
   80|  36.0k|where
   81|  36.0k|  I: Input,
   82|  36.0k|  <I as Input>::Item: AsChar,
   83|  36.0k|  T: FindToken<char>,
   84|  36.0k|{
   85|  36.0k|  let mut parser = super::one_of(list);
   86|       |  move |i: I| parser.process::<OutputM<Emit, Emit, Complete>>(i)
   87|  36.0k|}
_RNCINvNtNtCselIyhuOc7xF_3nom9character8complete4charReINtNtB8_5error5ErrorBO_EE0CsiZ6QsNdkp8Z_15rsonpath_syntax:
   39|  45.5k|  move |i: I| parser.process::<OutputM<Emit, Emit, Complete>>(i)
_RNCINvNtNtCselIyhuOc7xF_3nom9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0BU_:
   39|   291k|  move |i: I| parser.process::<OutputM<Emit, Emit, Complete>>(i)
_RNCINvNtNtCselIyhuOc7xF_3nom9character8complete4charReuE0CsiZ6QsNdkp8Z_15rsonpath_syntax:
   39|  31.0k|  move |i: I| parser.process::<OutputM<Emit, Emit, Complete>>(i)
_RNCINvNtNtCselIyhuOc7xF_3nom9character8complete6digit1ReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0BW_:
  415|   326k|  input.split_at_position1_complete(|item| !item.is_dec_digit(), ErrorKind::Digit)
_RNCINvNtNtCselIyhuOc7xF_3nom9character8complete6one_ofReBQ_uE0CsiZ6QsNdkp8Z_15rsonpath_syntax:
   86|  36.0k|  move |i: I| parser.process::<OutputM<Emit, Emit, Complete>>(i)

_RINvXNtCselIyhuOc7xF_3nom9characterINtB3_4CharINtNtB5_5error5ErrorReEEINtNtB5_8internal6ParserB12_E7processINtB19_7OutputMNtB19_4EmitB1W_NtB19_8CompleteEECsiZ6QsNdkp8Z_15rsonpath_syntax:
  120|  45.5k|  fn process<OM: crate::OutputMode>(
  121|  45.5k|    &mut self,
  122|  45.5k|    i: I,
  123|  45.5k|  ) -> crate::PResult<OM, I, Self::Output, Self::Error> {
  124|  45.5k|    match (i).iter_elements().next().map(|t| {
  125|       |      let b = t.as_char() == self.c;
  126|       |      (&self.c, b)
  127|  45.5k|    }) {
  128|       |      None => {
  129|      0|        if OM::Incomplete::is_streaming() {
  130|      0|          Err(Err::Incomplete(Needed::new(self.c.len() - i.input_len())))
  131|       |        } else {
  132|      0|          Err(Err::Error(OM::Error::bind(|| Error::from_char(i, self.c))))
  133|       |        }
  134|       |      }
  135|  18.4k|      Some((_, false)) => Err(Err::Error(OM::Error::bind(|| Error::from_char(i, self.c)))),
  136|  27.1k|      Some((c, true)) => Ok((i.take_from(c.len()), OM::Output::bind(|| c.as_char()))),
  137|       |    }
  138|  45.5k|  }
_RINvXNtCselIyhuOc7xF_3nom9characterINtB3_4CharNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtNtB5_8internal6ParserReE7processINtB1L_7OutputMNtB1L_4EmitB2w_NtB1L_8CompleteEEBM_:
  120|   291k|  fn process<OM: crate::OutputMode>(
  121|   291k|    &mut self,
  122|   291k|    i: I,
  123|   291k|  ) -> crate::PResult<OM, I, Self::Output, Self::Error> {
  124|   291k|    match (i).iter_elements().next().map(|t| {
  125|       |      let b = t.as_char() == self.c;
  126|       |      (&self.c, b)
  127|   291k|    }) {
  128|       |      None => {
  129|      0|        if OM::Incomplete::is_streaming() {
  130|      0|          Err(Err::Incomplete(Needed::new(self.c.len() - i.input_len())))
  131|       |        } else {
  132|      0|          Err(Err::Error(OM::Error::bind(|| Error::from_char(i, self.c))))
  133|       |        }
  134|       |      }
  135|   212k|      Some((_, false)) => Err(Err::Error(OM::Error::bind(|| Error::from_char(i, self.c)))),
  136|  78.7k|      Some((c, true)) => Ok((i.take_from(c.len()), OM::Output::bind(|| c.as_char()))),
  137|       |    }
  138|   291k|  }
_RINvXNtCselIyhuOc7xF_3nom9characterINtB3_4CharuEINtNtB5_8internal6ParserReE7processINtBN_7OutputMNtBN_4EmitB1x_NtBN_8CompleteEECsiZ6QsNdkp8Z_15rsonpath_syntax:
  120|  31.0k|  fn process<OM: crate::OutputMode>(
  121|  31.0k|    &mut self,
  122|  31.0k|    i: I,
  123|  31.0k|  ) -> crate::PResult<OM, I, Self::Output, Self::Error> {
  124|  31.0k|    match (i).iter_elements().next().map(|t| {
  125|       |      let b = t.as_char() == self.c;
  126|       |      (&self.c, b)
  127|  31.0k|    }) {
  128|       |      None => {
  129|      0|        if OM::Incomplete::is_streaming() {
  130|      0|          Err(Err::Incomplete(Needed::new(self.c.len() - i.input_len())))
  131|       |        } else {
  132|      0|          Err(Err::Error(OM::Error::bind(|| Error::from_char(i, self.c))))
  133|       |        }
  134|       |      }
  135|  18.9k|      Some((_, false)) => Err(Err::Error(OM::Error::bind(|| Error::from_char(i, self.c)))),
  136|  12.0k|      Some((c, true)) => Ok((i.take_from(c.len()), OM::Output::bind(|| c.as_char()))),
  137|       |    }
  138|  31.0k|  }
_RINvXs_NtCselIyhuOc7xF_3nom9characterINtB5_7SatisfyNCINvB5_6one_ofReB12_uE0NCBP_s_0EINtNtB7_8internal6ParserB12_E7processINtB1n_7OutputMNtB1n_4EmitB2a_NtB1n_8CompleteEECsiZ6QsNdkp8Z_15rsonpath_syntax:
  186|  36.0k|  fn process<OM: crate::OutputMode>(
  187|  36.0k|    &mut self,
  188|  36.0k|    i: I,
  189|  36.0k|  ) -> crate::PResult<OM, I, Self::Output, Self::Error> {
  190|  36.0k|    match (i).iter_elements().next().map(|t| {
  191|       |      let c = t.as_char();
  192|       |      let b = (self.predicate)(c);
  193|       |      (c, b)
  194|  36.0k|    }) {
  195|       |      None => {
  196|      0|        if OM::Incomplete::is_streaming() {
  197|      0|          Err(Err::Incomplete(Needed::Unknown))
  198|       |        } else {
  199|      0|          Err(Err::Error(OM::Error::bind(|| (self.make_error)(i))))
  200|       |        }
  201|       |      }
  202|  18.1k|      Some((_, false)) => Err(Err::Error(OM::Error::bind(|| (self.make_error)(i)))),
  203|  17.9k|      Some((c, true)) => Ok((i.take_from(c.len()), OM::Output::bind(|| c.as_char()))),
  204|       |    }
  205|  36.0k|  }
_RINvNtCselIyhuOc7xF_3nom9character4charReINtNtB4_5error5ErrorBB_EECsiZ6QsNdkp8Z_15rsonpath_syntax:
   98|  45.5k|pub fn char<I, Error: ParseError<I>>(c: char) -> impl Parser<I, Output = char, Error = Error>
   99|  45.5k|where
  100|  45.5k|  I: Input,
  101|  45.5k|  <I as Input>::Item: AsChar,
  102|  45.5k|{
  103|  45.5k|  Char { c, e: PhantomData }
  104|  45.5k|}
_RINvNtCselIyhuOc7xF_3nom9character4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEBH_:
   98|   394k|pub fn char<I, Error: ParseError<I>>(c: char) -> impl Parser<I, Output = char, Error = Error>
   99|   394k|where
  100|   394k|  I: Input,
  101|   394k|  <I as Input>::Item: AsChar,
  102|   394k|{
  103|   394k|  Char { c, e: PhantomData }
  104|   394k|}
_RINvNtCselIyhuOc7xF_3nom9character4charReuECsiZ6QsNdkp8Z_15rsonpath_syntax:
   98|  31.0k|pub fn char<I, Error: ParseError<I>>(c: char) -> impl Parser<I, Output = char, Error = Error>
   99|  31.0k|where
  100|  31.0k|  I: Input,
  101|  31.0k|  <I as Input>::Item: AsChar,
  102|  31.0k|{
  103|  31.0k|  Char { c, e: PhantomData }
  104|  31.0k|}
_RINvNtCselIyhuOc7xF_3nom9character6one_ofReBD_uECsiZ6QsNdkp8Z_15rsonpath_syntax:
  219|  36.0k|pub fn one_of<I, T, Error: ParseError<I>>(list: T) -> impl Parser<I, Output = char, Error = Error>
  220|  36.0k|where
  221|  36.0k|  I: Input,
  222|  36.0k|  <I as Input>::Item: AsChar,
  223|  36.0k|  T: FindToken<char>,
  224|  36.0k|{
  225|  36.0k|  Satisfy {
  226|  36.0k|    predicate: move |c: char| list.find_token(c),
  227|  36.0k|    make_error: move |i| Error::from_error_kind(i, ErrorKind::OneOf),
  228|  36.0k|  }
  229|  36.0k|}
_RNCINvNtCselIyhuOc7xF_3nom9character6one_ofReBF_uE0CsiZ6QsNdkp8Z_15rsonpath_syntax:
  226|  36.0k|    predicate: move |c: char| list.find_token(c),
_RNCINvNtCselIyhuOc7xF_3nom9character6one_ofReBF_uEs_0CsiZ6QsNdkp8Z_15rsonpath_syntax:
  227|  18.1k|    make_error: move |i| Error::from_error_kind(i, ErrorKind::OneOf),
_RNCINvXNtCselIyhuOc7xF_3nom9characterINtB5_4CharINtNtB7_5error5ErrorReEEINtNtB7_8internal6ParserB14_E7processINtB1b_7OutputMNtB1b_4EmitB1Y_NtB1b_8CompleteEE0CsiZ6QsNdkp8Z_15rsonpath_syntax:
  124|  45.5k|    match (i).iter_elements().next().map(|t| {
  125|  45.5k|      let b = t.as_char() == self.c;
  126|  45.5k|      (&self.c, b)
  127|  45.5k|    }) {
_RNCINvXNtCselIyhuOc7xF_3nom9characterINtB5_4CharINtNtB7_5error5ErrorReEEINtNtB7_8internal6ParserB14_E7processINtB1b_7OutputMNtB1b_4EmitB1Y_NtB1b_8CompleteEEs0_0CsiZ6QsNdkp8Z_15rsonpath_syntax:
  135|  18.4k|      Some((_, false)) => Err(Err::Error(OM::Error::bind(|| Error::from_char(i, self.c)))),
_RNCINvXNtCselIyhuOc7xF_3nom9characterINtB5_4CharINtNtB7_5error5ErrorReEEINtNtB7_8internal6ParserB14_E7processINtB1b_7OutputMNtB1b_4EmitB1Y_NtB1b_8CompleteEEs1_0CsiZ6QsNdkp8Z_15rsonpath_syntax:
  136|  27.1k|      Some((c, true)) => Ok((i.take_from(c.len()), OM::Output::bind(|| c.as_char()))),
_RNCINvXNtCselIyhuOc7xF_3nom9characterINtB5_4CharNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtNtB7_8internal6ParserReE7processINtB1N_7OutputMNtB1N_4EmitB2y_NtB1N_8CompleteEE0BO_:
  124|   291k|    match (i).iter_elements().next().map(|t| {
  125|   291k|      let b = t.as_char() == self.c;
  126|   291k|      (&self.c, b)
  127|   291k|    }) {
_RNCINvXNtCselIyhuOc7xF_3nom9characterINtB5_4CharNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtNtB7_8internal6ParserReE7processINtB1N_7OutputMNtB1N_4EmitB2y_NtB1N_8CompleteEEs0_0BO_:
  135|   212k|      Some((_, false)) => Err(Err::Error(OM::Error::bind(|| Error::from_char(i, self.c)))),
_RNCINvXNtCselIyhuOc7xF_3nom9characterINtB5_4CharNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtNtB7_8internal6ParserReE7processINtB1N_7OutputMNtB1N_4EmitB2y_NtB1N_8CompleteEEs1_0BO_:
  136|  78.7k|      Some((c, true)) => Ok((i.take_from(c.len()), OM::Output::bind(|| c.as_char()))),
_RNCINvXNtCselIyhuOc7xF_3nom9characterINtB5_4CharuEINtNtB7_8internal6ParserReE7processINtBP_7OutputMNtBP_4EmitB1z_NtBP_8CompleteEE0CsiZ6QsNdkp8Z_15rsonpath_syntax:
  124|  31.0k|    match (i).iter_elements().next().map(|t| {
  125|  31.0k|      let b = t.as_char() == self.c;
  126|  31.0k|      (&self.c, b)
  127|  31.0k|    }) {
_RNCINvXNtCselIyhuOc7xF_3nom9characterINtB5_4CharuEINtNtB7_8internal6ParserReE7processINtBP_7OutputMNtBP_4EmitB1z_NtBP_8CompleteEEs0_0CsiZ6QsNdkp8Z_15rsonpath_syntax:
  135|  18.9k|      Some((_, false)) => Err(Err::Error(OM::Error::bind(|| Error::from_char(i, self.c)))),
_RNCINvXNtCselIyhuOc7xF_3nom9characterINtB5_4CharuEINtNtB7_8internal6ParserReE7processINtBP_7OutputMNtBP_4EmitB1z_NtBP_8CompleteEEs1_0CsiZ6QsNdkp8Z_15rsonpath_syntax:
  136|  12.0k|      Some((c, true)) => Ok((i.take_from(c.len()), OM::Output::bind(|| c.as_char()))),
_RNCINvXs_NtCselIyhuOc7xF_3nom9characterINtB7_7SatisfyNCINvB7_6one_ofReB14_uE0NCBR_s_0EINtNtB9_8internal6ParserB14_E7processINtB1p_7OutputMNtB1p_4EmitB2c_NtB1p_8CompleteEE0CsiZ6QsNdkp8Z_15rsonpath_syntax:
  190|  36.0k|    match (i).iter_elements().next().map(|t| {
  191|  36.0k|      let c = t.as_char();
  192|  36.0k|      let b = (self.predicate)(c);
  193|  36.0k|      (c, b)
  194|  36.0k|    }) {
_RNCINvXs_NtCselIyhuOc7xF_3nom9characterINtB7_7SatisfyNCINvB7_6one_ofReB14_uE0NCBR_s_0EINtNtB9_8internal6ParserB14_E7processINtB1p_7OutputMNtB1p_4EmitB2c_NtB1p_8CompleteEEs0_0CsiZ6QsNdkp8Z_15rsonpath_syntax:
  202|  18.1k|      Some((_, false)) => Err(Err::Error(OM::Error::bind(|| (self.make_error)(i)))),
_RNCINvXs_NtCselIyhuOc7xF_3nom9characterINtB7_7SatisfyNCINvB7_6one_ofReB14_uE0NCBR_s_0EINtNtB9_8internal6ParserB14_E7processINtB1p_7OutputMNtB1p_4EmitB2c_NtB1p_8CompleteEEs1_0CsiZ6QsNdkp8Z_15rsonpath_syntax:
  203|  17.9k|      Some((c, true)) => Ok((i.take_from(c.len()), OM::Output::bind(|| c.as_char()))),

_RINvXNtCselIyhuOc7xF_3nom10combinatorINtB3_3OptNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceReNvBO_3intNtNtBQ_5error18InternalParseErrorE0EINtNtB5_8internal6ParserB1L_E7processINtB2z_7OutputMNtB2z_4EmitB3m_NtB2z_9StreamingEEBQ_:
  239|  3.33k|  fn process<OM: OutputMode>(&mut self, input: I) -> PResult<OM, I, Self::Output, Self::Error> {
  240|  3.33k|    let i = input.clone();
  241|  3.33k|    match self
  242|  3.33k|      .parser
  243|  3.33k|      .process::<OutputM<OM::Output, Check, OM::Incomplete>>(input)
  244|       |    {
  245|  2.94k|      Ok((i, o)) => Ok((i, OM::Output::map(o, Some))),
  246|    389|      Err(Err::Error(_)) => Ok((i, OM::Output::bind(|| None))),
  247|      0|      Err(Err::Failure(e)) => Err(Err::Failure(e)),
  248|      0|      Err(Err::Incomplete(i)) => Err(Err::Incomplete(i)),
  249|       |    }
  250|  3.33k|  }
_RINvXNtCselIyhuOc7xF_3nom10combinatorINtB3_3OptNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser3intEINtNtB5_8internal6ParserReE7processINtB1x_7OutputMNtB1x_4EmitB2i_NtB1x_9StreamingEEBN_:
  239|  19.0k|  fn process<OM: OutputMode>(&mut self, input: I) -> PResult<OM, I, Self::Output, Self::Error> {
  240|  19.0k|    let i = input.clone();
  241|  19.0k|    match self
  242|  19.0k|      .parser
  243|  19.0k|      .process::<OutputM<OM::Output, Check, OM::Incomplete>>(input)
  244|       |    {
  245|  4.73k|      Ok((i, o)) => Ok((i, OM::Output::map(o, Some))),
  246|  14.3k|      Err(Err::Error(_)) => Ok((i, OM::Output::bind(|| None))),
  247|      0|      Err(Err::Failure(e)) => Err(Err::Failure(e)),
  248|      0|      Err(Err::Incomplete(i)) => Err(Err::Incomplete(i)),
  249|       |    }
  250|  19.0k|  }
_RINvNtCselIyhuOc7xF_3nom10combinator3cutReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorINtNtB4_6branch6ChoiceTINtNtB4_8internal3MapNvNtBI_6parser17wildcard_selectorNvMst_BI_NtBI_9Selectors3oneENvB2n_21member_name_shorthandNCINvB2n_14failed_segmentB31_E0EEEBI_:
  801|  6.16k|pub fn cut<I, E: ParseError<I>, F>(
  802|  6.16k|  parser: F,
  803|  6.16k|) -> impl Parser<I, Output = <F as Parser<I>>::Output, Error = E>
  804|  6.16k|where
  805|  6.16k|  F: Parser<I, Error = E>,
  806|  6.16k|{
  807|  6.16k|  Cut { parser }
  808|  6.16k|}
_RINvNtCselIyhuOc7xF_3nom10combinator3cutReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorINtNtB4_6branch6ChoiceTNCNvNtBI_6parser18descendant_segment0INtNtB4_8internal3MapNvB24_17wildcard_selectorNvMst_BI_NtBI_9Selectors3oneENvB24_21member_name_shorthandNCINvB24_14failed_segmentB3u_E0EEEBI_:
  801|  19.8k|pub fn cut<I, E: ParseError<I>, F>(
  802|  19.8k|  parser: F,
  803|  19.8k|) -> impl Parser<I, Output = <F as Parser<I>>::Output, Error = E>
  804|  19.8k|where
  805|  19.8k|  F: Parser<I, Error = E>,
  806|  19.8k|{
  807|  19.8k|  Cut { parser }
  808|  19.8k|}
_RINvNtCselIyhuOc7xF_3nom10combinator3cutReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNvNvNtBI_6parser12logical_expr12parse_single0EBI_:
  801|  7.80k|pub fn cut<I, E: ParseError<I>, F>(
  802|  7.80k|  parser: F,
  803|  7.80k|) -> impl Parser<I, Output = <F as Parser<I>>::Output, Error = E>
  804|  7.80k|where
  805|  7.80k|  F: Parser<I, Error = E>,
  806|  7.80k|{
  807|  7.80k|  Cut { parser }
  808|  7.80k|}
_RINvNtCselIyhuOc7xF_3nom10combinator3mapReNtCsiZ6QsNdkp8Z_15rsonpath_syntax7SegmentNtNtBG_5error18InternalParseErrorINtNtB4_6branch6ChoiceTNCNvNtBG_6parser13child_segment0INtNtB4_8sequence8PrecededNCINvNtNtB4_9character8complete4charBC_B1j_E0INtB2_3CutIB1R_TINtNtB4_8internal3MapNvB2h_17wildcard_selectorNvMst_BG_NtBG_9Selectors3oneENvB2h_21member_name_shorthandNCINvB2h_14failed_segmentB51_E0EEEEEENcNtBE_5Child0EBG_:
   74|  6.16k|pub fn map<I, O, E: ParseError<I>, F, G>(parser: F, f: G) -> impl Parser<I, Output = O, Error = E>
   75|  6.16k|where
   76|  6.16k|  F: Parser<I, Error = E>,
   77|  6.16k|  G: FnMut(<F as Parser<I>>::Output) -> O,
   78|  6.16k|{
   79|  6.16k|  parser.map(f)
   80|  6.16k|}
_RINvNtCselIyhuOc7xF_3nom10combinator3mapReNtCsiZ6QsNdkp8Z_15rsonpath_syntax7SegmentNtNtBG_5error18InternalParseErrorINtNtB4_8sequence8PrecededNCINvNtNtB4_5bytes8complete3tagBC_BC_B1j_E0INtB2_3CutINtNtB4_6branch6ChoiceTNCNvNtBG_6parser18descendant_segment0INtNtB4_8internal3MapNvB3y_17wildcard_selectorNvMst_BG_NtBG_9Selectors3oneENvB3y_21member_name_shorthandNCINvB3y_14failed_segmentB4Y_E0EEEENcNtBE_10Descendant0EBG_:
   74|  19.8k|pub fn map<I, O, E: ParseError<I>, F, G>(parser: F, f: G) -> impl Parser<I, Output = O, Error = E>
   75|  19.8k|where
   76|  19.8k|  F: Parser<I, Error = E>,
   77|  19.8k|  G: FnMut(<F as Parser<I>>::Output) -> O,
   78|  19.8k|{
   79|  19.8k|  parser.map(f)
   80|  19.8k|}
_RINvNtCselIyhuOc7xF_3nom10combinator3mapReNtCsiZ6QsNdkp8Z_15rsonpath_syntax8SelectorNtNtBG_5error18InternalParseErrorNCINvNtNtB4_5bytes8complete3tagBC_BC_B1k_E0NCNvNtBG_6parser17wildcard_selector0EBG_:
   74|  20.8k|pub fn map<I, O, E: ParseError<I>, F, G>(parser: F, f: G) -> impl Parser<I, Output = O, Error = E>
   75|  20.8k|where
   76|  20.8k|  F: Parser<I, Error = E>,
   77|  20.8k|  G: FnMut(<F as Parser<I>>::Output) -> O,
   78|  20.8k|{
   79|  20.8k|  parser.map(f)
   80|  20.8k|}
_RINvNtCselIyhuOc7xF_3nom10combinator3mapReNtCsiZ6QsNdkp8Z_15rsonpath_syntax8SelectorNtNtBG_5error18InternalParseErrorNvNtBG_6parser14string_literalNcNtBE_4Name0EBG_:
   74|  27.5k|pub fn map<I, O, E: ParseError<I>, F, G>(parser: F, f: G) -> impl Parser<I, Output = O, Error = E>
   75|  27.5k|where
   76|  27.5k|  F: Parser<I, Error = E>,
   77|  27.5k|  G: FnMut(<F as Parser<I>>::Output) -> O,
   78|  27.5k|{
   79|  27.5k|  parser.map(f)
   80|  27.5k|}
_RINvNtCselIyhuOc7xF_3nom10combinator3mapReNtCsiZ6QsNdkp8Z_15rsonpath_syntax9SelectorsNtNtBG_5error18InternalParseErrorNvNtBG_6parser17wildcard_selectorNvMst_BG_BE_3oneEBG_:
   74|  25.9k|pub fn map<I, O, E: ParseError<I>, F, G>(parser: F, f: G) -> impl Parser<I, Output = O, Error = E>
   75|  25.9k|where
   76|  25.9k|  F: Parser<I, Error = E>,
   77|  25.9k|  G: FnMut(<F as Parser<I>>::Output) -> O,
   78|  25.9k|{
   79|  25.9k|  parser.map(f)
   80|  25.9k|}
_RINvNtCselIyhuOc7xF_3nom10combinator3mapReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax3num10JsonNumberNtNtBI_5error18InternalParseErrorNvNtBI_6parser5floatNCNvB22_6number0EBI_:
   74|  23.2k|pub fn map<I, O, E: ParseError<I>, F, G>(parser: F, f: G) -> impl Parser<I, Output = O, Error = E>
   75|  23.2k|where
   76|  23.2k|  F: Parser<I, Error = E>,
   77|  23.2k|  G: FnMut(<F as Parser<I>>::Output) -> O,
   78|  23.2k|{
   79|  23.2k|  parser.map(f)
   80|  23.2k|}
_RINvNtCselIyhuOc7xF_3nom10combinator3optReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorINtNtB4_6branch6ChoiceTNCINvNtNtB4_9character8complete4charBC_BE_E0B20_EEEBI_:
  216|  23.2k|pub fn opt<I: Clone, E: ParseError<I>, F>(
  217|  23.2k|  f: F,
  218|  23.2k|) -> impl Parser<I, Output = Option<<F as Parser<I>>::Output>, Error = E>
  219|  23.2k|where
  220|  23.2k|  F: Parser<I, Error = E>,
  221|  23.2k|{
  222|  23.2k|  Opt { parser: f }
  223|  23.2k|}
_RINvNtCselIyhuOc7xF_3nom10combinator3optReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorINtNtB4_8sequence8PrecededNCINvNtNtB4_5bytes8complete11tag_no_caseBC_BC_BE_E0IB1E_INtB2_3OptINtNtB4_6branch6ChoiceTNCINvNtNtB4_9character8complete4charBC_BE_E0B3u_EEEINvB3z_6digit1BC_BE_EEEEBI_:
  216|  23.2k|pub fn opt<I: Clone, E: ParseError<I>, F>(
  217|  23.2k|  f: F,
  218|  23.2k|) -> impl Parser<I, Output = Option<<F as Parser<I>>::Output>, Error = E>
  219|  23.2k|where
  220|  23.2k|  F: Parser<I, Error = E>,
  221|  23.2k|{
  222|  23.2k|  Opt { parser: f }
  223|  23.2k|}
_RINvNtCselIyhuOc7xF_3nom10combinator3optReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorINtNtB4_8sequence8PrecededNCINvNtNtB4_9character8complete4charBC_BE_E0INvB28_6digit1BC_BE_EEEBI_:
  216|  23.2k|pub fn opt<I: Clone, E: ParseError<I>, F>(
  217|  23.2k|  f: F,
  218|  23.2k|) -> impl Parser<I, Output = Option<<F as Parser<I>>::Output>, Error = E>
  219|  23.2k|where
  220|  23.2k|  F: Parser<I, Error = E>,
  221|  23.2k|{
  222|  23.2k|  Opt { parser: f }
  223|  23.2k|}
_RINvNtCselIyhuOc7xF_3nom10combinator3optReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCINvNtBI_6parser17ignore_whitespaceBC_NvB1I_3intBE_E0EBI_:
  216|  3.43k|pub fn opt<I: Clone, E: ParseError<I>, F>(
  217|  3.43k|  f: F,
  218|  3.43k|) -> impl Parser<I, Output = Option<<F as Parser<I>>::Output>, Error = E>
  219|  3.43k|where
  220|  3.43k|  F: Parser<I, Error = E>,
  221|  3.43k|{
  222|  3.43k|  Opt { parser: f }
  223|  3.43k|}
_RINvNtCselIyhuOc7xF_3nom10combinator3optReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCINvNtBI_6parser17ignore_whitespaceINtNtCshZc3FwCJ069_4core6option6OptionBC_EINtNtB4_8sequence8PrecededNCINvNtNtB4_9character8complete4charBC_BE_E0INtB2_3OptNCIB1G_BC_NvB1I_3intBE_E0EEBE_E0EBI_:
  216|  1.71k|pub fn opt<I: Clone, E: ParseError<I>, F>(
  217|  1.71k|  f: F,
  218|  1.71k|) -> impl Parser<I, Output = Option<<F as Parser<I>>::Output>, Error = E>
  219|  1.71k|where
  220|  1.71k|  F: Parser<I, Error = E>,
  221|  1.71k|{
  222|  1.71k|  Opt { parser: f }
  223|  1.71k|}
_RINvNtCselIyhuOc7xF_3nom10combinator3optReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCINvNtBI_6parser17ignore_whitespaceNtNvB1I_12logical_expr9BooleanOpINtNtB4_6branch6ChoiceTINtNtB4_8internal3MapNCINvNtNtB4_5bytes8complete3tagBC_BC_BE_E0NCINvB2_5valueBC_B2d_BE_B3r_E0EB36_EEBE_E0EBI_:
  216|  25.2k|pub fn opt<I: Clone, E: ParseError<I>, F>(
  217|  25.2k|  f: F,
  218|  25.2k|) -> impl Parser<I, Output = Option<<F as Parser<I>>::Output>, Error = E>
  219|  25.2k|where
  220|  25.2k|  F: Parser<I, Error = E>,
  221|  25.2k|{
  222|  25.2k|  Opt { parser: f }
  223|  25.2k|}
_RINvNtCselIyhuOc7xF_3nom10combinator3optReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCINvNtNtB4_9character8complete4charBC_BE_E0EBI_:
  216|  26.7k|pub fn opt<I: Clone, E: ParseError<I>, F>(
  217|  26.7k|  f: F,
  218|  26.7k|) -> impl Parser<I, Output = Option<<F as Parser<I>>::Output>, Error = E>
  219|  26.7k|where
  220|  26.7k|  F: Parser<I, Error = E>,
  221|  26.7k|{
  222|  26.7k|  Opt { parser: f }
  223|  26.7k|}
_RINvNtCselIyhuOc7xF_3nom10combinator3optReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNvNtBI_6parser3intEBI_:
  216|  19.0k|pub fn opt<I: Clone, E: ParseError<I>, F>(
  217|  19.0k|  f: F,
  218|  19.0k|) -> impl Parser<I, Output = Option<<F as Parser<I>>::Output>, Error = E>
  219|  19.0k|where
  220|  19.0k|  F: Parser<I, Error = E>,
  221|  19.0k|{
  222|  19.0k|  Opt { parser: f }
  223|  19.0k|}
_RINvNtCselIyhuOc7xF_3nom10combinator4intoReNtCsiZ6QsNdkp8Z_15rsonpath_syntax11LogicalExprNtBH_8SelectorNtNtBH_5error18InternalParseErrorB1D_INtNtB4_8sequence8PrecededNCINvNtNtB4_9character8complete4charBD_B1D_E0NCINvNtBH_6parser17ignore_whitespaceBF_NCNvB3s_15filter_selector0B1D_E0EEBH_:
  859|  14.1k|pub fn into<I, O1, O2, E1, E2, F>(parser: F) -> impl Parser<I, Output = O2, Error = E2>
  860|  14.1k|where
  861|  14.1k|  O2: From<O1>,
  862|  14.1k|  E2: From<E1>,
  863|  14.1k|  E1: ParseError<I>,
  864|  14.1k|  E2: ParseError<I>,
  865|  14.1k|  F: Parser<I, Output = O1, Error = E1>,
  866|  14.1k|{
  867|  14.1k|  parser.into::<O2, E2>()
  868|  14.1k|}
_RINvNtCselIyhuOc7xF_3nom10combinator4intoReNtCsiZ6QsNdkp8Z_15rsonpath_syntax7LiteralNtBH_10ComparableNtNtBH_5error18InternalParseErrorB1B_NvNtBH_6parser7literalEBH_:
  859|  4.31k|pub fn into<I, O1, O2, E1, E2, F>(parser: F) -> impl Parser<I, Output = O2, Error = E2>
  860|  4.31k|where
  861|  4.31k|  O2: From<O1>,
  862|  4.31k|  E2: From<E1>,
  863|  4.31k|  E1: ParseError<I>,
  864|  4.31k|  E2: ParseError<I>,
  865|  4.31k|  F: Parser<I, Output = O1, Error = E1>,
  866|  4.31k|{
  867|  4.31k|  parser.into::<O2, E2>()
  868|  4.31k|}
_RINvNtCselIyhuOc7xF_3nom10combinator4intoReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax3num10JsonNumberNtBJ_7LiteralNtNtBJ_5error18InternalParseErrorB1H_NvNtBJ_6parser6numberEBJ_:
  859|  23.2k|pub fn into<I, O1, O2, E1, E2, F>(parser: F) -> impl Parser<I, Output = O2, Error = E2>
  860|  23.2k|where
  861|  23.2k|  O2: From<O1>,
  862|  23.2k|  E2: From<E1>,
  863|  23.2k|  E1: ParseError<I>,
  864|  23.2k|  E2: ParseError<I>,
  865|  23.2k|  F: Parser<I, Output = O1, Error = E1>,
  866|  23.2k|{
  867|  23.2k|  parser.into::<O2, E2>()
  868|  23.2k|}
_RINvNtCselIyhuOc7xF_3nom10combinator4intoReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax3str10JsonStringNtBJ_7LiteralNtNtBJ_5error18InternalParseErrorB1H_NvNtBJ_6parser14string_literalEBJ_:
  859|  23.2k|pub fn into<I, O1, O2, E1, E2, F>(parser: F) -> impl Parser<I, Output = O2, Error = E2>
  860|  23.2k|where
  861|  23.2k|  O2: From<O1>,
  862|  23.2k|  E2: From<E1>,
  863|  23.2k|  E1: ParseError<I>,
  864|  23.2k|  E2: ParseError<I>,
  865|  23.2k|  F: Parser<I, Output = O1, Error = E1>,
  866|  23.2k|{
  867|  23.2k|  parser.into::<O2, E2>()
  868|  23.2k|}
_RINvNtCselIyhuOc7xF_3nom10combinator4peekReNCINvNtNtB4_9character8complete6one_ofBD_BD_uE0ECsiZ6QsNdkp8Z_15rsonpath_syntax:
  319|  36.0k|pub fn peek<I: Clone, F>(
  320|  36.0k|  parser: F,
  321|  36.0k|) -> impl Parser<I, Output = <F as Parser<I>>::Output, Error = <F as Parser<I>>::Error>
  322|  36.0k|where
  323|  36.0k|  F: Parser<I>,
  324|  36.0k|{
  325|  36.0k|  Peek { parser }
  326|  36.0k|}
_RINvNtCselIyhuOc7xF_3nom10combinator5valueReNtCsiZ6QsNdkp8Z_15rsonpath_syntax12ComparisonOpNtNtBI_5error18InternalParseErrorNCINvNtNtB4_5bytes8complete3tagBE_BE_B1r_E0EBI_:
  560|  70.3k|pub fn value<I, O1: Clone, E: ParseError<I>, F>(
  561|  70.3k|  val: O1,
  562|  70.3k|  parser: F,
  563|  70.3k|) -> impl Parser<I, Output = O1, Error = E>
  564|  70.3k|where
  565|  70.3k|  F: Parser<I, Error = E>,
  566|  70.3k|{
  567|  70.3k|  parser.map(move |_| val.clone())
  568|  70.3k|}
_RINvNtCselIyhuOc7xF_3nom10combinator5valueReNtCsiZ6QsNdkp8Z_15rsonpath_syntax12ComparisonOpNtNtBI_5error18InternalParseErrorNCINvNtNtB4_9character8complete4charBE_B1r_E0EBI_:
  560|  35.1k|pub fn value<I, O1: Clone, E: ParseError<I>, F>(
  561|  35.1k|  val: O1,
  562|  35.1k|  parser: F,
  563|  35.1k|) -> impl Parser<I, Output = O1, Error = E>
  564|  35.1k|where
  565|  35.1k|  F: Parser<I, Error = E>,
  566|  35.1k|{
  567|  35.1k|  parser.map(move |_| val.clone())
  568|  35.1k|}
_RINvNtCselIyhuOc7xF_3nom10combinator5valueReNtCsiZ6QsNdkp8Z_15rsonpath_syntax7LiteralNtNtBI_5error18InternalParseErrorNCINvNtNtB4_5bytes8complete3tagBE_BE_B1l_E0EBI_:
  560|  69.7k|pub fn value<I, O1: Clone, E: ParseError<I>, F>(
  561|  69.7k|  val: O1,
  562|  69.7k|  parser: F,
  563|  69.7k|) -> impl Parser<I, Output = O1, Error = E>
  564|  69.7k|where
  565|  69.7k|  F: Parser<I, Error = E>,
  566|  69.7k|{
  567|  69.7k|  parser.map(move |_| val.clone())
  568|  69.7k|}
_RINvNtCselIyhuOc7xF_3nom10combinator5valueReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser16RootSelectorTypeNtNtBK_5error18InternalParseErrorNCINvNtNtB4_9character8complete4charBE_B1E_E0EBK_:
  560|  38.9k|pub fn value<I, O1: Clone, E: ParseError<I>, F>(
  561|  38.9k|  val: O1,
  562|  38.9k|  parser: F,
  563|  38.9k|) -> impl Parser<I, Output = O1, Error = E>
  564|  38.9k|where
  565|  38.9k|  F: Parser<I, Error = E>,
  566|  38.9k|{
  567|  38.9k|  parser.map(move |_| val.clone())
  568|  38.9k|}
_RINvNtCselIyhuOc7xF_3nom10combinator5valueReNtNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_expr9BooleanOpNtNtBM_5error18InternalParseErrorNCINvNtNtB4_5bytes8complete3tagBE_BE_B1M_E0EBM_:
  560|  50.4k|pub fn value<I, O1: Clone, E: ParseError<I>, F>(
  561|  50.4k|  val: O1,
  562|  50.4k|  parser: F,
  563|  50.4k|) -> impl Parser<I, Output = O1, Error = E>
  564|  50.4k|where
  565|  50.4k|  F: Parser<I, Error = E>,
  566|  50.4k|{
  567|  50.4k|  parser.map(move |_| val.clone())
  568|  50.4k|}
_RINvNtCselIyhuOc7xF_3nom10combinator9recognizeReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorINtNtB4_6branch6ChoiceTINtNtB4_8sequence8PrecededNCINvNtNtB4_9character8complete4charBI_BK_E0INvB2B_6digit1BI_BK_EEB3e_EEEBO_:
  631|  39.7k|pub fn recognize<I: Clone + Offset + Input, E: ParseError<I>, F>(
  632|  39.7k|  parser: F,
  633|  39.7k|) -> impl Parser<I, Output = I, Error = E>
  634|  39.7k|where
  635|  39.7k|  F: Parser<I, Error = E>,
  636|  39.7k|{
  637|  39.7k|  Recognize { parser }
  638|  39.7k|}
_RINvNtCselIyhuOc7xF_3nom10combinator9recognizeReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorINtNtB4_6branch6ChoiceTINtNtB4_8sequence8PrecededNCINvNtNtB4_9character8complete4charBI_BK_E0NvNvNtBO_6parser5float10base_floatEB3e_EEEBO_:
  631|  23.2k|pub fn recognize<I: Clone + Offset + Input, E: ParseError<I>, F>(
  632|  23.2k|  parser: F,
  633|  23.2k|) -> impl Parser<I, Output = I, Error = E>
  634|  23.2k|where
  635|  23.2k|  F: Parser<I, Error = E>,
  636|  23.2k|{
  637|  23.2k|  Recognize { parser }
  638|  23.2k|}
_RINvNtCselIyhuOc7xF_3nom10combinator9recognizeReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorTINvNtNtB4_9character8complete6digit1BI_BK_EINtB2_3OptINtNtB4_8sequence8PrecededNCINvB1N_4charBI_BK_E0B1K_EEIB2s_IB2C_NCINvNtNtB4_5bytes8complete11tag_no_caseBI_BI_BK_E0IB2C_IB2s_INtNtB4_6branch6ChoiceTB31_B31_EEEB1K_EEEEEBO_:
  631|  23.2k|pub fn recognize<I: Clone + Offset + Input, E: ParseError<I>, F>(
  632|  23.2k|  parser: F,
  633|  23.2k|) -> impl Parser<I, Output = I, Error = E>
  634|  23.2k|where
  635|  23.2k|  F: Parser<I, Error = E>,
  636|  23.2k|{
  637|  23.2k|  Recognize { parser }
  638|  23.2k|}
_RINvXNtCselIyhuOc7xF_3nom10combinatorINtB3_3OptINtNtB5_8sequence8PrecededNCINvNtNtB5_5bytes8complete11tag_no_caseReB1N_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0IBK_IBA_INtNtB5_6branch6ChoiceTNCINvNtNtB5_9character8complete4charB1N_B1T_E0B3p_EEEINvB3u_6digit1B1N_B1T_EEEEINtNtB5_8internal6ParserB1N_E7processINtB4J_7OutputMNtB4J_4EmitB5w_NtB4J_9StreamingEEB1X_:
  239|    777|  fn process<OM: OutputMode>(&mut self, input: I) -> PResult<OM, I, Self::Output, Self::Error> {
  240|    777|    let i = input.clone();
  241|    777|    match self
  242|    777|      .parser
  243|    777|      .process::<OutputM<OM::Output, Check, OM::Incomplete>>(input)
  244|       |    {
  245|      0|      Ok((i, o)) => Ok((i, OM::Output::map(o, Some))),
  246|    777|      Err(Err::Error(_)) => Ok((i, OM::Output::bind(|| None))),
  247|      0|      Err(Err::Failure(e)) => Err(Err::Failure(e)),
  248|      0|      Err(Err::Incomplete(i)) => Err(Err::Incomplete(i)),
  249|       |    }
  250|    777|  }
_RINvXNtCselIyhuOc7xF_3nom10combinatorINtB3_3OptINtNtB5_8sequence8PrecededNCINvNtNtB5_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INvB1e_6digit1B1J_B1L_EEEINtNtB5_8internal6ParserB1J_E7processINtB3e_7OutputMNtB3e_4EmitB41_NtB3e_9StreamingEEB1P_:
  239|    777|  fn process<OM: OutputMode>(&mut self, input: I) -> PResult<OM, I, Self::Output, Self::Error> {
  240|    777|    let i = input.clone();
  241|    777|    match self
  242|    777|      .parser
  243|    777|      .process::<OutputM<OM::Output, Check, OM::Incomplete>>(input)
  244|       |    {
  245|    365|      Ok((i, o)) => Ok((i, OM::Output::map(o, Some))),
  246|    412|      Err(Err::Error(_)) => Ok((i, OM::Output::bind(|| None))),
  247|      0|      Err(Err::Failure(e)) => Err(Err::Failure(e)),
  248|      0|      Err(Err::Incomplete(i)) => Err(Err::Incomplete(i)),
  249|       |    }
  250|    777|  }
_RINvXNtCselIyhuOc7xF_3nom10combinatorINtB3_3OptNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceINtNtCshZc3FwCJ069_4core6option6OptionReEINtNtB5_8sequence8PrecededNCINvNtNtB5_9character8complete4charB2n_NtNtBQ_5error18InternalParseErrorE0IBA_NCIBM_B2n_NvBO_3intB3u_E0EEB3u_E0EINtNtB5_8internal6ParserB2n_E7processINtB4I_7OutputMNtB4I_4EmitB5v_NtB4I_9StreamingEEBQ_:
  239|  1.71k|  fn process<OM: OutputMode>(&mut self, input: I) -> PResult<OM, I, Self::Output, Self::Error> {
  240|  1.71k|    let i = input.clone();
  241|  1.71k|    match self
  242|  1.71k|      .parser
  243|  1.71k|      .process::<OutputM<OM::Output, Check, OM::Incomplete>>(input)
  244|       |    {
  245|  1.61k|      Ok((i, o)) => Ok((i, OM::Output::map(o, Some))),
  246|     96|      Err(Err::Error(_)) => Ok((i, OM::Output::bind(|| None))),
  247|      0|      Err(Err::Failure(e)) => Err(Err::Failure(e)),
  248|      0|      Err(Err::Incomplete(i)) => Err(Err::Incomplete(i)),
  249|       |    }
  250|  1.71k|  }
_RINvXNtCselIyhuOc7xF_3nom10combinatorINtB3_3OptNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtNvBO_12logical_expr9BooleanOpINtNtB5_6branch6ChoiceTINtNtB5_8internal3MapNCINvNtNtB5_5bytes8complete3tagReB3t_NtNtBQ_5error18InternalParseErrorE0NCINvB3_5valueB3t_B1L_B3z_B2Y_E0EB2D_EEB3z_E0EINtB2G_6ParserB3t_E7processINtB2G_7OutputMNtB2G_4EmitB5y_NtB2G_9StreamingEEBQ_:
  239|  25.2k|  fn process<OM: OutputMode>(&mut self, input: I) -> PResult<OM, I, Self::Output, Self::Error> {
  240|  25.2k|    let i = input.clone();
  241|  25.2k|    match self
  242|  25.2k|      .parser
  243|  25.2k|      .process::<OutputM<OM::Output, Check, OM::Incomplete>>(input)
  244|       |    {
  245|  4.79k|      Ok((i, o)) => Ok((i, OM::Output::map(o, Some))),
  246|  20.4k|      Err(Err::Error(_)) => Ok((i, OM::Output::bind(|| None))),
  247|      0|      Err(Err::Failure(e)) => Err(Err::Failure(e)),
  248|      0|      Err(Err::Incomplete(i)) => Err(Err::Incomplete(i)),
  249|       |    }
  250|  25.2k|  }
_RINvXNtCselIyhuOc7xF_3nom10combinatorINtB3_3OptNCINvNtNtB5_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0EINtNtB5_8internal6ParserB1j_E7processINtB2q_7OutputMNtB2q_4EmitB3d_NtB2q_9StreamingEEB1p_:
  239|  26.7k|  fn process<OM: OutputMode>(&mut self, input: I) -> PResult<OM, I, Self::Output, Self::Error> {
  240|  26.7k|    let i = input.clone();
  241|  26.7k|    match self
  242|  26.7k|      .parser
  243|  26.7k|      .process::<OutputM<OM::Output, Check, OM::Incomplete>>(input)
  244|       |    {
  245|  5.72k|      Ok((i, o)) => Ok((i, OM::Output::map(o, Some))),
  246|  21.0k|      Err(Err::Error(_)) => Ok((i, OM::Output::bind(|| None))),
  247|      0|      Err(Err::Failure(e)) => Err(Err::Failure(e)),
  248|      0|      Err(Err::Incomplete(i)) => Err(Err::Incomplete(i)),
  249|       |    }
  250|  26.7k|  }
_RINvXs0_NtCselIyhuOc7xF_3nom10combinatorINtB6_4PeekNCINvNtNtB8_9character8complete6one_ofReB1p_uE0EINtNtB8_8internal6ParserB1p_E7processINtB1C_7OutputMNtB1C_4EmitB2p_NtB1C_9StreamingEECsiZ6QsNdkp8Z_15rsonpath_syntax:
  341|  36.0k|  fn process<OM: OutputMode>(&mut self, input: I) -> PResult<OM, I, Self::Output, Self::Error> {
  342|  36.0k|    let i = input.clone();
  343|  36.0k|    match self.parser.process::<OM>(input) {
  344|  17.9k|      Ok((_, o)) => Ok((i, o)),
  345|  18.1k|      Err(e) => Err(e),
  346|       |    }
  347|  36.0k|  }
_RINvXs5_NtCselIyhuOc7xF_3nom10combinatorINtB6_9RecognizeINtNtB8_6branch6ChoiceTINtNtB8_8sequence8PrecededNCINvNtNtB8_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INvB1K_6digit1B2f_B2h_EEB3i_EEEINtNtB8_8internal6ParserB2f_E7processINtB3Q_7OutputMNtB3Q_4EmitB4D_NtB3Q_9StreamingEEB2l_:
  654|  39.7k|  fn process<OM: OutputMode>(&mut self, input: I) -> PResult<OM, I, Self::Output, Self::Error> {
  655|  39.7k|    let i = input.clone();
  656|  39.7k|    match self
  657|  39.7k|      .parser
  658|  39.7k|      .process::<OutputM<Check, OM::Error, OM::Incomplete>>(i)
  659|       |    {
  660|  10.8k|      Ok((i, _)) => {
  661|  10.8k|        let index = input.offset(&i);
  662|  10.8k|        Ok((i, OM::Output::bind(|| input.take(index))))
  663|       |      }
  664|  28.8k|      Err(e) => Err(e),
  665|       |    }
  666|  39.7k|  }
_RINvXs5_NtCselIyhuOc7xF_3nom10combinatorINtB6_9RecognizeINtNtB8_6branch6ChoiceTINtNtB8_8sequence8PrecededNCINvNtNtB8_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NvNvNtB2l_6parser5float10base_floatEB3i_EEEINtNtB8_8internal6ParserB2f_E7processINtB42_7OutputMNtB42_4EmitB4P_NtB42_9StreamingEEB2l_:
  654|  23.2k|  fn process<OM: OutputMode>(&mut self, input: I) -> PResult<OM, I, Self::Output, Self::Error> {
  655|  23.2k|    let i = input.clone();
  656|  23.2k|    match self
  657|  23.2k|      .parser
  658|  23.2k|      .process::<OutputM<Check, OM::Error, OM::Incomplete>>(i)
  659|       |    {
  660|    777|      Ok((i, _)) => {
  661|    777|        let index = input.offset(&i);
  662|    777|        Ok((i, OM::Output::bind(|| input.take(index))))
  663|       |      }
  664|  22.4k|      Err(e) => Err(e),
  665|       |    }
  666|  23.2k|  }
_RINvXs5_NtCselIyhuOc7xF_3nom10combinatorINtB6_9RecognizeTINvNtNtB8_9character8complete6digit1ReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtB6_3OptINtNtB8_8sequence8PrecededNCINvBW_4charB1t_B1v_E0BT_EEIB2w_IB2G_NCINvNtNtB8_5bytes8complete11tag_no_caseB1t_B1t_B1v_E0IB2G_IB2w_INtNtB8_6branch6ChoiceTB35_B35_EEEBT_EEEEEINtNtB8_8internal6ParserB1t_E7processINtB5s_7OutputMNtB5s_4EmitB6f_NtB5s_9StreamingEEB1z_:
  654|  23.2k|  fn process<OM: OutputMode>(&mut self, input: I) -> PResult<OM, I, Self::Output, Self::Error> {
  655|  23.2k|    let i = input.clone();
  656|  23.2k|    match self
  657|  23.2k|      .parser
  658|  23.2k|      .process::<OutputM<Check, OM::Error, OM::Incomplete>>(i)
  659|       |    {
  660|    777|      Ok((i, _)) => {
  661|    777|        let index = input.offset(&i);
  662|    777|        Ok((i, OM::Output::bind(|| input.take(index))))
  663|       |      }
  664|  22.4k|      Err(e) => Err(e),
  665|       |    }
  666|  23.2k|  }
_RINvXs7_NtCselIyhuOc7xF_3nom10combinatorINtB6_3CutNCNvNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_expr12parse_single0EINtNtB8_8internal6ParserReE7processINtB23_7OutputMNtB23_4EmitB2O_NtB23_9StreamingEEBU_:
  824|  7.80k|  fn process<OM: OutputMode>(&mut self, input: I) -> PResult<OM, I, Self::Output, Self::Error> {
  825|  7.80k|    match self
  826|  7.80k|      .parser
  827|  7.80k|      .process::<OutputM<OM::Output, Emit, OM::Incomplete>>(input)
  828|       |    {
  829|      0|      Err(Err::Error(e)) => Err(Err::Failure(e)),
  830|  3.52k|      Err(Err::Failure(e)) => Err(Err::Failure(e)),
  831|      0|      Err(Err::Incomplete(i)) => Err(Err::Incomplete(i)),
  832|  4.27k|      Ok((i, o)) => Ok((i, o)),
  833|       |    }
  834|  7.80k|  }
_RNCINvNtCselIyhuOc7xF_3nom10combinator5valueReNtCsiZ6QsNdkp8Z_15rsonpath_syntax12ComparisonOpNtNtBK_5error18InternalParseErrorNCINvNtNtB6_5bytes8complete3tagBG_BG_B1t_E0E0BK_:
  567|  2.33k|  parser.map(move |_| val.clone())
_RNCINvNtCselIyhuOc7xF_3nom10combinator5valueReNtCsiZ6QsNdkp8Z_15rsonpath_syntax12ComparisonOpNtNtBK_5error18InternalParseErrorNCINvNtNtB6_9character8complete4charBG_B1t_E0E0BK_:
  567|  1.97k|  parser.map(move |_| val.clone())
_RNCINvNtCselIyhuOc7xF_3nom10combinator5valueReNtCsiZ6QsNdkp8Z_15rsonpath_syntax7LiteralNtNtBK_5error18InternalParseErrorNCINvNtNtB6_5bytes8complete3tagBG_BG_B1n_E0E0BK_:
  567|    982|  parser.map(move |_| val.clone())
_RNCINvNtCselIyhuOc7xF_3nom10combinator5valueReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser16RootSelectorTypeNtNtBM_5error18InternalParseErrorNCINvNtNtB6_9character8complete4charBG_B1G_E0E0BM_:
  567|  19.4k|  parser.map(move |_| val.clone())
_RNCINvNtCselIyhuOc7xF_3nom10combinator5valueReNtNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_expr9BooleanOpNtNtBO_5error18InternalParseErrorNCINvNtNtB6_5bytes8complete3tagBG_BG_B1O_E0E0BO_:
  567|  4.79k|  parser.map(move |_| val.clone())
_RNCINvXNtCselIyhuOc7xF_3nom10combinatorINtB5_3OptINtNtB7_8sequence8PrecededNCINvNtNtB7_5bytes8complete11tag_no_caseReB1P_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0IBM_IBC_INtNtB7_6branch6ChoiceTNCINvNtNtB7_9character8complete4charB1P_B1V_E0B3r_EEEINvB3w_6digit1B1P_B1V_EEEEINtNtB7_8internal6ParserB1P_E7processINtB4L_7OutputMNtB4L_4EmitB5y_NtB4L_9StreamingEE0B1Z_:
  246|    777|      Err(Err::Error(_)) => Ok((i, OM::Output::bind(|| None))),
_RNCINvXNtCselIyhuOc7xF_3nom10combinatorINtB5_3OptINtNtB7_8sequence8PrecededNCINvNtNtB7_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INvB1g_6digit1B1L_B1N_EEEINtNtB7_8internal6ParserB1L_E7processINtB3g_7OutputMNtB3g_4EmitB43_NtB3g_9StreamingEE0B1R_:
  246|    412|      Err(Err::Error(_)) => Ok((i, OM::Output::bind(|| None))),
_RNCINvXNtCselIyhuOc7xF_3nom10combinatorINtB5_3OptNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceINtNtCshZc3FwCJ069_4core6option6OptionReEINtNtB7_8sequence8PrecededNCINvNtNtB7_9character8complete4charB2p_NtNtBS_5error18InternalParseErrorE0IBC_NCIBO_B2p_NvBQ_3intB3w_E0EEB3w_E0EINtNtB7_8internal6ParserB2p_E7processINtB4K_7OutputMNtB4K_4EmitB5x_NtB4K_9StreamingEE0BS_:
  246|     96|      Err(Err::Error(_)) => Ok((i, OM::Output::bind(|| None))),
_RNCINvXNtCselIyhuOc7xF_3nom10combinatorINtB5_3OptNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtNvBQ_12logical_expr9BooleanOpINtNtB7_6branch6ChoiceTINtNtB7_8internal3MapNCINvNtNtB7_5bytes8complete3tagReB3v_NtNtBS_5error18InternalParseErrorE0NCINvB5_5valueB3v_B1N_B3B_B30_E0EB2F_EEB3B_E0EINtB2I_6ParserB3v_E7processINtB2I_7OutputMNtB2I_4EmitB5A_NtB2I_9StreamingEE0BS_:
  246|  20.4k|      Err(Err::Error(_)) => Ok((i, OM::Output::bind(|| None))),
_RNCINvXNtCselIyhuOc7xF_3nom10combinatorINtB5_3OptNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceReNvBQ_3intNtNtBS_5error18InternalParseErrorE0EINtNtB7_8internal6ParserB1N_E7processINtB2B_7OutputMNtB2B_4EmitB3o_NtB2B_9StreamingEE0BS_:
  246|    389|      Err(Err::Error(_)) => Ok((i, OM::Output::bind(|| None))),
_RNCINvXNtCselIyhuOc7xF_3nom10combinatorINtB5_3OptNCINvNtNtB7_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0EINtNtB7_8internal6ParserB1l_E7processINtB2s_7OutputMNtB2s_4EmitB3f_NtB2s_9StreamingEE0B1r_:
  246|  21.0k|      Err(Err::Error(_)) => Ok((i, OM::Output::bind(|| None))),
_RNCINvXNtCselIyhuOc7xF_3nom10combinatorINtB5_3OptNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser3intEINtNtB7_8internal6ParserReE7processINtB1z_7OutputMNtB1z_4EmitB2k_NtB1z_9StreamingEE0BP_:
  246|  14.3k|      Err(Err::Error(_)) => Ok((i, OM::Output::bind(|| None))),
_RNCINvXs5_NtCselIyhuOc7xF_3nom10combinatorINtB8_9RecognizeINtNtBa_6branch6ChoiceTINtNtBa_8sequence8PrecededNCINvNtNtBa_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INvB1M_6digit1B2h_B2j_EEB3k_EEEINtNtBa_8internal6ParserB2h_E7processINtB3S_7OutputMNtB3S_4EmitB4F_NtB3S_9StreamingEE0B2n_:
  662|  10.8k|        Ok((i, OM::Output::bind(|| input.take(index))))
_RNCINvXs5_NtCselIyhuOc7xF_3nom10combinatorINtB8_9RecognizeINtNtBa_6branch6ChoiceTINtNtBa_8sequence8PrecededNCINvNtNtBa_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NvNvNtB2n_6parser5float10base_floatEB3k_EEEINtNtBa_8internal6ParserB2h_E7processINtB44_7OutputMNtB44_4EmitB4R_NtB44_9StreamingEE0B2n_:
  662|    777|        Ok((i, OM::Output::bind(|| input.take(index))))
_RNCINvXs5_NtCselIyhuOc7xF_3nom10combinatorINtB8_9RecognizeTINvNtNtBa_9character8complete6digit1ReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtB8_3OptINtNtBa_8sequence8PrecededNCINvBY_4charB1v_B1x_E0BV_EEIB2y_IB2I_NCINvNtNtBa_5bytes8complete11tag_no_caseB1v_B1v_B1x_E0IB2I_IB2y_INtNtBa_6branch6ChoiceTB37_B37_EEEBV_EEEEEINtNtBa_8internal6ParserB1v_E7processINtB5u_7OutputMNtB5u_4EmitB6h_NtB5u_9StreamingEE0B1B_:
  662|    777|        Ok((i, OM::Output::bind(|| input.take(index))))
_RINvXs7_NtCselIyhuOc7xF_3nom10combinatorINtB6_3CutINtNtB8_6branch6ChoiceTNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser18descendant_segment0INtNtB8_8internal3MapNvB1d_17wildcard_selectorNvMst_B1f_NtB1f_9Selectors3oneENvB1d_21member_name_shorthandNCINvB1d_14failed_segmentB36_E0EEEINtB2f_6ParserReE7processINtB2f_7OutputMNtB2f_4EmitB56_NtB2f_9StreamingEEB1f_:
  824|  13.6k|  fn process<OM: OutputMode>(&mut self, input: I) -> PResult<OM, I, Self::Output, Self::Error> {
  825|  13.6k|    match self
  826|  13.6k|      .parser
  827|  13.6k|      .process::<OutputM<OM::Output, Emit, OM::Incomplete>>(input)
  828|       |    {
  829|      0|      Err(Err::Error(e)) => Err(Err::Failure(e)),
  830|  1.25k|      Err(Err::Failure(e)) => Err(Err::Failure(e)),
  831|      0|      Err(Err::Incomplete(i)) => Err(Err::Incomplete(i)),
  832|  12.4k|      Ok((i, o)) => Ok((i, o)),
  833|       |    }
  834|  13.6k|  }

_RNvXs_NtCselIyhuOc7xF_3nom5errorINtB4_5ErrorReEINtB4_10ParseErrorBG_E15from_error_kindCsiZ6QsNdkp8Z_15rsonpath_syntax:
   79|   476k|  fn from_error_kind(input: I, kind: ErrorKind) -> Self {
   80|   476k|    Error { input, code: kind }
   81|   476k|  }
_RNvXs_NtCselIyhuOc7xF_3nom5errorINtB4_5ErrorReEINtB4_10ParseErrorBG_E6appendCsiZ6QsNdkp8Z_15rsonpath_syntax:
   83|   145k|  fn append(_: I, _: ErrorKind, other: Self) -> Self {
   84|   145k|    other
   85|   145k|  }
_RNvXsd_NtCselIyhuOc7xF_3nom5erroruINtB5_10ParseErrorReE15from_error_kindCsiZ6QsNdkp8Z_15rsonpath_syntax:
  192|  37.0k|  fn from_error_kind(_: I, _: ErrorKind) -> Self {}
_RNvYINtNtCselIyhuOc7xF_3nom5error5ErrorReEINtB5_10ParseErrorBB_E9from_charCsiZ6QsNdkp8Z_15rsonpath_syntax:
   32|  18.4k|  fn from_char(input: I, _: char) -> Self {
   33|  18.4k|    Self::from_error_kind(input, ErrorKind::Char)
   34|  18.4k|  }
_RNvYuINtNtCselIyhuOc7xF_3nom5error10ParseErrorReE9from_charCsiZ6QsNdkp8Z_15rsonpath_syntax:
   32|  18.9k|  fn from_char(input: I, _: char) -> Self {
   33|  18.9k|    Self::from_error_kind(input, ErrorKind::Char)
   34|  18.9k|  }
_RNvYNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorINtNtCselIyhuOc7xF_3nom5error10ParseErrorReE2orB6_:
   38|   257k|  fn or(self, other: Self) -> Self {
   39|   257k|    other
   40|   257k|  }
_RNvYNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorINtNtCselIyhuOc7xF_3nom5error10ParseErrorReE9from_charB6_:
   32|   212k|  fn from_char(input: I, _: char) -> Self {
   33|   212k|    Self::from_error_kind(input, ErrorKind::Char)
   34|   212k|  }

_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindINtNtB8_5error5ErrorReENCINvXNtB8_9characterINtB1r_4CharBY_EINtB6_6ParserB1i_E7processINtB6_7OutputMBz_Bz_NtB6_8CompleteEEs0_0ECsiZ6QsNdkp8Z_15rsonpath_syntax:
  272|  18.4k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  18.4k|    f()
  274|  18.4k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCINvXNtB8_9characterINtB23_4CharBY_EINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_8CompleteEEs0_0EB12_:
  272|   212k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|   212k|    f()
  274|   212k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindReNCINvXsf_B6_INvNtNtB8_9character8complete6digit1BY_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtB6_6ParserBY_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB1T_:
  272|    777|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|    777|    f()
  274|    777|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindReNCINvXsf_B6_INvNtNtB8_9character8complete6digit1BY_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtB6_6ParserBY_E7processINtB6_7OutputMBz_NtB6_5CheckNtB6_9StreamingEEs_0EB1T_:
  272|    365|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|    365|    f()
  274|    365|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindcNCINvXNtB8_9characterINtB15_4CharINtNtB8_5error5ErrorReEEINtB6_6ParserB1Q_E7processINtB6_7OutputMBz_Bz_NtB6_8CompleteEEs1_0ECsiZ6QsNdkp8Z_15rsonpath_syntax:
  272|  27.1k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  27.1k|    f()
  274|  27.1k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindcNCINvXNtB8_9characterINtB15_4CharNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_8CompleteEEs1_0EB1A_:
  272|  78.7k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  78.7k|    f()
  274|  78.7k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindcNCINvXNtB8_9characterINtB15_4CharuEINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_8CompleteEEs1_0ECsiZ6QsNdkp8Z_15rsonpath_syntax:
  272|  12.0k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  12.0k|    f()
  274|  12.0k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindcNCINvXs_NtB8_9characterINtB17_7SatisfyNCINvB17_6one_ofReB1R_uE0NCB1D_s_0EINtB6_6ParserB1R_E7processINtB6_7OutputMBz_Bz_NtB6_8CompleteEEs1_0ECsiZ6QsNdkp8Z_15rsonpath_syntax:
  272|  17.9k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  17.9k|    f()
  274|  17.9k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindcNCINvXsf_B6_NCINvNtNtB8_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtB6_6ParserB1L_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB1R_:
  272|  23.1k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  23.1k|    f()
  274|  23.1k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindcNCINvXsf_B6_NCINvNtNtB8_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtB6_6ParserB1L_E7processINtB6_7OutputMBz_NtB6_5CheckNtB6_9StreamingEEs_0EB1R_:
  272|  5.72k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  5.72k|    f()
  274|  5.72k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindcNCINvXsf_B6_NCINvNtNtB8_9character8complete6one_ofReB1N_uE0INtB6_6ParserB1N_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0ECsiZ6QsNdkp8Z_15rsonpath_syntax:
  272|  17.9k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  17.9k|    f()
  274|  17.9k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4binduNCINvXNtB8_9characterINtB15_4CharuEINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_8CompleteEEs0_0ECsiZ6QsNdkp8Z_15rsonpath_syntax:
  272|  18.9k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  18.9k|    f()
  274|  18.9k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4binduNCINvXs_NtB8_9characterINtB17_7SatisfyNCINvB17_6one_ofReB1R_uE0NCB1D_s_0EINtB6_6ParserB1R_E7processINtB6_7OutputMBz_Bz_NtB6_8CompleteEEs0_0ECsiZ6QsNdkp8Z_15rsonpath_syntax:
  272|  18.1k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  18.1k|    f()
  274|  18.1k|  }
_RINvXsb_NtCselIyhuOc7xF_3nom8internalNtB6_5CheckNtB6_4Mode4bindReNCINvXsf_B6_INvNtNtB8_9character8complete6digit1BZ_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtB6_6ParserBZ_E7processINtB6_7OutputMBz_NtB6_4EmitNtB6_9StreamingEEs_0EB1U_:
  302|  10.8k|  fn bind<T, F: FnOnce() -> T>(_: F) -> Self::Output<T> {}
_RINvXsb_NtCselIyhuOc7xF_3nom8internalNtB6_5CheckNtB6_4Mode4bindcNCINvXsf_B6_NCINvNtNtB8_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtB6_6ParserB1M_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB1S_:
  302|    365|  fn bind<T, F: FnOnce() -> T>(_: F) -> Self::Output<T> {}
_RINvXsb_NtCselIyhuOc7xF_3nom8internalNtB6_5CheckNtB6_4Mode4bindcNCINvXsf_B6_NCINvNtNtB8_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtB6_6ParserB1M_E7processINtB6_7OutputMBz_NtB6_4EmitNtB6_9StreamingEEs_0EB1S_:
  302|  29.6k|  fn bind<T, F: FnOnce() -> T>(_: F) -> Self::Output<T> {}
_RINvXsf_NtCselIyhuOc7xF_3nom8internalINvNtNtB8_9character8complete6digit1ReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtB6_6ParserB19_E7processINtB6_7OutputMNtB6_4EmitB2P_NtB6_9StreamingEEB1f_:
  516|  23.2k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  23.2k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  23.2k|    })?;
  522|    777|    Ok((i, OM::Output::bind(|| o)))
  523|  23.2k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalINvNtNtB8_9character8complete6digit1ReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtB6_6ParserB19_E7processINtB6_7OutputMNtB6_4EmitNtB6_5CheckNtB6_9StreamingEEB1f_:
  516|    365|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|    365|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|    365|    })?;
  522|    365|    Ok((i, OM::Output::bind(|| o)))
  523|    365|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalINvNtNtB8_9character8complete6digit1ReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtB6_6ParserB19_E7processINtB6_7OutputMNtB6_5CheckNtB6_4EmitNtB6_9StreamingEEB1f_:
  516|  39.7k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  39.7k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  39.7k|    })?;
  522|  10.8k|    Ok((i, OM::Output::bind(|| o)))
  523|  39.7k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtNtB8_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtB6_6ParserB19_E7processINtB6_7OutputMNtB6_4EmitB2Q_NtB6_9StreamingEEB1f_:
  516|  71.6k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  71.6k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  71.6k|    })?;
  522|  23.1k|    Ok((i, OM::Output::bind(|| o)))
  523|  71.6k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtNtB8_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtB6_6ParserB19_E7processINtB6_7OutputMNtB6_4EmitNtB6_5CheckNtB6_9StreamingEEB1f_:
  516|  26.7k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  26.7k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  26.7k|    })?;
  522|  5.72k|    Ok((i, OM::Output::bind(|| o)))
  523|  26.7k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtNtB8_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtB6_6ParserB19_E7processINtB6_7OutputMNtB6_5CheckB2Q_NtB6_9StreamingEEB1f_:
  516|    777|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|    777|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|    777|    })?;
  522|    365|    Ok((i, OM::Output::bind(|| o)))
  523|    777|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtNtB8_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtB6_6ParserB19_E7processINtB6_7OutputMNtB6_5CheckNtB6_4EmitNtB6_9StreamingEEB1f_:
  516|   172k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|   172k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|   172k|    })?;
  522|  29.6k|    Ok((i, OM::Output::bind(|| o)))
  523|   172k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtNtB8_9character8complete6one_ofReB1b_uE0INtB6_6ParserB1b_E7processINtB6_7OutputMNtB6_4EmitB1Y_NtB6_9StreamingEECsiZ6QsNdkp8Z_15rsonpath_syntax:
  516|  36.0k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  36.0k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  36.0k|    })?;
  522|  17.9k|    Ok((i, OM::Output::bind(|| o)))
  523|  36.0k|  }
_RINvYNCINvNtNtCselIyhuOc7xF_3nom9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtNtBc_8internal6ParserBS_E3mapNCINvNtBc_10combinator5valueBS_NtBY_12ComparisonOpBU_B3_E0B2W_EBY_:
  431|  35.1k|  fn map<G, O2>(self, g: G) -> Map<Self, G>
  432|  35.1k|  where
  433|  35.1k|    G: FnMut(Self::Output) -> O2,
  434|  35.1k|    Self: core::marker::Sized,
  435|  35.1k|  {
  436|  35.1k|    Map { f: self, g }
  437|  35.1k|  }
_RINvYNCINvNtNtCselIyhuOc7xF_3nom9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtNtBc_8internal6ParserBS_E3mapNCINvNtBc_10combinator5valueBS_NtNtBY_6parser16RootSelectorTypeBU_B3_E0B2W_EBY_:
  431|  38.9k|  fn map<G, O2>(self, g: G) -> Map<Self, G>
  432|  38.9k|  where
  433|  38.9k|    G: FnMut(Self::Output) -> O2,
  434|  38.9k|    Self: core::marker::Sized,
  435|  38.9k|  {
  436|  38.9k|    Map { f: self, g }
  437|  38.9k|  }
_RNvYNCINvNtNtCselIyhuOc7xF_3nom9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtNtBb_8internal6ParserBR_E5parseBX_:
  412|  19.0k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  19.0k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  19.0k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode3mapNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorBX_NCINvXs1_NtB8_6branchINtB28_6ChoiceTINtB6_3MapNCINvNtNtB8_5bytes8complete3tagReB3e_BX_E0NCINvNtB8_10combinator5valueB3e_NtNvNtB11_6parser12logical_expr9BooleanOpBX_B2J_E0EB2z_EEINtB6_6ParserB3e_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB11_:
  277|  20.4k|  fn map<T, U, F: FnOnce(T) -> U>(x: Self::Output<T>, f: F) -> Self::Output<U> {
  278|  20.4k|    f(x)
  279|  20.4k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode3mapNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorBX_NCINvXs1_NtB8_6branchINtB28_6ChoiceTINtNtB8_8sequence8PrecededNCINvNtNtB8_9character8complete4charReBX_E0NCNvNtB11_6parser6string0EB2z_EEINtB6_6ParserB3z_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB11_:
  277|  41.3k|  fn map<T, U, F: FnOnce(T) -> U>(x: Self::Output<T>, f: F) -> Self::Output<U> {
  278|  41.3k|    f(x)
  279|  41.3k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode3mapNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorBX_NCINvXs4_NtB8_6branchINtB28_6ChoiceTINtB6_4IntoNvNtB11_6parser6numberNtB11_7LiteralBX_EIB2A_NvB2M_14string_literalB36_BX_EINtB6_3MapNCINvNtNtB8_5bytes8complete3tagReB4C_BX_E0NCINvNtB8_10combinator5valueB4C_B36_BX_B47_E0EB3X_B3X_EEINtB6_6ParserB4C_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs2_0EB11_:
  277|  19.4k|  fn map<T, U, F: FnOnce(T) -> U>(x: Self::Output<T>, f: F) -> Self::Output<U> {
  278|  19.4k|    f(x)
  279|  19.4k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode3mapNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorBX_NCINvXs5_NtB8_6branchINtB28_6ChoiceTINtB6_3MapNCINvNtNtB8_5bytes8complete3tagReB3e_BX_E0NCINvNtB8_10combinator5valueB3e_NtB11_12ComparisonOpBX_B2J_E0EB2z_B2z_B2z_IB2A_NCINvNtNtB8_9character8complete4charB3e_BX_E0NCIB3s_B3e_B3V_BX_B4G_E0EB4B_EEINtB6_6ParserB3e_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs3_0EB11_:
  277|  13.2k|  fn map<T, U, F: FnOnce(T) -> U>(x: Self::Output<T>, f: F) -> Self::Output<U> {
  278|  13.2k|    f(x)
  279|  13.2k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode3mapReNtCsiZ6QsNdkp8Z_15rsonpath_syntax12ComparisonOpNCINvXsg_B6_INtB6_3MapNCINvNtNtB8_5bytes8complete3tagBX_BX_NtNtB11_5error18InternalParseErrorE0NCINvNtB8_10combinator5valueBX_BZ_B2H_B26_E0EINtB6_6ParserBX_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EB11_:
  277|  2.33k|  fn map<T, U, F: FnOnce(T) -> U>(x: Self::Output<T>, f: F) -> Self::Output<U> {
  278|  2.33k|    f(x)
  279|  2.33k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode3mapReNtCsiZ6QsNdkp8Z_15rsonpath_syntax7LiteralNCINvXsg_B6_INtB6_3MapNCINvNtNtB8_5bytes8complete3tagBX_BX_NtNtB11_5error18InternalParseErrorE0NCINvNtB8_10combinator5valueBX_BZ_B2B_B20_E0EINtB6_6ParserBX_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EB11_:
  277|    982|  fn map<T, U, F: FnOnce(T) -> U>(x: Self::Output<T>, f: F) -> Self::Output<U> {
  278|    982|    f(x)
  279|    982|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode3mapReNtNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_expr9BooleanOpNCINvXsg_B6_INtB6_3MapNCINvNtNtB8_5bytes8complete3tagBX_BX_NtNtB15_5error18InternalParseErrorE0NCINvNtB8_10combinator5valueBX_BZ_B32_B2r_E0EINtB6_6ParserBX_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EB15_:
  277|  4.79k|  fn map<T, U, F: FnOnce(T) -> U>(x: Self::Output<T>, f: F) -> Self::Output<U> {
  278|  4.79k|    f(x)
  279|  4.79k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode3mapcNtCsiZ6QsNdkp8Z_15rsonpath_syntax12ComparisonOpNCINvXsg_B6_INtB6_3MapNCINvNtNtB8_9character8complete4charReNtNtB10_5error18InternalParseErrorE0NCINvNtB8_10combinator5valueB2F_BY_B2H_B25_E0EINtB6_6ParserB2F_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EB10_:
  277|  1.97k|  fn map<T, U, F: FnOnce(T) -> U>(x: Self::Output<T>, f: F) -> Self::Output<U> {
  278|  1.97k|    f(x)
  279|  1.97k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode3mapcNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser16RootSelectorTypeNCINvXsg_B6_INtB6_3MapNCINvNtNtB8_9character8complete4charReNtNtB12_5error18InternalParseErrorE0NCINvNtB8_10combinator5valueB2S_BY_B2U_B2i_E0EINtB6_6ParserB2S_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EB12_:
  277|  19.4k|  fn map<T, U, F: FnOnce(T) -> U>(x: Self::Output<T>, f: F) -> Self::Output<U> {
  278|  19.4k|    f(x)
  279|  19.4k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode7combineNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorB11_B11_NCINvXs1_NtB8_6branchINtB2h_6ChoiceTINtB6_3MapNCINvNtNtB8_5bytes8complete3tagReB3n_B11_E0NCINvNtB8_10combinator5valueB3n_NtNvNtB15_6parser12logical_expr9BooleanOpB11_B2S_E0EB2I_EEINtB6_6ParserB3n_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EB15_:
  282|  20.4k|  fn combine<T, U, V, F: FnOnce(T, U) -> V>(
  283|  20.4k|    x: Self::Output<T>,
  284|  20.4k|    y: Self::Output<U>,
  285|  20.4k|    f: F,
  286|  20.4k|  ) -> Self::Output<V> {
  287|  20.4k|    f(x, y)
  288|  20.4k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode7combineNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorB11_B11_NCINvXs1_NtB8_6branchINtB2h_6ChoiceTINtNtB8_8sequence8PrecededNCINvNtNtB8_9character8complete4charReB11_E0NCNvNtB15_6parser6string0EB2I_EEINtB6_6ParserB3I_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EB15_:
  282|  41.3k|  fn combine<T, U, V, F: FnOnce(T, U) -> V>(
  283|  41.3k|    x: Self::Output<T>,
  284|  41.3k|    y: Self::Output<U>,
  285|  41.3k|    f: F,
  286|  41.3k|  ) -> Self::Output<V> {
  287|  41.3k|    f(x, y)
  288|  41.3k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode7combineNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorB11_B11_NCINvXs4_NtB8_6branchINtB2h_6ChoiceTINtB6_4IntoNvNtB15_6parser6numberNtB15_7LiteralB11_EIB2J_NvB2V_14string_literalB3f_B11_EINtB6_3MapNCINvNtNtB8_5bytes8complete3tagReB4N_B11_E0NCINvNtB8_10combinator5valueB4N_B3f_B11_B4i_E0EB48_B48_EEINtB6_6ParserB4N_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EB15_:
  282|  19.4k|  fn combine<T, U, V, F: FnOnce(T, U) -> V>(
  283|  19.4k|    x: Self::Output<T>,
  284|  19.4k|    y: Self::Output<U>,
  285|  19.4k|    f: F,
  286|  19.4k|  ) -> Self::Output<V> {
  287|  19.4k|    f(x, y)
  288|  19.4k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode7combineNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorB11_B11_NCINvXs4_NtB8_6branchINtB2h_6ChoiceTINtB6_4IntoNvNtB15_6parser6numberNtB15_7LiteralB11_EIB2J_NvB2V_14string_literalB3f_B11_EINtB6_3MapNCINvNtNtB8_5bytes8complete3tagReB4N_B11_E0NCINvNtB8_10combinator5valueB4N_B3f_B11_B4i_E0EB48_B48_EEINtB6_6ParserB4N_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs0_0EB15_:
  282|  19.4k|  fn combine<T, U, V, F: FnOnce(T, U) -> V>(
  283|  19.4k|    x: Self::Output<T>,
  284|  19.4k|    y: Self::Output<U>,
  285|  19.4k|    f: F,
  286|  19.4k|  ) -> Self::Output<V> {
  287|  19.4k|    f(x, y)
  288|  19.4k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode7combineNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorB11_B11_NCINvXs4_NtB8_6branchINtB2h_6ChoiceTINtB6_4IntoNvNtB15_6parser6numberNtB15_7LiteralB11_EIB2J_NvB2V_14string_literalB3f_B11_EINtB6_3MapNCINvNtNtB8_5bytes8complete3tagReB4N_B11_E0NCINvNtB8_10combinator5valueB4N_B3f_B11_B4i_E0EB48_B48_EEINtB6_6ParserB4N_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs1_0EB15_:
  282|  19.4k|  fn combine<T, U, V, F: FnOnce(T, U) -> V>(
  283|  19.4k|    x: Self::Output<T>,
  284|  19.4k|    y: Self::Output<U>,
  285|  19.4k|    f: F,
  286|  19.4k|  ) -> Self::Output<V> {
  287|  19.4k|    f(x, y)
  288|  19.4k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode7combineNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorB11_B11_NCINvXs4_NtB8_6branchINtB2h_6ChoiceTINtB6_4IntoNvNtB15_6parser6numberNtB15_7LiteralB11_EIB2J_NvB2V_14string_literalB3f_B11_EINtB6_3MapNCINvNtNtB8_5bytes8complete3tagReB4N_B11_E0NCINvNtB8_10combinator5valueB4N_B3f_B11_B4i_E0EB48_B48_EEINtB6_6ParserB4N_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB15_:
  282|  19.4k|  fn combine<T, U, V, F: FnOnce(T, U) -> V>(
  283|  19.4k|    x: Self::Output<T>,
  284|  19.4k|    y: Self::Output<U>,
  285|  19.4k|    f: F,
  286|  19.4k|  ) -> Self::Output<V> {
  287|  19.4k|    f(x, y)
  288|  19.4k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode7combineNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorB11_B11_NCINvXs5_NtB8_6branchINtB2h_6ChoiceTINtB6_3MapNCINvNtNtB8_5bytes8complete3tagReB3n_B11_E0NCINvNtB8_10combinator5valueB3n_NtB15_12ComparisonOpB11_B2S_E0EB2I_B2I_B2I_IB2J_NCINvNtNtB8_9character8complete4charB3n_B11_E0NCIB3C_B3n_B45_B11_B4R_E0EB4M_EEINtB6_6ParserB3n_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EB15_:
  282|  13.2k|  fn combine<T, U, V, F: FnOnce(T, U) -> V>(
  283|  13.2k|    x: Self::Output<T>,
  284|  13.2k|    y: Self::Output<U>,
  285|  13.2k|    f: F,
  286|  13.2k|  ) -> Self::Output<V> {
  287|  13.2k|    f(x, y)
  288|  13.2k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode7combineNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorB11_B11_NCINvXs5_NtB8_6branchINtB2h_6ChoiceTINtB6_3MapNCINvNtNtB8_5bytes8complete3tagReB3n_B11_E0NCINvNtB8_10combinator5valueB3n_NtB15_12ComparisonOpB11_B2S_E0EB2I_B2I_B2I_IB2J_NCINvNtNtB8_9character8complete4charB3n_B11_E0NCIB3C_B3n_B45_B11_B4R_E0EB4M_EEINtB6_6ParserB3n_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs0_0EB15_:
  282|  13.2k|  fn combine<T, U, V, F: FnOnce(T, U) -> V>(
  283|  13.2k|    x: Self::Output<T>,
  284|  13.2k|    y: Self::Output<U>,
  285|  13.2k|    f: F,
  286|  13.2k|  ) -> Self::Output<V> {
  287|  13.2k|    f(x, y)
  288|  13.2k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode7combineNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorB11_B11_NCINvXs5_NtB8_6branchINtB2h_6ChoiceTINtB6_3MapNCINvNtNtB8_5bytes8complete3tagReB3n_B11_E0NCINvNtB8_10combinator5valueB3n_NtB15_12ComparisonOpB11_B2S_E0EB2I_B2I_B2I_IB2J_NCINvNtNtB8_9character8complete4charB3n_B11_E0NCIB3C_B3n_B45_B11_B4R_E0EB4M_EEINtB6_6ParserB3n_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs1_0EB15_:
  282|  13.2k|  fn combine<T, U, V, F: FnOnce(T, U) -> V>(
  283|  13.2k|    x: Self::Output<T>,
  284|  13.2k|    y: Self::Output<U>,
  285|  13.2k|    f: F,
  286|  13.2k|  ) -> Self::Output<V> {
  287|  13.2k|    f(x, y)
  288|  13.2k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode7combineNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorB11_B11_NCINvXs5_NtB8_6branchINtB2h_6ChoiceTINtB6_3MapNCINvNtNtB8_5bytes8complete3tagReB3n_B11_E0NCINvNtB8_10combinator5valueB3n_NtB15_12ComparisonOpB11_B2S_E0EB2I_B2I_B2I_IB2J_NCINvNtNtB8_9character8complete4charB3n_B11_E0NCIB3C_B3n_B45_B11_B4R_E0EB4M_EEINtB6_6ParserB3n_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs2_0EB15_:
  282|  13.2k|  fn combine<T, U, V, F: FnOnce(T, U) -> V>(
  283|  13.2k|    x: Self::Output<T>,
  284|  13.2k|    y: Self::Output<U>,
  285|  13.2k|    f: F,
  286|  13.2k|  ) -> Self::Output<V> {
  287|  13.2k|    f(x, y)
  288|  13.2k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode7combineNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorB11_B11_NCINvXs5_NtB8_6branchINtB2h_6ChoiceTINtB6_3MapNCINvNtNtB8_5bytes8complete3tagReB3n_B11_E0NCINvNtB8_10combinator5valueB3n_NtB15_12ComparisonOpB11_B2S_E0EB2I_B2I_B2I_IB2J_NCINvNtNtB8_9character8complete4charB3n_B11_E0NCIB3C_B3n_B45_B11_B4R_E0EB4M_EEINtB6_6ParserB3n_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB15_:
  282|  13.2k|  fn combine<T, U, V, F: FnOnce(T, U) -> V>(
  283|  13.2k|    x: Self::Output<T>,
  284|  13.2k|    y: Self::Output<U>,
  285|  13.2k|    f: F,
  286|  13.2k|  ) -> Self::Output<V> {
  287|  13.2k|    f(x, y)
  288|  13.2k|  }
_RINvXsg_NtCselIyhuOc7xF_3nom8internalINtB6_3MapNCINvNtNtB8_5bytes8complete3tagReB1e_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtB8_10combinator5valueB1e_NtB1o_12ComparisonOpB1k_BJ_E0EINtB6_6ParserB1e_E7processINtB6_7OutputMNtB6_4EmitB3Z_NtB6_9StreamingEEB1o_:
  592|  66.8k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  593|  66.8k|    match self.f.process::<OM>(i) {
  594|  64.5k|      Err(e) => Err(e),
  595|  2.33k|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| (self.g)(o)))),
  596|       |    }
  597|  66.8k|  }
_RINvXsg_NtCselIyhuOc7xF_3nom8internalINtB6_3MapNCINvNtNtB8_5bytes8complete3tagReB1e_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtB8_10combinator5valueB1e_NtB1o_7LiteralB1k_BJ_E0EINtB6_6ParserB1e_E7processINtB6_7OutputMNtB6_4EmitB3T_NtB6_9StreamingEEB1o_:
  592|  60.6k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  593|  60.6k|    match self.f.process::<OM>(i) {
  594|  59.7k|      Err(e) => Err(e),
  595|    982|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| (self.g)(o)))),
  596|       |    }
  597|  60.6k|  }
_RINvXsg_NtCselIyhuOc7xF_3nom8internalINtB6_3MapNCINvNtNtB8_5bytes8complete3tagReB1e_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtB8_10combinator5valueB1e_NtNvNtB1o_6parser12logical_expr9BooleanOpB1k_BJ_E0EINtB6_6ParserB1e_E7processINtB6_7OutputMNtB6_4EmitB4k_NtB6_9StreamingEEB1o_:
  592|  49.0k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  593|  49.0k|    match self.f.process::<OM>(i) {
  594|  44.3k|      Err(e) => Err(e),
  595|  4.79k|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| (self.g)(o)))),
  596|       |    }
  597|  49.0k|  }
_RINvXsg_NtCselIyhuOc7xF_3nom8internalINtB6_3MapNCINvNtNtB8_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtB8_10combinator5valueB1j_NtB1p_12ComparisonOpB1l_BJ_E0EINtB6_6ParserB1j_E7processINtB6_7OutputMNtB6_4EmitB40_NtB6_9StreamingEEB1p_:
  592|  29.2k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  593|  29.2k|    match self.f.process::<OM>(i) {
  594|  27.2k|      Err(e) => Err(e),
  595|  1.97k|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| (self.g)(o)))),
  596|       |    }
  597|  29.2k|  }
_RINvXsg_NtCselIyhuOc7xF_3nom8internalINtB6_3MapNCINvNtNtB8_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtB8_10combinator5valueB1j_NtNtB1p_6parser16RootSelectorTypeB1l_BJ_E0EINtB6_6ParserB1j_E7processINtB6_7OutputMNtB6_4EmitB4d_NtB6_9StreamingEEB1p_:
  592|  23.2k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  593|  23.2k|    match self.f.process::<OM>(i) {
  594|  3.82k|      Err(e) => Err(e),
  595|  19.4k|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| (self.g)(o)))),
  596|       |    }
  597|  23.2k|  }
_RINvYINtNtCselIyhuOc7xF_3nom6branch6ChoiceTNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser13child_segment0INtNtB8_8sequence8PrecededNCINvNtNtB8_9character8complete4charReNtNtBL_5error18InternalParseErrorE0INtNtB8_10combinator3CutIB4_TINtNtB8_8internal3MapNvBJ_17wildcard_selectorNvMst_BL_NtBL_9Selectors3oneENvBJ_21member_name_shorthandNCINvBJ_14failed_segmentB4z_E0EEEEEEINtB3K_6ParserB2D_E3mapNcNtNtBL_7Segment5Child0B6m_EBL_:
  431|  6.16k|  fn map<G, O2>(self, g: G) -> Map<Self, G>
  432|  6.16k|  where
  433|  6.16k|    G: FnMut(Self::Output) -> O2,
  434|  6.16k|    Self: core::marker::Sized,
  435|  6.16k|  {
  436|  6.16k|    Map { f: self, g }
  437|  6.16k|  }
_RNvYINtNtCselIyhuOc7xF_3nom6branch6ChoiceTINtNtB7_8internal3MapNCINvNtNtB7_5bytes8complete3tagReB1u_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtB7_10combinator5valueB1u_NtB1E_12ComparisonOpB1A_BZ_E0EBE_BE_BE_IBF_NCINvNtNtB7_9character8complete4charB1u_B1A_E0NCIB2E_B1u_B37_B1A_B3O_E0EB3K_EEINtBH_6ParserB1u_E5parseB1E_:
  412|  17.5k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  17.5k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  17.5k|  }
_RNvYINtNtCselIyhuOc7xF_3nom6branch6ChoiceTINtNtB7_8internal3MapNCINvNtNtB7_5bytes8complete3tagReB1u_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtB7_10combinator5valueB1u_NtNvNtB1E_6parser12logical_expr9BooleanOpB1A_BZ_E0EBE_EEINtBH_6ParserB1u_E5parseB1E_:
  412|  25.2k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  25.2k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  25.2k|  }
_RNvYINtNtCselIyhuOc7xF_3nom6branch6ChoiceTINtNtB7_8internal3MapNCINvNtNtB7_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtB7_10combinator5valueB1z_NtNtB1F_6parser16RootSelectorTypeB1B_BZ_E0EBE_EEINtBH_6ParserB1z_E5parseB1F_:
  412|  19.4k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  19.4k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  19.4k|  }
_RNvYINtNtCselIyhuOc7xF_3nom6branch6ChoiceTINtNtB7_8internal4IntoNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser6numberNtB14_7LiteralNtNtB14_5error18InternalParseErrorEIBF_NvB12_14string_literalB1N_B21_EINtBH_3MapNCINvNtNtB7_5bytes8complete3tagReB3O_B21_E0NCINvNtB7_10combinator5valueB3O_B1N_B21_B3j_E0EB39_B39_EEINtBH_6ParserB3O_E5parseB14_:
  412|  23.2k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  23.2k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  23.2k|  }
_RNvYINtNtCselIyhuOc7xF_3nom6branch6ChoiceTINtNtB7_8internal4IntoNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser7literalNtB14_10ComparableNtNtB14_5error18InternalParseErrorENCNvB12_10comparable0EEINtBH_6ParserReE5parseB14_:
  412|  4.31k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  4.31k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  4.31k|  }
_RNvYINtNtCselIyhuOc7xF_3nom6branch6ChoiceTINtNtB7_8sequence8PrecededNCINvNtNtB7_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCNvNtB1K_6parser6string0EBE_EEINtNtB7_8internal6ParserB1E_E5parseB1K_:
  412|  49.9k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  49.9k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  49.9k|  }
_RNvYINtNtCselIyhuOc7xF_3nom6branch6ChoiceTNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtBL_8SelectorNvBJ_13name_selectorNtNtBL_5error18InternalParseErrorE0NCIBH_B1G_NvBJ_17wildcard_selectorB2e_E0NCIBH_B1G_NvBJ_14slice_selectorB2e_E0NCIBH_B1G_NvBJ_14index_selectorB2e_E0NCIBH_B1G_NCNvBJ_8selector0B2e_E0NvBJ_15failed_selectorEEINtNtB7_8internal6ParserReE5parseBL_:
  412|  27.5k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  27.5k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  27.5k|  }
_RNvYINtNtCselIyhuOc7xF_3nom6branch6ChoiceTNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12filter_query0NCBG_s_0NCINvBI_28failed_segment_within_filterNtBK_7SegmentE0EEINtNtB7_8internal6ParserReE5parseBK_:
  412|  17.9k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  17.9k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  17.9k|  }
_RNvYINtNtCselIyhuOc7xF_3nom6branch6ChoiceTNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser7segment0NCBG_s_0NCINvBI_14failed_segmentNtBK_7SegmentE0EEINtNtB7_8internal6ParserReE5parseBK_:
  412|  1.90k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  1.90k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  1.90k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindReNCINvXsf_B6_NCINvNtNtB8_5bytes8complete3tagBY_BY_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtB6_6ParserBY_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB1R_:
  272|  9.90k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  9.90k|    f()
  274|  9.90k|  }
_RINvXsb_NtCselIyhuOc7xF_3nom8internalNtB6_5CheckNtB6_4Mode4bindReNCINvXsf_B6_NCINvNtNtB8_5bytes8complete3tagBZ_BZ_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtB6_6ParserBZ_E7processINtB6_7OutputMBz_NtB6_4EmitNtB6_9StreamingEEs_0EB1S_:
  302|  13.6k|  fn bind<T, F: FnOnce() -> T>(_: F) -> Self::Output<T> {}
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtNtB8_5bytes8complete11tag_no_caseReB1d_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtB6_6ParserB1d_E7processINtB6_7OutputMNtB6_5CheckB2Y_NtB6_9StreamingEEB1n_:
  516|    777|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|    777|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|    777|    })?;
  522|      0|    Ok((i, OM::Output::bind(|| o)))
  523|    777|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtNtB8_5bytes8complete3tagReB14_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtB6_6ParserB14_E7processINtB6_7OutputMNtB6_4EmitB2P_NtB6_9StreamingEEB1e_:
  516|   197k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|   197k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|   197k|    })?;
  522|  9.90k|    Ok((i, OM::Output::bind(|| o)))
  523|   197k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtNtB8_5bytes8complete3tagReB14_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtB6_6ParserB14_E7processINtB6_7OutputMNtB6_5CheckNtB6_4EmitNtB6_9StreamingEEB1e_:
  516|  19.8k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  19.8k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  19.8k|    })?;
  522|  13.6k|    Ok((i, OM::Output::bind(|| o)))
  523|  19.8k|  }
_RINvYNCINvNtNtCselIyhuOc7xF_3nom5bytes8complete3tagReBN_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtNtBc_8internal6ParserBN_E3mapNCINvNtBc_10combinator5valueBN_NtBW_12ComparisonOpBS_B3_E0B2U_EBW_:
  431|  70.3k|  fn map<G, O2>(self, g: G) -> Map<Self, G>
  432|  70.3k|  where
  433|  70.3k|    G: FnMut(Self::Output) -> O2,
  434|  70.3k|    Self: core::marker::Sized,
  435|  70.3k|  {
  436|  70.3k|    Map { f: self, g }
  437|  70.3k|  }
_RINvYNCINvNtNtCselIyhuOc7xF_3nom5bytes8complete3tagReBN_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtNtBc_8internal6ParserBN_E3mapNCINvNtBc_10combinator5valueBN_NtBW_7LiteralBS_B3_E0B2U_EBW_:
  431|  69.7k|  fn map<G, O2>(self, g: G) -> Map<Self, G>
  432|  69.7k|  where
  433|  69.7k|    G: FnMut(Self::Output) -> O2,
  434|  69.7k|    Self: core::marker::Sized,
  435|  69.7k|  {
  436|  69.7k|    Map { f: self, g }
  437|  69.7k|  }
_RINvYNCINvNtNtCselIyhuOc7xF_3nom5bytes8complete3tagReBN_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtNtBc_8internal6ParserBN_E3mapNCINvNtBc_10combinator5valueBN_NtNvNtBW_6parser12logical_expr9BooleanOpBS_B3_E0B2U_EBW_:
  431|  50.4k|  fn map<G, O2>(self, g: G) -> Map<Self, G>
  432|  50.4k|  where
  433|  50.4k|    G: FnMut(Self::Output) -> O2,
  434|  50.4k|    Self: core::marker::Sized,
  435|  50.4k|  {
  436|  50.4k|    Map { f: self, g }
  437|  50.4k|  }
_RINvYNCINvNtNtCselIyhuOc7xF_3nom5bytes8complete3tagReBN_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtNtBc_8internal6ParserBN_E3mapNCNvNtBW_6parser17wildcard_selector0NtBW_8SelectorEBW_:
  431|  20.8k|  fn map<G, O2>(self, g: G) -> Map<Self, G>
  432|  20.8k|  where
  433|  20.8k|    G: FnMut(Self::Output) -> O2,
  434|  20.8k|    Self: core::marker::Sized,
  435|  20.8k|  {
  436|  20.8k|    Map { f: self, g }
  437|  20.8k|  }
_RNvXNtCselIyhuOc7xF_3nom8internalINtNtCshZc3FwCJ069_4core6result6ResultTReNtCsiZ6QsNdkp8Z_15rsonpath_syntax7SegmentEINtB2_3ErrNtNtB1c_5error18InternalParseErrorEEINtB2_6FinishB18_B1a_B20_E6finishB1c_:
   37|  19.8k|  fn finish(self) -> Result<(I, O), E> {
   38|  1.37k|    match self {
   39|  18.4k|      Ok(res) => Ok(res),
   40|  1.37k|      Err(Err::Error(e)) | Err(Err::Failure(e)) => Err(e),
   41|       |      Err(Err::Incomplete(_)) => {
   42|      0|        panic!("Cannot call `finish()` on `Err(Err::Incomplete(_))`: this result means that the parser does not have enough data to decide, you should gather more data and try to reapply the parser instead")
   43|       |      }
   44|       |    }
   45|  19.8k|  }
_RNvXNtCselIyhuOc7xF_3nom8internalINtNtCshZc3FwCJ069_4core6result6ResultTReNtCsiZ6QsNdkp8Z_15rsonpath_syntax8SelectorEINtB2_3ErrNtNtB1c_5error18InternalParseErrorEEINtB2_6FinishB18_B1a_B21_E6finishB1c_:
   37|  27.5k|  fn finish(self) -> Result<(I, O), E> {
   38|  1.37k|    match self {
   39|  26.1k|      Ok(res) => Ok(res),
   40|  1.37k|      Err(Err::Error(e)) | Err(Err::Failure(e)) => Err(e),
   41|       |      Err(Err::Incomplete(_)) => {
   42|      0|        panic!("Cannot call `finish()` on `Err(Err::Incomplete(_))`: this result means that the parser does not have enough data to decide, you should gather more data and try to reapply the parser instead")
   43|       |      }
   44|       |    }
   45|  27.5k|  }
_RNvXNtCselIyhuOc7xF_3nom8internalINtNtCshZc3FwCJ069_4core6result6ResultTRecEINtB2_3ErrINtNtB4_5error5ErrorB18_EEEINtB2_6FinishB18_cB1m_E6finishCsiZ6QsNdkp8Z_15rsonpath_syntax:
   37|  1.01k|  fn finish(self) -> Result<(I, O), E> {
   38|      0|    match self {
   39|  1.01k|      Ok(res) => Ok(res),
   40|      0|      Err(Err::Error(e)) | Err(Err::Failure(e)) => Err(e),
   41|       |      Err(Err::Incomplete(_)) => {
   42|      0|        panic!("Cannot call `finish()` on `Err(Err::Incomplete(_))`: this result means that the parser does not have enough data to decide, you should gather more data and try to reapply the parser instead")
   43|       |      }
   44|       |    }
   45|  1.01k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode3mapReINtNtCshZc3FwCJ069_4core6option6OptionBX_ENcNtBZ_4Some0ECsiZ6QsNdkp8Z_15rsonpath_syntax:
  277|  8.04k|  fn map<T, U, F: FnOnce(T) -> U>(x: Self::Output<T>, f: F) -> Self::Output<U> {
  278|  8.04k|    f(x)
  279|  8.04k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindINtNtCshZc3FwCJ069_4core6option6OptionReENCINvXNtB8_10combinatorINtB1J_3OptNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceB1A_NvB2g_3intNtNtB2i_5error18InternalParseErrorE0EINtB6_6ParserB1A_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EB2i_:
  272|    389|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|    389|    f()
  274|    389|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindINtNtCshZc3FwCJ069_4core6option6OptionReENCINvXNtB8_10combinatorINtB1J_3OptNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser3intEINtB6_6ParserB1A_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EB2f_:
  272|  14.3k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  14.3k|    f()
  274|  14.3k|  }
_RINvYINtNtCselIyhuOc7xF_3nom8sequence8PrecededNCINvNtNtB8_5bytes8complete3tagReB1d_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtNtB8_10combinator3CutINtNtB8_6branch6ChoiceTNCNvNtB1n_6parser18descendant_segment0INtNtB8_8internal3MapNvB39_17wildcard_selectorNvMst_B1n_NtB1n_9Selectors3oneENvB39_21member_name_shorthandNCINvB39_14failed_segmentB4B_E0EEEEINtB3K_6ParserB1d_E3mapNcNtNtB1n_7Segment10Descendant0B6p_EB1n_:
  431|  19.8k|  fn map<G, O2>(self, g: G) -> Map<Self, G>
  432|  19.8k|  where
  433|  19.8k|    G: FnMut(Self::Output) -> O2,
  434|  19.8k|    Self: core::marker::Sized,
  435|  19.8k|  {
  436|  19.8k|    Map { f: self, g }
  437|  19.8k|  }
_RINvYINtNtCselIyhuOc7xF_3nom8sequence8PrecededNCINvNtNtB8_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtB1o_6parser17ignore_whitespaceNtB1o_11LogicalExprNCNvB2q_15filter_selector0B1k_E0EINtNtB8_8internal6ParserB1i_E4intoNtB1o_8SelectorB1k_EB1o_:
  497|  14.1k|  fn into<O2: From<Self::Output>, E2: From<Self::Error>>(self) -> Into<Self, O2, E2>
  498|  14.1k|  where
  499|  14.1k|    Self: core::marker::Sized,
  500|  14.1k|  {
  501|  14.1k|    Into {
  502|  14.1k|      f: self,
  503|  14.1k|      phantom_out2: core::marker::PhantomData,
  504|  14.1k|      phantom_err2: core::marker::PhantomData,
  505|  14.1k|    }
  506|  14.1k|  }
_RNvYINtNtCselIyhuOc7xF_3nom8sequence10TerminatedINtNtB7_10combinator3OptNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser3intENCINvB1a_17ignore_whitespacecNCINvNtNtB7_9character8complete4charReNtNtB1c_5error18InternalParseErrorE0B2Y_E0EINtNtB7_8internal6ParserB2W_E5parseB1c_:
  412|  19.0k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  19.0k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  19.0k|  }
_RNvYINtNtCselIyhuOc7xF_3nom8sequence8PrecededNCINvNtNtB7_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtNtB7_10combinator3OptNCINvNtB1n_6parser17ignore_whitespaceB1h_NvB2N_3intB1j_E0EEINtNtB7_8internal6ParserB1h_E5parseB1n_:
  412|  1.71k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  1.71k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  1.71k|  }
_RINvXsB_NtCselIyhuOc7xF_3nom8internalTINvNtNtB8_9character8complete6digit1ReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtNtB8_10combinator3OptINtNtB8_8sequence8PrecededNCINvBD_4charB1a_B1c_E0BA_EEIB2d_IB2B_NCINvNtNtB8_5bytes8complete11tag_no_caseB1a_B1a_B1c_E0IB2B_IB2d_INtNtB8_6branch6ChoiceTB30_B30_EEEBA_EEEEINtB6_6ParserB1a_E7processINtB6_7OutputMNtB6_5CheckNtB6_4EmitNtB6_9StreamingEEB1g_:
  537|  23.2k|      fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  538|  23.2k|        let ($(ref mut $parser),+,) = *self;
  539|       |
  540|       |        // FIXME: is there a way to avoid producing the output values?
  541|    777|        $(let(i, $output) = $parser.process::<OutputM<Emit, OM::Error, OM::Incomplete>>(i)?;)+
  542|       |
  543|       |        // ???
  544|    777|        Ok((i, OM::Output::bind(|| ($($output),+,))))
  545|  23.2k|      }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode3mapINtNtCshZc3FwCJ069_4core6option6OptionReEIBY_BX_ENcNtB1C_4Some0ECsiZ6QsNdkp8Z_15rsonpath_syntax:
  277|  1.61k|  fn map<T, U, F: FnOnce(T) -> U>(x: Self::Output<T>, f: F) -> Self::Output<U> {
  278|  1.61k|    f(x)
  279|  1.61k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode3mapNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorBX_NCINvXs1_NtB8_6branchINtB28_6ChoiceTINtNtB8_8sequence8PrecededNCINvNtNtB8_9character8complete4charReBX_E0INvB34_6digit1B3z_BX_EEB3G_EEINtB6_6ParserB3z_E7processINtB6_7OutputMNtB6_5CheckBz_NtB6_9StreamingEEs_0EB11_:
  277|  28.8k|  fn map<T, U, F: FnOnce(T) -> U>(x: Self::Output<T>, f: F) -> Self::Output<U> {
  278|  28.8k|    f(x)
  279|  28.8k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode3mapNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorBX_NCINvXs1_NtB8_6branchINtB28_6ChoiceTINtNtB8_8sequence8PrecededNCINvNtNtB8_9character8complete4charReBX_E0NvNvNtB11_6parser5float10base_floatEB3G_EEINtB6_6ParserB3z_E7processINtB6_7OutputMNtB6_5CheckBz_NtB6_9StreamingEEs_0EB11_:
  277|  22.4k|  fn map<T, U, F: FnOnce(T) -> U>(x: Self::Output<T>, f: F) -> Self::Output<U> {
  278|  22.4k|    f(x)
  279|  22.4k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode3mapNtNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_expr9BooleanOpINtNtCshZc3FwCJ069_4core6option6OptionBX_ENcNtB23_4Some0EB13_:
  277|  4.79k|  fn map<T, U, F: FnOnce(T) -> U>(x: Self::Output<T>, f: F) -> Self::Output<U> {
  278|  4.79k|    f(x)
  279|  4.79k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode3mapcINtNtCshZc3FwCJ069_4core6option6OptioncENcNtBY_4Some0ECsiZ6QsNdkp8Z_15rsonpath_syntax:
  277|  5.72k|  fn map<T, U, F: FnOnce(T) -> U>(x: Self::Output<T>, f: F) -> Self::Output<U> {
  278|  5.72k|    f(x)
  279|  5.72k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindINtNtCshZc3FwCJ069_4core6option6OptionIBZ_ReEENCINvXNtB8_10combinatorINtB1O_3OptNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceB1A_INtNtB8_8sequence8PrecededNCINvNtNtB8_9character8complete4charB1E_NtNtB2n_5error18InternalParseErrorE0IB26_NCIB2j_B1E_NvB2l_3intB4q_E0EEB4q_E0EINtB6_6ParserB1E_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EB2n_:
  272|     96|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|     96|    f()
  274|     96|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindINtNtCshZc3FwCJ069_4core6option6OptionNtNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_expr9BooleanOpENCINvXNtB8_10combinatorINtB2N_3OptNCINvB1E_17ignore_whitespaceB1A_INtNtB8_6branch6ChoiceTINtB6_3MapNCINvNtNtB8_5bytes8complete3tagReB4N_NtNtB1G_5error18InternalParseErrorE0NCINvB2N_5valueB4N_B1A_B4T_B4i_E0EB48_EEB4T_E0EINtB6_6ParserB4N_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EB1G_:
  272|  20.4k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  20.4k|    f()
  274|  20.4k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindINtNtCshZc3FwCJ069_4core6option6OptionReENCINvXNtB8_10combinatorINtB1J_3OptINtNtB8_8sequence8PrecededNCINvNtNtB8_5bytes8complete11tag_no_caseB1A_B1A_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0IB2c_IB21_INtNtB8_6branch6ChoiceTNCINvNtNtB8_9character8complete4charB1A_B3n_E0B4V_EEEINvB50_6digit1B1A_B3n_EEEEINtB6_6ParserB1A_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EB3r_:
  272|    777|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|    777|    f()
  274|    777|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindINtNtCshZc3FwCJ069_4core6option6OptionReENCINvXNtB8_10combinatorINtB1J_3OptINtNtB8_8sequence8PrecededNCINvNtNtB8_9character8complete4charB1A_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INvB2G_6digit1B1A_B3f_EEEINtB6_6ParserB1A_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EB3j_:
  272|    412|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|    412|    f()
  274|    412|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindINtNtCshZc3FwCJ069_4core6option6OptioncENCINvXNtB8_10combinatorINtB1I_3OptNCINvNtNtB8_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0EINtB6_6ParserB2K_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EB2Q_:
  272|  21.0k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  21.0k|    f()
  274|  21.0k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindReNCINvXs5_NtB8_10combinatorINtB19_9RecognizeINtNtB8_6branch6ChoiceTINtNtB8_8sequence8PrecededNCINvNtNtB8_9character8complete4charBY_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INvB2z_6digit1BY_B37_EEB48_EEEINtB6_6ParserBY_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EB3b_:
  272|  10.8k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  10.8k|    f()
  274|  10.8k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindReNCINvXs5_NtB8_10combinatorINtB19_9RecognizeINtNtB8_6branch6ChoiceTINtNtB8_8sequence8PrecededNCINvNtNtB8_9character8complete4charBY_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NvNvNtB3b_6parser5float10base_floatEB48_EEEINtB6_6ParserBY_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EB3b_:
  272|    777|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|    777|    f()
  274|    777|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindReNCINvXs5_NtB8_10combinatorINtB19_9RecognizeTINvNtNtB8_9character8complete6digit1BY_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtB19_3OptINtNtB8_8sequence8PrecededNCINvB1L_4charBY_B2l_E0B1I_EEIB3m_IB3x_NCINvNtNtB8_5bytes8complete11tag_no_caseBY_BY_B2l_E0IB3x_IB3m_INtNtB8_6branch6ChoiceTB3W_B3W_EEEB1I_EEEEEINtB6_6ParserBY_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EB2p_:
  272|    777|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|    777|    f()
  274|    777|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode7combineNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorB11_B11_NCINvXs1_NtB8_6branchINtB2h_6ChoiceTINtNtB8_8sequence8PrecededNCINvNtNtB8_9character8complete4charReB11_E0INvB3d_6digit1B3I_B11_EEB3Q_EEINtB6_6ParserB3I_E7processINtB6_7OutputMNtB6_5CheckBz_NtB6_9StreamingEE0EB15_:
  282|  28.8k|  fn combine<T, U, V, F: FnOnce(T, U) -> V>(
  283|  28.8k|    x: Self::Output<T>,
  284|  28.8k|    y: Self::Output<U>,
  285|  28.8k|    f: F,
  286|  28.8k|  ) -> Self::Output<V> {
  287|  28.8k|    f(x, y)
  288|  28.8k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode7combineNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorB11_B11_NCINvXs1_NtB8_6branchINtB2h_6ChoiceTINtNtB8_8sequence8PrecededNCINvNtNtB8_9character8complete4charReB11_E0NvNvNtB15_6parser5float10base_floatEB3Q_EEINtB6_6ParserB3I_E7processINtB6_7OutputMNtB6_5CheckBz_NtB6_9StreamingEE0EB15_:
  282|  22.4k|  fn combine<T, U, V, F: FnOnce(T, U) -> V>(
  283|  22.4k|    x: Self::Output<T>,
  284|  22.4k|    y: Self::Output<U>,
  285|  22.4k|    f: F,
  286|  22.4k|  ) -> Self::Output<V> {
  287|  22.4k|    f(x, y)
  288|  22.4k|  }
_RINvXsb_NtCselIyhuOc7xF_3nom8internalNtB6_5CheckNtB6_4Mode4bindTReINtNtCshZc3FwCJ069_4core6option6OptionB10_EB12_ENCINvXsB_B6_TINvNtNtB8_9character8complete6digit1B10_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtNtB8_10combinator3OptINtNtB8_8sequence8PrecededNCINvB24_4charB10_B2F_E0B21_EEIB3G_IB44_NCINvNtNtB8_5bytes8complete11tag_no_caseB10_B10_B2F_E0IB44_IB3G_INtNtB8_6branch6ChoiceTB4t_B4t_EEEB21_EEEEINtB6_6ParserB10_E7processINtB6_7OutputMBz_NtB6_4EmitNtB6_9StreamingEE0EB2J_:
  302|    777|  fn bind<T, F: FnOnce() -> T>(_: F) -> Self::Output<T> {}
_RNvYINtNtCselIyhuOc7xF_3nom10combinator3CutNCNvNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_expr12parse_single0EINtNtB7_8internal6ParserReE5parseBN_:
  412|  7.80k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  7.80k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  7.80k|  }
_RNvYINtNtCselIyhuOc7xF_3nom10combinator3OptNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceINtNtCshZc3FwCJ069_4core6option6OptionReEINtNtB7_8sequence8PrecededNCINvNtNtB7_9character8complete4charB2j_NtNtBM_5error18InternalParseErrorE0IB3_NCIBI_B2j_NvBK_3intB3q_E0EEB3q_E0EINtNtB7_8internal6ParserB2j_E5parseBM_:
  412|  1.71k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  1.71k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  1.71k|  }
_RNvYINtNtCselIyhuOc7xF_3nom10combinator3OptNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtNvBK_12logical_expr9BooleanOpINtNtB7_6branch6ChoiceTINtNtB7_8internal3MapNCINvNtNtB7_5bytes8complete3tagReB3p_NtNtBM_5error18InternalParseErrorE0NCINvB5_5valueB3p_B1H_B3v_B2U_E0EB2z_EEB3v_E0EINtB2C_6ParserB3p_E5parseBM_:
  412|  25.2k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  25.2k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  25.2k|  }
_RNvYINtNtCselIyhuOc7xF_3nom10combinator3OptNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceReNvBK_3intNtNtBM_5error18InternalParseErrorE0EINtNtB7_8internal6ParserB1H_E5parseBM_:
  412|  1.71k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  1.71k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  1.71k|  }
_RNvYINtNtCselIyhuOc7xF_3nom10combinator3OptNCINvNtNtB7_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0EINtNtB7_8internal6ParserB1f_E5parseB1l_:
  412|  26.7k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  26.7k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  26.7k|  }
_RNvYINtNtCselIyhuOc7xF_3nom10combinator4PeekNCINvNtNtB7_9character8complete6one_ofReB1i_uE0EINtNtB7_8internal6ParserB1i_E5parseCsiZ6QsNdkp8Z_15rsonpath_syntax:
  412|  36.0k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  36.0k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  36.0k|  }
_RNvYINtNtCselIyhuOc7xF_3nom10combinator9RecognizeINtNtB7_6branch6ChoiceTINtNtB7_8sequence8PrecededNCINvNtNtB7_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INvB1D_6digit1B28_B2a_EEB3b_EEEINtNtB7_8internal6ParserB28_E5parseB2e_:
  412|  39.7k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  39.7k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  39.7k|  }
_RNvYINtNtCselIyhuOc7xF_3nom10combinator9RecognizeINtNtB7_6branch6ChoiceTINtNtB7_8sequence8PrecededNCINvNtNtB7_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NvNvNtB2e_6parser5float10base_floatEB3b_EEEINtNtB7_8internal6ParserB28_E5parseB2e_:
  412|  23.2k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  23.2k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  23.2k|  }
_RNvYINtNtCselIyhuOc7xF_3nom10combinator9RecognizeTINvNtNtB7_9character8complete6digit1ReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtB5_3OptINtNtB7_8sequence8PrecededNCINvBP_4charB1m_B1o_E0BM_EEIB2p_IB2z_NCINvNtNtB7_5bytes8complete11tag_no_caseB1m_B1m_B1o_E0IB2z_IB2p_INtNtB7_6branch6ChoiceTB2Y_B2Y_EEEBM_EEEEEINtNtB7_8internal6ParserB1m_E5parseB1s_:
  412|  23.2k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  23.2k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  23.2k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode3mapNtCsiZ6QsNdkp8Z_15rsonpath_syntax11LogicalExprNtBZ_8SelectorNCINvXsn_B6_INtB6_4IntoINtNtB8_8sequence8PrecededNCINvNtNtB8_9character8complete4charReNtNtBZ_5error18InternalParseErrorE0NCINvNtBZ_6parser17ignore_whitespaceBX_NCNvB3Y_15filter_selector0B3k_E0EB1H_B3k_EINtB6_6ParserB3i_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EBZ_:
  277|  12.8k|  fn map<T, U, F: FnOnce(T) -> U>(x: Self::Output<T>, f: F) -> Self::Output<U> {
  278|  12.8k|    f(x)
  279|  12.8k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode3mapNtCsiZ6QsNdkp8Z_15rsonpath_syntax7LiteralNtBZ_10ComparableNCINvXsn_B6_INtB6_4IntoNvNtBZ_6parser7literalB1C_NtNtBZ_5error18InternalParseErrorEINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EBZ_:
  277|  1.92k|  fn map<T, U, F: FnOnce(T) -> U>(x: Self::Output<T>, f: F) -> Self::Output<U> {
  278|  1.92k|    f(x)
  279|  1.92k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode3mapNtCsiZ6QsNdkp8Z_15rsonpath_syntax9SelectorsNtBZ_7SegmentNCINvXsg_B6_INtB6_3MapINtNtB8_6branch6ChoiceTNCNvNtBZ_6parser13child_segment0INtNtB8_8sequence8PrecededNCINvNtNtB8_9character8complete4charReNtNtBZ_5error18InternalParseErrorE0INtNtB8_10combinator3CutIB2e_TIB24_NvB2E_17wildcard_selectorNvMst_BZ_BX_3oneENvB2E_21member_name_shorthandNCINvB2E_14failed_segmentBX_E0EEEEEENcNtB1E_5Child0EINtB6_6ParserB46_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EBZ_:
  277|  6.04k|  fn map<T, U, F: FnOnce(T) -> U>(x: Self::Output<T>, f: F) -> Self::Output<U> {
  278|  6.04k|    f(x)
  279|  6.04k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode3mapNtCsiZ6QsNdkp8Z_15rsonpath_syntax9SelectorsNtBZ_7SegmentNCINvXsg_B6_INtB6_3MapINtNtB8_8sequence8PrecededNCINvNtNtB8_5bytes8complete3tagReB38_NtNtBZ_5error18InternalParseErrorE0INtNtB8_10combinator3CutINtNtB8_6branch6ChoiceTNCNvNtBZ_6parser18descendant_segment0IB24_NvB4C_17wildcard_selectorNvMst_BZ_BX_3oneENvB4C_21member_name_shorthandNCINvB4C_14failed_segmentBX_E0EEEENcNtB1E_10Descendant0EINtB6_6ParserB38_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EBZ_:
  277|  12.4k|  fn map<T, U, F: FnOnce(T) -> U>(x: Self::Output<T>, f: F) -> Self::Output<U> {
  278|  12.4k|    f(x)
  279|  12.4k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode3mapNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax3num10JsonNumberNtB11_7LiteralNCINvXsn_B6_INtB6_4IntoNvNtB11_6parser6numberB1M_NtNtB11_5error18InternalParseErrorEINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EB11_:
  277|    777|  fn map<T, U, F: FnOnce(T) -> U>(x: Self::Output<T>, f: F) -> Self::Output<U> {
  278|    777|    f(x)
  279|    777|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode3mapNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax3num9JsonFloatNtBZ_10JsonNumberNCINvXsg_B6_INtB6_3MapNvNtB11_6parser5floatNCNvB2p_6number0EINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EB11_:
  277|    777|  fn map<T, U, F: FnOnce(T) -> U>(x: Self::Output<T>, f: F) -> Self::Output<U> {
  278|    777|    f(x)
  279|    777|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode3mapNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax3str10JsonStringNtB11_7LiteralNCINvXsn_B6_INtB6_4IntoNvNtB11_6parser14string_literalB1M_NtNtB11_5error18InternalParseErrorEINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EB11_:
  277|  2.01k|  fn map<T, U, F: FnOnce(T) -> U>(x: Self::Output<T>, f: F) -> Self::Output<U> {
  278|  2.01k|    f(x)
  279|  2.01k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode3mapNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax3str10JsonStringNtB11_8SelectorNCINvXsg_B6_INtB6_3MapNvNtB11_6parser14string_literalNcNtB1M_4Name0EINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EB11_:
  277|  6.64k|  fn map<T, U, F: FnOnce(T) -> U>(x: Self::Output<T>, f: F) -> Self::Output<U> {
  278|  6.64k|    f(x)
  279|  6.64k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode3mapNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorBX_NCINvXsn_B6_INtB6_4IntoNvNtB11_6parser14string_literalNtB11_7LiteralBX_EINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB11_:
  277|  20.4k|  fn map<T, U, F: FnOnce(T) -> U>(x: Self::Output<T>, f: F) -> Self::Output<U> {
  278|  20.4k|    f(x)
  279|  20.4k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode3mapNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorBX_NCINvXsn_B6_INtB6_4IntoNvNtB11_6parser6numberNtB11_7LiteralBX_EINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB11_:
  277|  22.4k|  fn map<T, U, F: FnOnce(T) -> U>(x: Self::Output<T>, f: F) -> Self::Output<U> {
  278|  22.4k|    f(x)
  279|  22.4k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode3mapNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorBX_NCINvXsn_B6_INtB6_4IntoNvNtB11_6parser7literalNtB11_10ComparableBX_EINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB11_:
  277|  2.38k|  fn map<T, U, F: FnOnce(T) -> U>(x: Self::Output<T>, f: F) -> Self::Output<U> {
  278|  2.38k|    f(x)
  279|  2.38k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode3mapReNtCsiZ6QsNdkp8Z_15rsonpath_syntax8SelectorNCINvXsg_B6_INtB6_3MapNCINvNtNtB8_5bytes8complete3tagBX_BX_NtNtB11_5error18InternalParseErrorE0NCNvNtB11_6parser17wildcard_selector0EINtB6_6ParserBX_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE0EB11_:
  277|  1.78k|  fn map<T, U, F: FnOnce(T) -> U>(x: Self::Output<T>, f: F) -> Self::Output<U> {
  278|  1.78k|    f(x)
  279|  1.78k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_INvNtNtB8_9character8complete6digit1ReBY_EINtB6_6ParserB2L_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE00EB12_:
  272|  22.4k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  22.4k|    f()
  274|  22.4k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_INvNtNtB8_9character8complete6digit1ReBY_EINtB6_6ParserB2L_E7processINtB6_7OutputMNtB6_5CheckBz_NtB6_9StreamingEE00EB12_:
  272|  28.8k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  28.8k|    f()
  274|  28.8k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NCINvNtB12_6parser17ignore_whitespaceNtB12_8SelectorNvB2g_13name_selectorBY_E0INtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE00EB12_:
  272|  20.8k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  20.8k|    f()
  274|  20.8k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NCINvNtB12_6parser17ignore_whitespaceNtB12_8SelectorNvB2g_14index_selectorBY_E0INtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE00EB12_:
  272|  14.1k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  14.1k|    f()
  274|  14.1k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NCINvNtB12_6parser17ignore_whitespaceNtB12_8SelectorNvB2g_14slice_selectorBY_E0INtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE00EB12_:
  272|  17.3k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  17.3k|    f()
  274|  17.3k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NCINvNtB12_6parser17ignore_whitespaceNtB12_8SelectorNvB2g_17wildcard_selectorBY_E0INtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE00EB12_:
  272|  19.0k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  19.0k|    f()
  274|  19.0k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NCINvNtB12_6parser17ignore_whitespacecNCINvNtNtB8_9character8complete4charReBY_E0BY_E0INtB6_6ParserB3n_E7processINtB6_7OutputMNtB6_5CheckBz_NtB6_9StreamingEE00EB12_:
  272|  17.3k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  17.3k|    f()
  274|  17.3k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NCINvNtNtB8_5bytes8complete3tagReB2G_BY_E0INtB6_6ParserB2G_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE00EB12_:
  272|   187k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|   187k|    f()
  274|   187k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NCINvNtNtB8_5bytes8complete3tagReB2G_BY_E0INtB6_6ParserB2G_E7processINtB6_7OutputMNtB6_5CheckBz_NtB6_9StreamingEE00EB12_:
  272|  6.16k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  6.16k|    f()
  274|  6.16k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NCINvNtNtB8_9character8complete4charReBY_E0INtB6_6ParserB2L_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE00EB12_:
  272|  48.4k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  48.4k|    f()
  274|  48.4k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NCINvNtNtB8_9character8complete4charReBY_E0INtB6_6ParserB2L_E7processINtB6_7OutputMNtB6_5CheckBz_NtB6_9StreamingEE00EB12_:
  272|   142k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|   142k|    f()
  274|   142k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NCNvNtB12_6parser12filter_query0INtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE00EB12_:
  272|  5.38k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  5.38k|    f()
  274|  5.38k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NCNvNtB12_6parser7segment0INtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE00EB12_:
  272|    774|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|    774|    f()
  274|    774|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NvNtB12_6parser13name_selectorINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE00EB12_:
  272|  20.8k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  20.8k|    f()
  274|  20.8k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NvNtB12_6parser14index_selectorINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE00EB12_:
  272|  14.1k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  14.1k|    f()
  274|  14.1k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NvNtB12_6parser14slice_selectorINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE00EB12_:
  272|  17.3k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  17.3k|    f()
  274|  17.3k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NvNtB12_6parser14string_literalINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE00EB12_:
  272|  41.3k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  41.3k|    f()
  274|  41.3k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NvNtB12_6parser17wildcard_selectorINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE00EB12_:
  272|  19.0k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  19.0k|    f()
  274|  19.0k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NvNtB12_6parser3intINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE00EB12_:
  272|    389|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|    389|    f()
  274|    389|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NvNtB12_6parser5floatINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE00EB12_:
  272|  22.4k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  22.4k|    f()
  274|  22.4k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NvNtB12_6parser6numberINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE00EB12_:
  272|  22.4k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  22.4k|    f()
  274|  22.4k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NvNtB12_6parser7literalINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE00EB12_:
  272|  2.38k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  2.38k|    f()
  274|  2.38k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NvNvNtB12_6parser5float10base_floatINtB6_6ParserReE7processINtB6_7OutputMNtB6_5CheckBz_NtB6_9StreamingEE00EB12_:
  272|  22.4k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  22.4k|    f()
  274|  22.4k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4binduNCNCINvXsf_B6_NCINvNtNtB8_9character8complete6one_ofReB1P_uE0INtB6_6ParserB1P_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE00ECsiZ6QsNdkp8Z_15rsonpath_syntax:
  272|  18.1k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  18.1k|    f()
  274|  18.1k|  }
_RINvXsb_NtCselIyhuOc7xF_3nom8internalNtB6_5CheckNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NCINvNtB13_6parser17ignore_whitespaceINtNtCshZc3FwCJ069_4core6option6OptionReEINtNtB8_8sequence8PrecededNCINvNtNtB8_9character8complete4charB3p_BZ_E0INtNtB8_10combinator3OptNCIB2f_B3p_NvB2h_3intBZ_E0EEBZ_E0INtB6_6ParserB3p_E7processINtB6_7OutputMNtB6_4EmitBz_NtB6_9StreamingEE00EB13_:
  302|     96|  fn bind<T, F: FnOnce() -> T>(_: F) -> Self::Output<T> {}
_RINvXsb_NtCselIyhuOc7xF_3nom8internalNtB6_5CheckNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NCINvNtB13_6parser17ignore_whitespaceNtNvB2h_12logical_expr9BooleanOpINtNtB8_6branch6ChoiceTINtB6_3MapNCINvNtNtB8_5bytes8complete3tagReB4l_BZ_E0NCINvNtB8_10combinator5valueB4l_B2N_BZ_B3Q_E0EB3G_EEBZ_E0INtB6_6ParserB4l_E7processINtB6_7OutputMNtB6_4EmitBz_NtB6_9StreamingEE00EB13_:
  302|  20.4k|  fn bind<T, F: FnOnce() -> T>(_: F) -> Self::Output<T> {}
_RINvXsb_NtCselIyhuOc7xF_3nom8internalNtB6_5CheckNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NCINvNtB13_6parser17ignore_whitespaceReNvB2h_3intBZ_E0INtB6_6ParserB2N_E7processINtB6_7OutputMNtB6_4EmitBz_NtB6_9StreamingEE00EB13_:
  302|    389|  fn bind<T, F: FnOnce() -> T>(_: F) -> Self::Output<T> {}
_RINvXsb_NtCselIyhuOc7xF_3nom8internalNtB6_5CheckNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NCINvNtNtB8_5bytes8complete11tag_no_caseReB2Q_BZ_E0INtB6_6ParserB2Q_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE00EB13_:
  302|    777|  fn bind<T, F: FnOnce() -> T>(_: F) -> Self::Output<T> {}
_RINvXsb_NtCselIyhuOc7xF_3nom8internalNtB6_5CheckNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NCINvNtNtB8_9character8complete4charReBZ_E0INtB6_6ParserB2M_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEE00EB13_:
  302|    412|  fn bind<T, F: FnOnce() -> T>(_: F) -> Self::Output<T> {}
_RINvXsb_NtCselIyhuOc7xF_3nom8internalNtB6_5CheckNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NCINvNtNtB8_9character8complete4charReBZ_E0INtB6_6ParserB2M_E7processINtB6_7OutputMNtB6_4EmitBz_NtB6_9StreamingEE00EB13_:
  302|  21.0k|  fn bind<T, F: FnOnce() -> T>(_: F) -> Self::Output<T> {}
_RINvXsb_NtCselIyhuOc7xF_3nom8internalNtB6_5CheckNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCNCINvXsf_B6_NvNtB13_6parser3intINtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitBz_NtB6_9StreamingEE00EB13_:
  302|  14.3k|  fn bind<T, F: FnOnce() -> T>(_: F) -> Self::Output<T> {}
_RINvXsg_NtCselIyhuOc7xF_3nom8internalINtB6_3MapINtNtB8_6branch6ChoiceTNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser13child_segment0INtNtB8_8sequence8PrecededNCINvNtNtB8_9character8complete4charReNtNtB1c_5error18InternalParseErrorE0INtNtB8_10combinator3CutIBK_TIBA_NvB1a_17wildcard_selectorNvMst_B1c_NtB1c_9Selectors3oneENvB1a_21member_name_shorthandNCINvB1a_14failed_segmentB4M_E0EEEEEENcNtNtB1c_7Segment5Child0EINtB6_6ParserB34_E7processINtB6_7OutputMNtB6_4EmitB7f_NtB6_9StreamingEEB1c_:
  592|  6.16k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  593|  6.16k|    match self.f.process::<OM>(i) {
  594|    123|      Err(e) => Err(e),
  595|  6.04k|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| (self.g)(o)))),
  596|       |    }
  597|  6.16k|  }
_RINvXsg_NtCselIyhuOc7xF_3nom8internalINtB6_3MapINtNtB8_8sequence8PrecededNCINvNtNtB8_5bytes8complete3tagReB1E_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtNtB8_10combinator3CutINtNtB8_6branch6ChoiceTNCNvNtB1O_6parser18descendant_segment0IBA_NvB3A_17wildcard_selectorNvMst_B1O_NtB1O_9Selectors3oneENvB3A_21member_name_shorthandNCINvB3A_14failed_segmentB4L_E0EEEENcNtNtB1O_7Segment10Descendant0EINtB6_6ParserB1E_E7processINtB6_7OutputMNtB6_4EmitB7i_NtB6_9StreamingEEB1O_:
  592|  19.8k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  593|  19.8k|    match self.f.process::<OM>(i) {
  594|  7.41k|      Err(e) => Err(e),
  595|  12.4k|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| (self.g)(o)))),
  596|       |    }
  597|  19.8k|  }
_RINvXsg_NtCselIyhuOc7xF_3nom8internalINtB6_3MapNCINvNtNtB8_5bytes8complete3tagReB1e_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCNvNtB1o_6parser17wildcard_selector0EINtB6_6ParserB1e_E7processINtB6_7OutputMNtB6_4EmitB3B_NtB6_9StreamingEEB1o_:
  592|  20.8k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  593|  20.8k|    match self.f.process::<OM>(i) {
  594|  19.0k|      Err(e) => Err(e),
  595|  1.78k|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| (self.g)(o)))),
  596|       |    }
  597|  20.8k|  }
_RINvXsg_NtCselIyhuOc7xF_3nom8internalINtB6_3MapNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser14string_literalNcNtNtBN_8Selector4Name0EINtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB2G_NtB6_9StreamingEEBN_:
  592|  27.5k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  593|  27.5k|    match self.f.process::<OM>(i) {
  594|  20.8k|      Err(e) => Err(e),
  595|  6.64k|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| (self.g)(o)))),
  596|       |    }
  597|  27.5k|  }
_RINvXsg_NtCselIyhuOc7xF_3nom8internalINtB6_3MapNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser5floatNCNvBL_6number0EINtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB2n_NtB6_9StreamingEEBN_:
  592|  23.2k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  593|  23.2k|    match self.f.process::<OM>(i) {
  594|  22.4k|      Err(e) => Err(e),
  595|    777|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| (self.g)(o)))),
  596|       |    }
  597|  23.2k|  }
_RINvXsn_NtCselIyhuOc7xF_3nom8internalINtB6_4IntoINtNtB8_8sequence8PrecededNCINvNtNtB8_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtB1Q_6parser17ignore_whitespaceNtB1Q_11LogicalExprNCNvB2S_15filter_selector0B1M_E0ENtB1Q_8SelectorB1M_EINtB6_6ParserB1K_E7processINtB6_7OutputMNtB6_4EmitB5c_NtB6_9StreamingEEB1Q_:
  773|  14.1k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  774|  14.1k|    match self.f.process::<OM>(i) {
  775|  12.8k|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| o.into()))),
  776|      0|      Err(Err::Error(e)) => Err(Err::Error(OM::Error::map(e, |e| e.into()))),
  777|  1.37k|      Err(Err::Failure(e)) => Err(Err::Failure(e.into())),
  778|      0|      Err(Err::Incomplete(e)) => Err(Err::Incomplete(e)),
  779|       |    }
  780|  14.1k|  }
_RINvXsn_NtCselIyhuOc7xF_3nom8internalINtB6_4IntoNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser14string_literalNtBO_7LiteralNtNtBO_5error18InternalParseErrorEINtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB33_NtB6_9StreamingEEBO_:
  773|  22.4k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  774|  22.4k|    match self.f.process::<OM>(i) {
  775|  2.01k|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| o.into()))),
  776|  20.4k|      Err(Err::Error(e)) => Err(Err::Error(OM::Error::map(e, |e| e.into()))),
  777|      0|      Err(Err::Failure(e)) => Err(Err::Failure(e.into())),
  778|      0|      Err(Err::Incomplete(e)) => Err(Err::Incomplete(e)),
  779|       |    }
  780|  22.4k|  }
_RINvXsn_NtCselIyhuOc7xF_3nom8internalINtB6_4IntoNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser6numberNtBO_7LiteralNtNtBO_5error18InternalParseErrorEINtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB2U_NtB6_9StreamingEEBO_:
  773|  23.2k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  774|  23.2k|    match self.f.process::<OM>(i) {
  775|    777|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| o.into()))),
  776|  22.4k|      Err(Err::Error(e)) => Err(Err::Error(OM::Error::map(e, |e| e.into()))),
  777|      0|      Err(Err::Failure(e)) => Err(Err::Failure(e.into())),
  778|      0|      Err(Err::Incomplete(e)) => Err(Err::Incomplete(e)),
  779|       |    }
  780|  23.2k|  }
_RINvXsn_NtCselIyhuOc7xF_3nom8internalINtB6_4IntoNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser7literalNtBO_10ComparableNtNtBO_5error18InternalParseErrorEINtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB2Z_NtB6_9StreamingEEBO_:
  773|  4.31k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  774|  4.31k|    match self.f.process::<OM>(i) {
  775|  1.92k|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| o.into()))),
  776|  2.38k|      Err(Err::Error(e)) => Err(Err::Error(OM::Error::map(e, |e| e.into()))),
  777|      0|      Err(Err::Failure(e)) => Err(Err::Failure(e.into())),
  778|      0|      Err(Err::Incomplete(e)) => Err(Err::Incomplete(e)),
  779|       |    }
  780|  4.31k|  }
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalINvNtNtBa_9character8complete6digit1ReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtB8_6ParserB1b_E7processINtB8_7OutputMNtB8_4EmitB2R_NtB8_9StreamingEE0B1h_:
  517|  22.4k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|  22.4k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|  22.4k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalINvNtNtBa_9character8complete6digit1ReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtB8_6ParserB1b_E7processINtB8_7OutputMNtB8_4EmitB2R_NtB8_9StreamingEEs_0B1h_:
  522|    777|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalINvNtNtBa_9character8complete6digit1ReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtB8_6ParserB1b_E7processINtB8_7OutputMNtB8_4EmitNtB8_5CheckNtB8_9StreamingEEs_0B1h_:
  522|    365|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalINvNtNtBa_9character8complete6digit1ReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtB8_6ParserB1b_E7processINtB8_7OutputMNtB8_5CheckNtB8_4EmitNtB8_9StreamingEE0B1h_:
  517|  28.8k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|  28.8k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|  28.8k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceINtNtCshZc3FwCJ069_4core6option6OptionReEINtNtBa_8sequence8PrecededNCINvNtNtBa_9character8complete4charB2f_NtNtBI_5error18InternalParseErrorE0INtNtBa_10combinator3OptNCIBE_B2f_NvBG_3intB3m_E0EEB3m_E0INtB8_6ParserB2f_E7processINtB8_7OutputMNtB8_4EmitNtB8_5CheckNtB8_9StreamingEE0BI_:
  517|     96|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|     96|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|     96|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceINtNtCshZc3FwCJ069_4core6option6OptionReEINtNtBa_8sequence8PrecededNCINvNtNtBa_9character8complete4charB2f_NtNtBI_5error18InternalParseErrorE0INtNtBa_10combinator3OptNCIBE_B2f_NvBG_3intB3m_E0EEB3m_E0INtB8_6ParserB2f_E7processINtB8_7OutputMNtB8_4EmitNtB8_5CheckNtB8_9StreamingEEs_0BI_:
  522|  1.61k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtBI_11LogicalExprNCNvBG_15filter_selector0NtNtBI_5error18InternalParseErrorE0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB3v_NtB8_9StreamingEE0BI_:
  517|  1.37k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|      0|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|  1.37k|      Err::Failure(e) => Err::Failure(e),
  521|  1.37k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtBI_11LogicalExprNCNvBG_15filter_selector0NtNtBI_5error18InternalParseErrorE0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB3v_NtB8_9StreamingEEs_0BI_:
  522|  12.8k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtBI_8SelectorNCNvBG_8selector0NtNtBI_5error18InternalParseErrorE0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB3j_NtB8_9StreamingEE0BI_:
  517|  1.37k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|      0|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|  1.37k|      Err::Failure(e) => Err::Failure(e),
  521|  1.37k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtBI_8SelectorNCNvBG_8selector0NtNtBI_5error18InternalParseErrorE0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB3j_NtB8_9StreamingEEs_0BI_:
  522|  12.8k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtBI_8SelectorNvBG_13name_selectorNtNtBI_5error18InternalParseErrorE0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB3m_NtB8_9StreamingEE0BI_:
  517|  20.8k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|  20.8k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|  20.8k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtBI_8SelectorNvBG_13name_selectorNtNtBI_5error18InternalParseErrorE0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB3m_NtB8_9StreamingEEs_0BI_:
  522|  6.64k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtBI_8SelectorNvBG_14index_selectorNtNtBI_5error18InternalParseErrorE0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB3n_NtB8_9StreamingEE0BI_:
  517|  14.1k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|  14.1k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|  14.1k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtBI_8SelectorNvBG_14index_selectorNtNtBI_5error18InternalParseErrorE0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB3n_NtB8_9StreamingEEs_0BI_:
  522|  3.16k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtBI_8SelectorNvBG_14slice_selectorNtNtBI_5error18InternalParseErrorE0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB3n_NtB8_9StreamingEE0BI_:
  517|  17.3k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|  17.3k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|  17.3k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtBI_8SelectorNvBG_14slice_selectorNtNtBI_5error18InternalParseErrorE0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB3n_NtB8_9StreamingEEs_0BI_:
  522|  1.71k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtBI_8SelectorNvBG_17wildcard_selectorNtNtBI_5error18InternalParseErrorE0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB3q_NtB8_9StreamingEE0BI_:
  517|  19.0k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|  19.0k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|  19.0k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtBI_8SelectorNvBG_17wildcard_selectorNtNtBI_5error18InternalParseErrorE0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB3q_NtB8_9StreamingEEs_0BI_:
  522|  1.78k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtNvBG_12logical_expr9BooleanOpINtNtBa_6branch6ChoiceTINtB8_3MapNCINvNtNtBa_5bytes8complete3tagReB3a_NtNtBI_5error18InternalParseErrorE0NCINvNtBa_10combinator5valueB3a_B1D_B3g_B2F_E0EB2v_EEB3g_E0INtB8_6ParserB3a_E7processINtB8_7OutputMNtB8_4EmitNtB8_5CheckNtB8_9StreamingEE0BI_:
  517|  20.4k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|  20.4k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|  20.4k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtNvBG_12logical_expr9BooleanOpINtNtBa_6branch6ChoiceTINtB8_3MapNCINvNtNtBa_5bytes8complete3tagReB3a_NtNtBI_5error18InternalParseErrorE0NCINvNtBa_10combinator5valueB3a_B1D_B3g_B2F_E0EB2v_EEB3g_E0INtB8_6ParserB3a_E7processINtB8_7OutputMNtB8_4EmitNtB8_5CheckNtB8_9StreamingEEs_0BI_:
  522|  4.79k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceReNvBG_3intNtNtBI_5error18InternalParseErrorE0INtB8_6ParserB1D_E7processINtB8_7OutputMNtB8_4EmitNtB8_5CheckNtB8_9StreamingEE0BI_:
  517|    389|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|    389|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|    389|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceReNvBG_3intNtNtBI_5error18InternalParseErrorE0INtB8_6ParserB1D_E7processINtB8_7OutputMNtB8_4EmitNtB8_5CheckNtB8_9StreamingEEs_0BI_:
  522|  2.94k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespacecNCINvNtNtBa_9character8complete4charReNtNtBI_5error18InternalParseErrorE0B2g_E0INtB8_6ParserB2e_E7processINtB8_7OutputMNtB8_5CheckNtB8_4EmitNtB8_9StreamingEE0BI_:
  517|  17.3k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|  17.3k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|  17.3k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtNtBa_5bytes8complete11tag_no_caseReB1f_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtB8_6ParserB1f_E7processINtB8_7OutputMNtB8_5CheckB30_NtB8_9StreamingEE0B1p_:
  517|    777|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|    777|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|    777|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtNtBa_5bytes8complete3tagReB16_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtB8_6ParserB16_E7processINtB8_7OutputMNtB8_4EmitB2R_NtB8_9StreamingEE0B1g_:
  517|   187k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|   187k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|   187k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtNtBa_5bytes8complete3tagReB16_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtB8_6ParserB16_E7processINtB8_7OutputMNtB8_4EmitB2R_NtB8_9StreamingEEs_0B1g_:
  522|  9.90k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtNtBa_5bytes8complete3tagReB16_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtB8_6ParserB16_E7processINtB8_7OutputMNtB8_5CheckNtB8_4EmitNtB8_9StreamingEE0B1g_:
  517|  6.16k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|  6.16k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|  6.16k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtNtBa_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtB8_6ParserB1b_E7processINtB8_7OutputMNtB8_4EmitB2S_NtB8_9StreamingEE0B1h_:
  517|  48.4k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|  48.4k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|  48.4k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtNtBa_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtB8_6ParserB1b_E7processINtB8_7OutputMNtB8_4EmitB2S_NtB8_9StreamingEEs_0B1h_:
  522|  23.1k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtNtBa_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtB8_6ParserB1b_E7processINtB8_7OutputMNtB8_4EmitNtB8_5CheckNtB8_9StreamingEE0B1h_:
  517|  21.0k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|  21.0k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|  21.0k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtNtBa_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtB8_6ParserB1b_E7processINtB8_7OutputMNtB8_4EmitNtB8_5CheckNtB8_9StreamingEEs_0B1h_:
  522|  5.72k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtNtBa_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtB8_6ParserB1b_E7processINtB8_7OutputMNtB8_5CheckB2S_NtB8_9StreamingEE0B1h_:
  517|    412|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|    412|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|    412|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtNtBa_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtB8_6ParserB1b_E7processINtB8_7OutputMNtB8_5CheckNtB8_4EmitNtB8_9StreamingEE0B1h_:
  517|   142k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|   142k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|   142k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtNtBa_9character8complete6one_ofReB1d_uE0INtB8_6ParserB1d_E7processINtB8_7OutputMNtB8_4EmitB20_NtB8_9StreamingEE0CsiZ6QsNdkp8Z_15rsonpath_syntax:
  517|  18.1k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|  18.1k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|  18.1k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtNtBa_9character8complete6one_ofReB1d_uE0INtB8_6ParserB1d_E7processINtB8_7OutputMNtB8_4EmitB20_NtB8_9StreamingEEs_0CsiZ6QsNdkp8Z_15rsonpath_syntax:
  522|  17.9k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser10comparable0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB28_NtB8_9StreamingEEs_0BH_:
  522|  2.38k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12filter_query0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB2a_NtB8_9StreamingEE0BH_:
  517|  6.61k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|  5.38k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|  1.23k|      Err::Failure(e) => Err::Failure(e),
  521|  6.61k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12filter_query0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB2a_NtB8_9StreamingEEs_0BH_:
  522|  11.3k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12filter_querys_0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB2c_NtB8_9StreamingEE0BH_:
  517|    110|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|      0|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|    110|      Err::Failure(e) => Err::Failure(e),
  521|    110|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12filter_querys_0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB2c_NtB8_9StreamingEEs_0BH_:
  522|  5.27k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_expr0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB2a_NtB8_9StreamingEE0BH_:
  517|  4.83k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|      0|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|  4.83k|      Err::Failure(e) => Err::Failure(e),
  521|  4.83k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_expr0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB2a_NtB8_9StreamingEEs_0BH_:
  522|  20.5k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_exprs0_0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB2d_NtB8_9StreamingEE0BH_:
  517|    125|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|      0|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|    125|      Err::Failure(e) => Err::Failure(e),
  521|    125|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_exprs0_0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB2d_NtB8_9StreamingEEs_0BH_:
  522|  3.33k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_exprs_0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB2c_NtB8_9StreamingEE0BH_:
  517|     35|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|      0|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|     35|      Err::Failure(e) => Err::Failure(e),
  521|     35|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_exprs_0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB2c_NtB8_9StreamingEEs_0BH_:
  522|  1.29k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser13child_segment0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB2b_NtB8_9StreamingEE0BH_:
  517|    123|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|      0|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|    123|      Err::Failure(e) => Err::Failure(e),
  521|    123|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser13child_segment0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB2b_NtB8_9StreamingEEs_0BH_:
  522|  6.04k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser15filter_selector0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB2d_NtB8_9StreamingEE0BH_:
  517|  1.37k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|      0|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|  1.37k|      Err::Failure(e) => Err::Failure(e),
  521|  1.37k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser15filter_selector0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB2d_NtB8_9StreamingEEs_0BH_:
  522|  12.8k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser18descendant_segment0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB2g_NtB8_9StreamingEE0BH_:
  517|  1.25k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|      0|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|  1.25k|      Err::Failure(e) => Err::Failure(e),
  521|  1.25k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser18descendant_segment0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB2g_NtB8_9StreamingEEs_0BH_:
  522|  12.4k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser6string0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB23_NtB8_9StreamingEEs_0BH_:
  522|  8.66k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser7segment0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB24_NtB8_9StreamingEE0BH_:
  517|    800|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|    774|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|     26|      Err::Failure(e) => Err::Failure(e),
  521|    800|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser7segment0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB24_NtB8_9StreamingEEs_0BH_:
  522|  1.10k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser7segments_0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB26_NtB8_9StreamingEE0BH_:
  517|     13|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|      0|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|     13|      Err::Failure(e) => Err::Failure(e),
  521|     13|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser7segments_0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB26_NtB8_9StreamingEEs_0BH_:
  522|    761|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser8selector0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB25_NtB8_9StreamingEE0BH_:
  517|  1.37k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|      0|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|  1.37k|      Err::Failure(e) => Err::Failure(e),
  521|  1.37k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser8selector0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB25_NtB8_9StreamingEEs_0BH_:
  522|  12.8k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_expr12parse_single0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB2q_NtB8_9StreamingEE0BJ_:
  517|  3.52k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|      0|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|  3.52k|      Err::Failure(e) => Err::Failure(e),
  521|  3.52k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_expr12parse_single0INtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB2q_NtB8_9StreamingEEs_0BJ_:
  522|  4.27k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser13name_selectorINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB28_NtB8_9StreamingEE0BF_:
  517|  20.8k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|  20.8k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|  20.8k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser13name_selectorINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB28_NtB8_9StreamingEEs_0BF_:
  522|  6.64k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser14index_selectorINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB29_NtB8_9StreamingEE0BF_:
  517|  14.1k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|  14.1k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|  14.1k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser14index_selectorINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB29_NtB8_9StreamingEEs_0BF_:
  522|  3.16k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser14slice_selectorINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB29_NtB8_9StreamingEE0BF_:
  517|  17.3k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|  17.3k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|  17.3k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser14slice_selectorINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB29_NtB8_9StreamingEEs_0BF_:
  522|  1.71k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser14string_literalINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB29_NtB8_9StreamingEE0BF_:
  517|  41.3k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|  41.3k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|  41.3k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser14string_literalINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB29_NtB8_9StreamingEEs_0BF_:
  522|  8.66k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17wildcard_selectorINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB2c_NtB8_9StreamingEE0BF_:
  517|  19.0k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|  19.0k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|  19.0k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17wildcard_selectorINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB2c_NtB8_9StreamingEEs_0BF_:
  522|  1.78k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser3intINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB1X_NtB8_9StreamingEE0BF_:
  517|    389|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|    389|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|    389|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser3intINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB1X_NtB8_9StreamingEEs_0BF_:
  522|  2.94k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser3intINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitNtB8_5CheckNtB8_9StreamingEE0BF_:
  517|  14.3k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|  14.3k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|  14.3k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser3intINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitNtB8_5CheckNtB8_9StreamingEEs_0BF_:
  522|  4.73k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser5floatINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB1Z_NtB8_9StreamingEE0BF_:
  517|  22.4k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|  22.4k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|  22.4k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser5floatINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB1Z_NtB8_9StreamingEEs_0BF_:
  522|    777|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser6numberINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB20_NtB8_9StreamingEE0BF_:
  517|  22.4k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|  22.4k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|  22.4k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser6numberINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB20_NtB8_9StreamingEEs_0BF_:
  522|    777|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser7literalINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB21_NtB8_9StreamingEE0BF_:
  517|  2.38k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|  2.38k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|  2.38k|    })?;
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser7literalINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB21_NtB8_9StreamingEEs_0BF_:
  522|  1.92k|    Ok((i, OM::Output::bind(|| o)))
_RNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser5float10base_floatINtB8_6ParserReE7processINtB8_7OutputMNtB8_5CheckNtB8_4EmitNtB8_9StreamingEE0BH_:
  517|  22.4k|    let (i, o) = self(i).map_err(|e| match e {
  518|      0|      Err::Incomplete(i) => Err::Incomplete(i),
  519|  22.4k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|      0|      Err::Failure(e) => Err::Failure(e),
  521|  22.4k|    })?;
_RNCINvXsg_NtCselIyhuOc7xF_3nom8internalINtB8_3MapINtNtBa_6branch6ChoiceTNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser13child_segment0INtNtBa_8sequence8PrecededNCINvNtNtBa_9character8complete4charReNtNtB1e_5error18InternalParseErrorE0INtNtBa_10combinator3CutIBM_TIBC_NvB1c_17wildcard_selectorNvMst_B1e_NtB1e_9Selectors3oneENvB1c_21member_name_shorthandNCINvB1c_14failed_segmentB4O_E0EEEEEENcNtNtB1e_7Segment5Child0EINtB8_6ParserB36_E7processINtB8_7OutputMNtB8_4EmitB7h_NtB8_9StreamingEE0B1e_:
  595|  6.04k|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| (self.g)(o)))),
_RNCINvXsg_NtCselIyhuOc7xF_3nom8internalINtB8_3MapINtNtBa_8sequence8PrecededNCINvNtNtBa_5bytes8complete3tagReB1G_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtNtBa_10combinator3CutINtNtBa_6branch6ChoiceTNCNvNtB1Q_6parser18descendant_segment0IBC_NvB3C_17wildcard_selectorNvMst_B1Q_NtB1Q_9Selectors3oneENvB3C_21member_name_shorthandNCINvB3C_14failed_segmentB4N_E0EEEENcNtNtB1Q_7Segment10Descendant0EINtB8_6ParserB1G_E7processINtB8_7OutputMNtB8_4EmitB7k_NtB8_9StreamingEE0B1Q_:
  595|  12.4k|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| (self.g)(o)))),
_RNCINvXsg_NtCselIyhuOc7xF_3nom8internalINtB8_3MapNCINvNtNtBa_5bytes8complete3tagReB1g_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtBa_10combinator5valueB1g_NtB1q_12ComparisonOpB1m_BL_E0EINtB8_6ParserB1g_E7processINtB8_7OutputMNtB8_4EmitB41_NtB8_9StreamingEE0B1q_:
  595|  2.33k|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| (self.g)(o)))),
_RNCINvXsg_NtCselIyhuOc7xF_3nom8internalINtB8_3MapNCINvNtNtBa_5bytes8complete3tagReB1g_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtBa_10combinator5valueB1g_NtB1q_7LiteralB1m_BL_E0EINtB8_6ParserB1g_E7processINtB8_7OutputMNtB8_4EmitB3V_NtB8_9StreamingEE0B1q_:
  595|    982|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| (self.g)(o)))),
_RNCINvXsg_NtCselIyhuOc7xF_3nom8internalINtB8_3MapNCINvNtNtBa_5bytes8complete3tagReB1g_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtBa_10combinator5valueB1g_NtNvNtB1q_6parser12logical_expr9BooleanOpB1m_BL_E0EINtB8_6ParserB1g_E7processINtB8_7OutputMNtB8_4EmitB4m_NtB8_9StreamingEE0B1q_:
  595|  4.79k|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| (self.g)(o)))),
_RNCINvXsg_NtCselIyhuOc7xF_3nom8internalINtB8_3MapNCINvNtNtBa_5bytes8complete3tagReB1g_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCNvNtB1q_6parser17wildcard_selector0EINtB8_6ParserB1g_E7processINtB8_7OutputMNtB8_4EmitB3D_NtB8_9StreamingEE0B1q_:
  595|  1.78k|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| (self.g)(o)))),
_RNCINvXsg_NtCselIyhuOc7xF_3nom8internalINtB8_3MapNCINvNtNtBa_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtBa_10combinator5valueB1l_NtB1r_12ComparisonOpB1n_BL_E0EINtB8_6ParserB1l_E7processINtB8_7OutputMNtB8_4EmitB42_NtB8_9StreamingEE0B1r_:
  595|  1.97k|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| (self.g)(o)))),
_RNCINvXsg_NtCselIyhuOc7xF_3nom8internalINtB8_3MapNCINvNtNtBa_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtBa_10combinator5valueB1l_NtNtB1r_6parser16RootSelectorTypeB1n_BL_E0EINtB8_6ParserB1l_E7processINtB8_7OutputMNtB8_4EmitB4f_NtB8_9StreamingEE0B1r_:
  595|  19.4k|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| (self.g)(o)))),
_RNCINvXsg_NtCselIyhuOc7xF_3nom8internalINtB8_3MapNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser14string_literalNcNtNtBP_8Selector4Name0EINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB2I_NtB8_9StreamingEE0BP_:
  595|  6.64k|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| (self.g)(o)))),
_RNCINvXsg_NtCselIyhuOc7xF_3nom8internalINtB8_3MapNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser5floatNCNvBN_6number0EINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB2p_NtB8_9StreamingEE0BP_:
  595|    777|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| (self.g)(o)))),
_RNCINvXsn_NtCselIyhuOc7xF_3nom8internalINtB8_4IntoINtNtBa_8sequence8PrecededNCINvNtNtBa_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtB1S_6parser17ignore_whitespaceNtB1S_11LogicalExprNCNvB2U_15filter_selector0B1O_E0ENtB1S_8SelectorB1O_EINtB8_6ParserB1M_E7processINtB8_7OutputMNtB8_4EmitB5e_NtB8_9StreamingEE0B1S_:
  775|  12.8k|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| o.into()))),
_RNCINvXsn_NtCselIyhuOc7xF_3nom8internalINtB8_4IntoNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser14string_literalNtBQ_7LiteralNtNtBQ_5error18InternalParseErrorEINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB35_NtB8_9StreamingEE0BQ_:
  775|  2.01k|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| o.into()))),
_RNCINvXsn_NtCselIyhuOc7xF_3nom8internalINtB8_4IntoNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser14string_literalNtBQ_7LiteralNtNtBQ_5error18InternalParseErrorEINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB35_NtB8_9StreamingEEs_0BQ_:
  776|  20.4k|      Err(Err::Error(e)) => Err(Err::Error(OM::Error::map(e, |e| e.into()))),
_RNCINvXsn_NtCselIyhuOc7xF_3nom8internalINtB8_4IntoNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser6numberNtBQ_7LiteralNtNtBQ_5error18InternalParseErrorEINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB2W_NtB8_9StreamingEE0BQ_:
  775|    777|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| o.into()))),
_RNCINvXsn_NtCselIyhuOc7xF_3nom8internalINtB8_4IntoNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser6numberNtBQ_7LiteralNtNtBQ_5error18InternalParseErrorEINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB2W_NtB8_9StreamingEEs_0BQ_:
  776|  22.4k|      Err(Err::Error(e)) => Err(Err::Error(OM::Error::map(e, |e| e.into()))),
_RNCINvXsn_NtCselIyhuOc7xF_3nom8internalINtB8_4IntoNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser7literalNtBQ_10ComparableNtNtBQ_5error18InternalParseErrorEINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB31_NtB8_9StreamingEE0BQ_:
  775|  1.92k|      Ok((i, o)) => Ok((i, OM::Output::map(o, |o| o.into()))),
_RNCINvXsn_NtCselIyhuOc7xF_3nom8internalINtB8_4IntoNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser7literalNtBQ_10ComparableNtNtBQ_5error18InternalParseErrorEINtB8_6ParserReE7processINtB8_7OutputMNtB8_4EmitB31_NtB8_9StreamingEEs_0BQ_:
  776|  2.38k|      Err(Err::Error(e)) => Err(Err::Error(OM::Error::map(e, |e| e.into()))),
_RNCNCINvXsf_NtCselIyhuOc7xF_3nom8internalINvNtNtBc_9character8complete6digit1ReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtBa_6ParserB1d_E7processINtBa_7OutputMNtBa_4EmitB2T_NtBa_9StreamingEE00B1j_:
  519|  22.4k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
_RNCNCINvXsf_NtCselIyhuOc7xF_3nom8internalINvNtNtBc_9character8complete6digit1ReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtBa_6ParserB1d_E7processINtBa_7OutputMNtBa_5CheckNtBa_4EmitNtBa_9StreamingEE00B1j_:
  519|  28.8k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
_RNCNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtBK_8SelectorNvBI_13name_selectorNtNtBK_5error18InternalParseErrorE0INtBa_6ParserReE7processINtBa_7OutputMNtBa_4EmitB3o_NtBa_9StreamingEE00BK_:
  519|  20.8k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
_RNCNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtBK_8SelectorNvBI_14index_selectorNtNtBK_5error18InternalParseErrorE0INtBa_6ParserReE7processINtBa_7OutputMNtBa_4EmitB3p_NtBa_9StreamingEE00BK_:
  519|  14.1k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
_RNCNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtBK_8SelectorNvBI_14slice_selectorNtNtBK_5error18InternalParseErrorE0INtBa_6ParserReE7processINtBa_7OutputMNtBa_4EmitB3p_NtBa_9StreamingEE00BK_:
  519|  17.3k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
_RNCNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtBK_8SelectorNvBI_17wildcard_selectorNtNtBK_5error18InternalParseErrorE0INtBa_6ParserReE7processINtBa_7OutputMNtBa_4EmitB3s_NtBa_9StreamingEE00BK_:
  519|  19.0k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
_RNCNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespacecNCINvNtNtBc_9character8complete4charReNtNtBK_5error18InternalParseErrorE0B2i_E0INtBa_6ParserB2g_E7processINtBa_7OutputMNtBa_5CheckNtBa_4EmitNtBa_9StreamingEE00BK_:
  519|  17.3k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
_RNCNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtNtBc_5bytes8complete3tagReB18_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtBa_6ParserB18_E7processINtBa_7OutputMNtBa_4EmitB2T_NtBa_9StreamingEE00B1i_:
  519|   187k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
_RNCNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtNtBc_5bytes8complete3tagReB18_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtBa_6ParserB18_E7processINtBa_7OutputMNtBa_5CheckNtBa_4EmitNtBa_9StreamingEE00B1i_:
  519|  6.16k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
_RNCNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtNtBc_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtBa_6ParserB1d_E7processINtBa_7OutputMNtBa_4EmitB2U_NtBa_9StreamingEE00B1j_:
  519|  48.4k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
_RNCNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtNtBc_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtBa_6ParserB1d_E7processINtBa_7OutputMNtBa_5CheckNtBa_4EmitNtBa_9StreamingEE00B1j_:
  519|   142k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
_RNCNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtNtBc_9character8complete6one_ofReB1f_uE0INtBa_6ParserB1f_E7processINtBa_7OutputMNtBa_4EmitB22_NtBa_9StreamingEE00CsiZ6QsNdkp8Z_15rsonpath_syntax:
  519|  18.1k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
_RNCNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12filter_query0INtBa_6ParserReE7processINtBa_7OutputMNtBa_4EmitB2c_NtBa_9StreamingEE00BJ_:
  519|  5.38k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
_RNCNCINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser7segment0INtBa_6ParserReE7processINtBa_7OutputMNtBa_4EmitB26_NtBa_9StreamingEE00BJ_:
  519|    774|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
_RNCNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser13name_selectorINtBa_6ParserReE7processINtBa_7OutputMNtBa_4EmitB2a_NtBa_9StreamingEE00BH_:
  519|  20.8k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
_RNCNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser14index_selectorINtBa_6ParserReE7processINtBa_7OutputMNtBa_4EmitB2b_NtBa_9StreamingEE00BH_:
  519|  14.1k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
_RNCNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser14slice_selectorINtBa_6ParserReE7processINtBa_7OutputMNtBa_4EmitB2b_NtBa_9StreamingEE00BH_:
  519|  17.3k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
_RNCNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser14string_literalINtBa_6ParserReE7processINtBa_7OutputMNtBa_4EmitB2b_NtBa_9StreamingEE00BH_:
  519|  41.3k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
_RNCNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17wildcard_selectorINtBa_6ParserReE7processINtBa_7OutputMNtBa_4EmitB2e_NtBa_9StreamingEE00BH_:
  519|  19.0k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
_RNCNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser3intINtBa_6ParserReE7processINtBa_7OutputMNtBa_4EmitB1Z_NtBa_9StreamingEE00BH_:
  519|    389|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
_RNCNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser5floatINtBa_6ParserReE7processINtBa_7OutputMNtBa_4EmitB21_NtBa_9StreamingEE00BH_:
  519|  22.4k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
_RNCNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser6numberINtBa_6ParserReE7processINtBa_7OutputMNtBa_4EmitB22_NtBa_9StreamingEE00BH_:
  519|  22.4k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
_RNCNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser7literalINtBa_6ParserReE7processINtBa_7OutputMNtBa_4EmitB23_NtBa_9StreamingEE00BH_:
  519|  2.38k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
_RNCNCINvXsf_NtCselIyhuOc7xF_3nom8internalNvNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser5float10base_floatINtBa_6ParserReE7processINtBa_7OutputMNtBa_5CheckNtBa_4EmitNtBa_9StreamingEE00BJ_:
  519|  22.4k|      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
_RNvYINtNtCselIyhuOc7xF_3nom8internal3MapINtNtB7_6branch6ChoiceTNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser13child_segment0INtNtB7_8sequence8PrecededNCINvNtNtB7_9character8complete4charReNtNtB15_5error18InternalParseErrorE0INtNtB7_10combinator3CutIBD_TIB3_NvB13_17wildcard_selectorNvMst_B15_NtB15_9Selectors3oneENvB13_21member_name_shorthandNCINvB13_14failed_segmentB4F_E0EEEEEENcNtNtB15_7Segment5Child0EINtB5_6ParserB2X_E5parseB15_:
  412|  6.16k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  6.16k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  6.16k|  }
_RNvYINtNtCselIyhuOc7xF_3nom8internal3MapINtNtB7_8sequence8PrecededNCINvNtNtB7_5bytes8complete3tagReB1x_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtNtB7_10combinator3CutINtNtB7_6branch6ChoiceTNCNvNtB1H_6parser18descendant_segment0IB3_NvB3t_17wildcard_selectorNvMst_B1H_NtB1H_9Selectors3oneENvB3t_21member_name_shorthandNCINvB3t_14failed_segmentB4E_E0EEEENcNtNtB1H_7Segment10Descendant0EINtB5_6ParserB1x_E5parseB1H_:
  412|  19.8k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  19.8k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  19.8k|  }
_RNvYINtNtCselIyhuOc7xF_3nom8internal3MapNCINvNtNtB7_5bytes8complete3tagReB17_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCNvNtB1h_6parser17wildcard_selector0EINtB5_6ParserB17_E5parseB1h_:
  412|  20.8k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  20.8k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  20.8k|  }
_RNvYINtNtCselIyhuOc7xF_3nom8internal3MapNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser14string_literalNcNtNtBG_8Selector4Name0EINtB5_6ParserReE5parseBG_:
  412|  27.5k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  27.5k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  27.5k|  }
_RNvYINtNtCselIyhuOc7xF_3nom8internal3MapNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser5floatNCNvBE_6number0EINtB5_6ParserReE5parseBG_:
  412|  23.2k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  23.2k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  23.2k|  }
_RNvYINtNtCselIyhuOc7xF_3nom8internal4IntoINtNtB7_8sequence8PrecededNCINvNtNtB7_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtB1J_6parser17ignore_whitespaceNtB1J_11LogicalExprNCNvB2L_15filter_selector0B1F_E0ENtB1J_8SelectorB1F_EINtB5_6ParserB1D_E5parseB1J_:
  412|  14.1k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  14.1k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  14.1k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCINvXNtB8_5bytesINtB23_3TagReBY_EINtB6_6ParserB2p_E7processINtB6_7OutputMBz_Bz_NtB6_8CompleteEEs0_0EB12_:
  272|   193k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|   193k|    f()
  274|   193k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCINvXs_NtB8_5bytesINtB25_9TagNoCaseReBY_EINtB6_6ParserB2x_E7processINtB6_7OutputMBz_Bz_NtB6_8CompleteEEs0_0EB12_:
  272|    777|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|    777|    f()
  274|    777|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindReNCINvXNtB8_5bytesINtB16_3TagBY_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorEINtB6_6ParserBY_E7processINtB6_7OutputMBz_Bz_NtB6_8CompleteEE0EB1z_:
  272|  23.5k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  23.5k|    f()
  274|  23.5k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindINtNtCshZc3FwCJ069_4core6option6OptionReENCINvXsf_B6_NCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceBY_INtNtB8_8sequence8PrecededNCINvNtNtB8_9character8complete4charB1A_NtNtB1W_5error18InternalParseErrorE0INtNtB8_10combinator3OptNCIB1S_B1A_NvB1U_3intB3Y_E0EEB3Y_E0INtB6_6ParserB1A_E7processINtB6_7OutputMBz_NtB6_5CheckNtB6_9StreamingEEs_0EB1W_:
  272|  1.61k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  1.61k|    f()
  274|  1.61k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtCsiZ6QsNdkp8Z_15rsonpath_syntax10ComparableNCINvXsf_B6_NCNvNtB10_6parser10comparable0INtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB10_:
  272|  2.38k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  2.38k|    f()
  274|  2.38k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtCsiZ6QsNdkp8Z_15rsonpath_syntax11LogicalExprNCINvXsf_B6_NCINvNtB10_6parser17ignore_whitespaceBY_NCNvB1Z_15filter_selector0NtNtB10_5error18InternalParseErrorE0INtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB10_:
  272|  12.8k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  12.8k|    f()
  274|  12.8k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtCsiZ6QsNdkp8Z_15rsonpath_syntax11LogicalExprNCINvXsf_B6_NCNvNtB10_6parser12logical_expr0INtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB10_:
  272|  20.5k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  20.5k|    f()
  274|  20.5k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtCsiZ6QsNdkp8Z_15rsonpath_syntax11LogicalExprNCINvXsf_B6_NCNvNtB10_6parser12logical_exprs0_0INtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB10_:
  272|  3.33k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  3.33k|    f()
  274|  3.33k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtCsiZ6QsNdkp8Z_15rsonpath_syntax11LogicalExprNCINvXsf_B6_NCNvNtB10_6parser12logical_exprs_0INtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB10_:
  272|  1.29k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  1.29k|    f()
  274|  1.29k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtCsiZ6QsNdkp8Z_15rsonpath_syntax11LogicalExprNCINvXsf_B6_NCNvNtB10_6parser15filter_selector0INtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB10_:
  272|  12.8k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  12.8k|    f()
  274|  12.8k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtCsiZ6QsNdkp8Z_15rsonpath_syntax11LogicalExprNCINvXsf_B6_NCNvNvNtB10_6parser12logical_expr12parse_single0INtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB10_:
  272|  4.27k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  4.27k|    f()
  274|  4.27k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtCsiZ6QsNdkp8Z_15rsonpath_syntax7LiteralNCINvXsf_B6_NvNtB10_6parser7literalINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB10_:
  272|  1.92k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  1.92k|    f()
  274|  1.92k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtCsiZ6QsNdkp8Z_15rsonpath_syntax7SegmentNCINvXsf_B6_NCNvNtB10_6parser12filter_query0INtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB10_:
  272|  11.3k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  11.3k|    f()
  274|  11.3k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtCsiZ6QsNdkp8Z_15rsonpath_syntax7SegmentNCINvXsf_B6_NCNvNtB10_6parser12filter_querys_0INtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB10_:
  272|  5.27k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  5.27k|    f()
  274|  5.27k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtCsiZ6QsNdkp8Z_15rsonpath_syntax7SegmentNCINvXsf_B6_NCNvNtB10_6parser7segment0INtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB10_:
  272|  1.10k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  1.10k|    f()
  274|  1.10k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtCsiZ6QsNdkp8Z_15rsonpath_syntax7SegmentNCINvXsf_B6_NCNvNtB10_6parser7segments_0INtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB10_:
  272|    761|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|    761|    f()
  274|    761|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtCsiZ6QsNdkp8Z_15rsonpath_syntax8SelectorNCINvXsf_B6_NCINvNtB10_6parser17ignore_whitespaceBY_NCNvB1V_8selector0NtNtB10_5error18InternalParseErrorE0INtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB10_:
  272|  12.8k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  12.8k|    f()
  274|  12.8k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtCsiZ6QsNdkp8Z_15rsonpath_syntax8SelectorNCINvXsf_B6_NCINvNtB10_6parser17ignore_whitespaceBY_NvB1V_13name_selectorNtNtB10_5error18InternalParseErrorE0INtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB10_:
  272|  6.64k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  6.64k|    f()
  274|  6.64k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtCsiZ6QsNdkp8Z_15rsonpath_syntax8SelectorNCINvXsf_B6_NCINvNtB10_6parser17ignore_whitespaceBY_NvB1V_14index_selectorNtNtB10_5error18InternalParseErrorE0INtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB10_:
  272|  3.16k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  3.16k|    f()
  274|  3.16k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtCsiZ6QsNdkp8Z_15rsonpath_syntax8SelectorNCINvXsf_B6_NCINvNtB10_6parser17ignore_whitespaceBY_NvB1V_14slice_selectorNtNtB10_5error18InternalParseErrorE0INtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB10_:
  272|  1.71k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  1.71k|    f()
  274|  1.71k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtCsiZ6QsNdkp8Z_15rsonpath_syntax8SelectorNCINvXsf_B6_NCINvNtB10_6parser17ignore_whitespaceBY_NvB1V_17wildcard_selectorNtNtB10_5error18InternalParseErrorE0INtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB10_:
  272|  1.78k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  1.78k|    f()
  274|  1.78k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtCsiZ6QsNdkp8Z_15rsonpath_syntax8SelectorNCINvXsf_B6_NCNvNtB10_6parser8selector0INtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB10_:
  272|  12.8k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  12.8k|    f()
  274|  12.8k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtCsiZ6QsNdkp8Z_15rsonpath_syntax8SelectorNCINvXsf_B6_NvNtB10_6parser13name_selectorINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB10_:
  272|  6.64k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  6.64k|    f()
  274|  6.64k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtCsiZ6QsNdkp8Z_15rsonpath_syntax8SelectorNCINvXsf_B6_NvNtB10_6parser14index_selectorINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB10_:
  272|  3.16k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  3.16k|    f()
  274|  3.16k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtCsiZ6QsNdkp8Z_15rsonpath_syntax8SelectorNCINvXsf_B6_NvNtB10_6parser14slice_selectorINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB10_:
  272|  1.71k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  1.71k|    f()
  274|  1.71k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtCsiZ6QsNdkp8Z_15rsonpath_syntax8SelectorNCINvXsf_B6_NvNtB10_6parser17wildcard_selectorINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB10_:
  272|  1.78k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  1.78k|    f()
  274|  1.78k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtCsiZ6QsNdkp8Z_15rsonpath_syntax9SelectorsNCINvXsf_B6_NCNvNtB10_6parser13child_segment0INtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB10_:
  272|  6.04k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  6.04k|    f()
  274|  6.04k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtCsiZ6QsNdkp8Z_15rsonpath_syntax9SelectorsNCINvXsf_B6_NCNvNtB10_6parser18descendant_segment0INtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB10_:
  272|  12.4k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  12.4k|    f()
  274|  12.4k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax3num10JsonNumberNCINvXsf_B6_NvNtB12_6parser6numberINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB12_:
  272|    777|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|    777|    f()
  274|    777|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax3num9JsonFloatNCINvXsf_B6_NvNtB12_6parser5floatINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB12_:
  272|    777|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|    777|    f()
  274|    777|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax3str10JsonStringNCINvXsf_B6_NCNvNtB12_6parser6string0INtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB12_:
  272|  8.66k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  8.66k|    f()
  274|  8.66k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax3str10JsonStringNCINvXsf_B6_NvNtB12_6parser14string_literalINtB6_6ParserReE7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB12_:
  272|  8.66k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  8.66k|    f()
  274|  8.66k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindNtNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_expr9BooleanOpNCINvXsf_B6_NCINvB12_17ignore_whitespaceBY_INtNtB8_6branch6ChoiceTINtB6_3MapNCINvNtNtB8_5bytes8complete3tagReB3N_NtNtB14_5error18InternalParseErrorE0NCINvNtB8_10combinator5valueB3N_BY_B3T_B3i_E0EB38_EEB3T_E0INtB6_6ParserB3N_E7processINtB6_7OutputMBz_NtB6_5CheckNtB6_9StreamingEEs_0EB14_:
  272|  4.79k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  4.79k|    f()
  274|  4.79k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindReNCINvXsf_B6_NCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceBY_NvB1h_3intNtNtB1j_5error18InternalParseErrorE0INtB6_6ParserBY_E7processINtB6_7OutputMBz_NtB6_5CheckNtB6_9StreamingEEs_0EB1j_:
  272|  2.94k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  2.94k|    f()
  274|  2.94k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindReNCINvXsf_B6_NvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser3intINtB6_6ParserBY_E7processINtB6_7OutputMBz_Bz_NtB6_9StreamingEEs_0EB1g_:
  272|  2.94k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  2.94k|    f()
  274|  2.94k|  }
_RINvXsa_NtCselIyhuOc7xF_3nom8internalNtB6_4EmitNtB6_4Mode4bindReNCINvXsf_B6_NvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser3intINtB6_6ParserBY_E7processINtB6_7OutputMBz_NtB6_5CheckNtB6_9StreamingEEs_0EB1g_:
  272|  4.73k|  fn bind<T, F: FnOnce() -> T>(f: F) -> Self::Output<T> {
  273|  4.73k|    f()
  274|  4.73k|  }
_RINvXsb_NtCselIyhuOc7xF_3nom8internalNtB6_5CheckNtB6_4Mode4bindReNCINvXsf_B6_NvNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser5float10base_floatINtB6_6ParserBZ_E7processINtB6_7OutputMBz_NtB6_4EmitNtB6_9StreamingEEs_0EB1j_:
  302|    777|  fn bind<T, F: FnOnce() -> T>(_: F) -> Self::Output<T> {}
_RINvXsb_NtCselIyhuOc7xF_3nom8internalNtB6_5CheckNtB6_4Mode4bindcNCINvXsf_B6_NCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespacecNCINvNtNtB8_9character8complete4charReNtNtB1j_5error18InternalParseErrorE0B2R_E0INtB6_6ParserB2P_E7processINtB6_7OutputMBz_NtB6_4EmitNtB6_9StreamingEEs_0EB1j_:
  302|  1.71k|  fn bind<T, F: FnOnce() -> T>(_: F) -> Self::Output<T> {}
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceINtNtCshZc3FwCJ069_4core6option6OptionReEINtNtB8_8sequence8PrecededNCINvNtNtB8_9character8complete4charB2d_NtNtBG_5error18InternalParseErrorE0INtNtB8_10combinator3OptNCIBC_B2d_NvBE_3intB3k_E0EEB3k_E0INtB6_6ParserB2d_E7processINtB6_7OutputMNtB6_4EmitNtB6_5CheckNtB6_9StreamingEEBG_:
  516|  1.71k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  1.71k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  1.71k|    })?;
  522|  1.61k|    Ok((i, OM::Output::bind(|| o)))
  523|  1.71k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtBG_11LogicalExprNCNvBE_15filter_selector0NtNtBG_5error18InternalParseErrorE0INtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB3t_NtB6_9StreamingEEBG_:
  516|  14.1k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  14.1k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  14.1k|    })?;
  522|  12.8k|    Ok((i, OM::Output::bind(|| o)))
  523|  14.1k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtBG_8SelectorNCNvBE_8selector0NtNtBG_5error18InternalParseErrorE0INtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB3h_NtB6_9StreamingEEBG_:
  516|  14.1k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  14.1k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  14.1k|    })?;
  522|  12.8k|    Ok((i, OM::Output::bind(|| o)))
  523|  14.1k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtBG_8SelectorNvBE_13name_selectorNtNtBG_5error18InternalParseErrorE0INtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB3k_NtB6_9StreamingEEBG_:
  516|  27.5k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  27.5k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  27.5k|    })?;
  522|  6.64k|    Ok((i, OM::Output::bind(|| o)))
  523|  27.5k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtBG_8SelectorNvBE_14index_selectorNtNtBG_5error18InternalParseErrorE0INtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB3l_NtB6_9StreamingEEBG_:
  516|  17.3k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  17.3k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  17.3k|    })?;
  522|  3.16k|    Ok((i, OM::Output::bind(|| o)))
  523|  17.3k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtBG_8SelectorNvBE_14slice_selectorNtNtBG_5error18InternalParseErrorE0INtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB3l_NtB6_9StreamingEEBG_:
  516|  19.0k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  19.0k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  19.0k|    })?;
  522|  1.71k|    Ok((i, OM::Output::bind(|| o)))
  523|  19.0k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtBG_8SelectorNvBE_17wildcard_selectorNtNtBG_5error18InternalParseErrorE0INtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB3o_NtB6_9StreamingEEBG_:
  516|  20.8k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  20.8k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  20.8k|    })?;
  522|  1.78k|    Ok((i, OM::Output::bind(|| o)))
  523|  20.8k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtNvBE_12logical_expr9BooleanOpINtNtB8_6branch6ChoiceTINtB6_3MapNCINvNtNtB8_5bytes8complete3tagReB38_NtNtBG_5error18InternalParseErrorE0NCINvNtB8_10combinator5valueB38_B1B_B3e_B2D_E0EB2t_EEB3e_E0INtB6_6ParserB38_E7processINtB6_7OutputMNtB6_4EmitNtB6_5CheckNtB6_9StreamingEEBG_:
  516|  25.2k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  25.2k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  25.2k|    })?;
  522|  4.79k|    Ok((i, OM::Output::bind(|| o)))
  523|  25.2k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceReNvBE_3intNtNtBG_5error18InternalParseErrorE0INtB6_6ParserB1B_E7processINtB6_7OutputMNtB6_4EmitNtB6_5CheckNtB6_9StreamingEEBG_:
  516|  3.33k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  3.33k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  3.33k|    })?;
  522|  2.94k|    Ok((i, OM::Output::bind(|| o)))
  523|  3.33k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespacecNCINvNtNtB8_9character8complete4charReNtNtBG_5error18InternalParseErrorE0B2e_E0INtB6_6ParserB2c_E7processINtB6_7OutputMNtB6_5CheckNtB6_4EmitNtB6_9StreamingEEBG_:
  516|  19.0k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  19.0k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  19.0k|    })?;
  522|  1.71k|    Ok((i, OM::Output::bind(|| o)))
  523|  19.0k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser10comparable0INtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB26_NtB6_9StreamingEEBF_:
  516|  2.38k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  2.38k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  2.38k|    })?;
  522|  2.38k|    Ok((i, OM::Output::bind(|| o)))
  523|  2.38k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12filter_query0INtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB28_NtB6_9StreamingEEBF_:
  516|  17.9k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  17.9k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  17.9k|    })?;
  522|  11.3k|    Ok((i, OM::Output::bind(|| o)))
  523|  17.9k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12filter_querys_0INtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB2a_NtB6_9StreamingEEBF_:
  516|  5.38k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  5.38k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  5.38k|    })?;
  522|  5.27k|    Ok((i, OM::Output::bind(|| o)))
  523|  5.38k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_expr0INtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB28_NtB6_9StreamingEEBF_:
  516|  25.4k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  25.4k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  25.4k|    })?;
  522|  20.5k|    Ok((i, OM::Output::bind(|| o)))
  523|  25.4k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_exprs0_0INtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB2b_NtB6_9StreamingEEBF_:
  516|  3.46k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  3.46k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  3.46k|    })?;
  522|  3.33k|    Ok((i, OM::Output::bind(|| o)))
  523|  3.46k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_exprs_0INtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB2a_NtB6_9StreamingEEBF_:
  516|  1.33k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  1.33k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  1.33k|    })?;
  522|  1.29k|    Ok((i, OM::Output::bind(|| o)))
  523|  1.33k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser13child_segment0INtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB29_NtB6_9StreamingEEBF_:
  516|  6.16k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  6.16k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  6.16k|    })?;
  522|  6.04k|    Ok((i, OM::Output::bind(|| o)))
  523|  6.16k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser15filter_selector0INtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB2b_NtB6_9StreamingEEBF_:
  516|  14.1k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  14.1k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  14.1k|    })?;
  522|  12.8k|    Ok((i, OM::Output::bind(|| o)))
  523|  14.1k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser18descendant_segment0INtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB2e_NtB6_9StreamingEEBF_:
  516|  13.6k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  13.6k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  13.6k|    })?;
  522|  12.4k|    Ok((i, OM::Output::bind(|| o)))
  523|  13.6k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser6string0INtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB21_NtB6_9StreamingEEBF_:
  516|  8.66k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  8.66k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  8.66k|    })?;
  522|  8.66k|    Ok((i, OM::Output::bind(|| o)))
  523|  8.66k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser7segment0INtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB22_NtB6_9StreamingEEBF_:
  516|  1.90k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  1.90k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  1.90k|    })?;
  522|  1.10k|    Ok((i, OM::Output::bind(|| o)))
  523|  1.90k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser7segments_0INtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB24_NtB6_9StreamingEEBF_:
  516|    774|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|    774|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|    774|    })?;
  522|    761|    Ok((i, OM::Output::bind(|| o)))
  523|    774|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser8selector0INtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB23_NtB6_9StreamingEEBF_:
  516|  14.1k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  14.1k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  14.1k|    })?;
  522|  12.8k|    Ok((i, OM::Output::bind(|| o)))
  523|  14.1k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNCNvNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_expr12parse_single0INtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB2o_NtB6_9StreamingEEBH_:
  516|  7.80k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  7.80k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  7.80k|    })?;
  522|  4.27k|    Ok((i, OM::Output::bind(|| o)))
  523|  7.80k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser13name_selectorINtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB26_NtB6_9StreamingEEBD_:
  516|  27.5k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  27.5k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  27.5k|    })?;
  522|  6.64k|    Ok((i, OM::Output::bind(|| o)))
  523|  27.5k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser14index_selectorINtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB27_NtB6_9StreamingEEBD_:
  516|  17.3k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  17.3k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  17.3k|    })?;
  522|  3.16k|    Ok((i, OM::Output::bind(|| o)))
  523|  17.3k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser14slice_selectorINtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB27_NtB6_9StreamingEEBD_:
  516|  19.0k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  19.0k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  19.0k|    })?;
  522|  1.71k|    Ok((i, OM::Output::bind(|| o)))
  523|  19.0k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser14string_literalINtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB27_NtB6_9StreamingEEBD_:
  516|  49.9k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  49.9k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  49.9k|    })?;
  522|  8.66k|    Ok((i, OM::Output::bind(|| o)))
  523|  49.9k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17wildcard_selectorINtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB2a_NtB6_9StreamingEEBD_:
  516|  20.8k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  20.8k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  20.8k|    })?;
  522|  1.78k|    Ok((i, OM::Output::bind(|| o)))
  523|  20.8k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser3intINtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB1V_NtB6_9StreamingEEBD_:
  516|  3.33k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  3.33k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  3.33k|    })?;
  522|  2.94k|    Ok((i, OM::Output::bind(|| o)))
  523|  3.33k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser3intINtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitNtB6_5CheckNtB6_9StreamingEEBD_:
  516|  19.0k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  19.0k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  19.0k|    })?;
  522|  4.73k|    Ok((i, OM::Output::bind(|| o)))
  523|  19.0k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser5floatINtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB1X_NtB6_9StreamingEEBD_:
  516|  23.2k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  23.2k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  23.2k|    })?;
  522|    777|    Ok((i, OM::Output::bind(|| o)))
  523|  23.2k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser6numberINtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB1Y_NtB6_9StreamingEEBD_:
  516|  23.2k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  23.2k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  23.2k|    })?;
  522|    777|    Ok((i, OM::Output::bind(|| o)))
  523|  23.2k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser7literalINtB6_6ParserReE7processINtB6_7OutputMNtB6_4EmitB1Z_NtB6_9StreamingEEBD_:
  516|  4.31k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  4.31k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  4.31k|    })?;
  522|  1.92k|    Ok((i, OM::Output::bind(|| o)))
  523|  4.31k|  }
_RINvXsf_NtCselIyhuOc7xF_3nom8internalNvNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser5float10base_floatINtB6_6ParserReE7processINtB6_7OutputMNtB6_5CheckNtB6_4EmitNtB6_9StreamingEEBF_:
  516|  23.2k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  517|  23.2k|    let (i, o) = self(i).map_err(|e| match e {
  518|       |      Err::Incomplete(i) => Err::Incomplete(i),
  519|       |      Err::Error(e) => Err::Error(OM::Error::bind(|| e)),
  520|       |      Err::Failure(e) => Err::Failure(e),
  521|  23.2k|    })?;
  522|    777|    Ok((i, OM::Output::bind(|| o)))
  523|  23.2k|  }
_RINvYNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser14string_literalINtNtCselIyhuOc7xF_3nom8internal6ParserReE3mapNcNtNtB7_8Selector4Name0B1N_EB7_:
  431|  27.5k|  fn map<G, O2>(self, g: G) -> Map<Self, G>
  432|  27.5k|  where
  433|  27.5k|    G: FnMut(Self::Output) -> O2,
  434|  27.5k|    Self: core::marker::Sized,
  435|  27.5k|  {
  436|  27.5k|    Map { f: self, g }
  437|  27.5k|  }
_RINvYNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser14string_literalINtNtCselIyhuOc7xF_3nom8internal6ParserReE4intoNtB7_7LiteralNtNtB7_5error18InternalParseErrorEB7_:
  497|  23.2k|  fn into<O2: From<Self::Output>, E2: From<Self::Error>>(self) -> Into<Self, O2, E2>
  498|  23.2k|  where
  499|  23.2k|    Self: core::marker::Sized,
  500|  23.2k|  {
  501|  23.2k|    Into {
  502|  23.2k|      f: self,
  503|  23.2k|      phantom_out2: core::marker::PhantomData,
  504|  23.2k|      phantom_err2: core::marker::PhantomData,
  505|  23.2k|    }
  506|  23.2k|  }
_RINvYNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17wildcard_selectorINtNtCselIyhuOc7xF_3nom8internal6ParserReE3mapNvMst_B7_NtB7_9Selectors3oneB1V_EB7_:
  431|  25.9k|  fn map<G, O2>(self, g: G) -> Map<Self, G>
  432|  25.9k|  where
  433|  25.9k|    G: FnMut(Self::Output) -> O2,
  434|  25.9k|    Self: core::marker::Sized,
  435|  25.9k|  {
  436|  25.9k|    Map { f: self, g }
  437|  25.9k|  }
_RINvYNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser5floatINtNtCselIyhuOc7xF_3nom8internal6ParserReE3mapNCNvB5_6number0NtNtB7_3num10JsonNumberEB7_:
  431|  23.2k|  fn map<G, O2>(self, g: G) -> Map<Self, G>
  432|  23.2k|  where
  433|  23.2k|    G: FnMut(Self::Output) -> O2,
  434|  23.2k|    Self: core::marker::Sized,
  435|  23.2k|  {
  436|  23.2k|    Map { f: self, g }
  437|  23.2k|  }
_RINvYNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser6numberINtNtCselIyhuOc7xF_3nom8internal6ParserReE4intoNtB7_7LiteralNtNtB7_5error18InternalParseErrorEB7_:
  497|  23.2k|  fn into<O2: From<Self::Output>, E2: From<Self::Error>>(self) -> Into<Self, O2, E2>
  498|  23.2k|  where
  499|  23.2k|    Self: core::marker::Sized,
  500|  23.2k|  {
  501|  23.2k|    Into {
  502|  23.2k|      f: self,
  503|  23.2k|      phantom_out2: core::marker::PhantomData,
  504|  23.2k|      phantom_err2: core::marker::PhantomData,
  505|  23.2k|    }
  506|  23.2k|  }
_RINvYNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser7literalINtNtCselIyhuOc7xF_3nom8internal6ParserReE4intoNtB7_10ComparableNtNtB7_5error18InternalParseErrorEB7_:
  497|  4.31k|  fn into<O2: From<Self::Output>, E2: From<Self::Error>>(self) -> Into<Self, O2, E2>
  498|  4.31k|  where
  499|  4.31k|    Self: core::marker::Sized,
  500|  4.31k|  {
  501|  4.31k|    Into {
  502|  4.31k|      f: self,
  503|  4.31k|      phantom_out2: core::marker::PhantomData,
  504|  4.31k|      phantom_err2: core::marker::PhantomData,
  505|  4.31k|    }
  506|  4.31k|  }
_RNvYNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_expr0INtNtCselIyhuOc7xF_3nom8internal6ParserReE5parseB8_:
  412|  25.4k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  25.4k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  25.4k|  }
_RNvYNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_exprs0_0INtNtCselIyhuOc7xF_3nom8internal6ParserReE5parseB8_:
  412|  3.46k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  3.46k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  3.46k|  }
_RNvYNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_exprs_0INtNtCselIyhuOc7xF_3nom8internal6ParserReE5parseB8_:
  412|  1.33k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  1.33k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  1.33k|  }
_RNvYNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser15filter_selector0INtNtCselIyhuOc7xF_3nom8internal6ParserReE5parseB8_:
  412|  14.1k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  14.1k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  14.1k|  }
_RNvYNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser8selector0INtNtCselIyhuOc7xF_3nom8internal6ParserReE5parseB8_:
  412|  14.1k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  14.1k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  14.1k|  }
_RNvYNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser13name_selectorINtNtCselIyhuOc7xF_3nom8internal6ParserReE5parseB6_:
  412|  27.5k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  27.5k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  27.5k|  }
_RNvYNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser14index_selectorINtNtCselIyhuOc7xF_3nom8internal6ParserReE5parseB6_:
  412|  17.3k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  17.3k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  17.3k|  }
_RNvYNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser14slice_selectorINtNtCselIyhuOc7xF_3nom8internal6ParserReE5parseB6_:
  412|  19.0k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  19.0k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  19.0k|  }
_RNvYNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17wildcard_selectorINtNtCselIyhuOc7xF_3nom8internal6ParserReE5parseB6_:
  412|  20.8k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  20.8k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  20.8k|  }
_RNvYNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser3intINtNtCselIyhuOc7xF_3nom8internal6ParserReE5parseB6_:
  412|  3.33k|  fn parse(&mut self, input: Input) -> IResult<Input, Self::Output, Self::Error> {
  413|  3.33k|    self.process::<OutputM<Emit, Emit, Streaming>>(input)
  414|  3.33k|  }

_RINvXNtCselIyhuOc7xF_3nom8sequenceINtB3_8PrecededNCINvNtNtB5_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCNvNtB1r_6parser6string0EINtNtB5_8internal6ParserB1l_E7processINtB2R_7OutputMNtB2R_4EmitB3E_NtB2R_9StreamingEEB1r_:
   88|  93.3k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
   89|  93.3k|    let (i, _) = self
   90|  93.3k|      .f
   91|  93.3k|      .process::<OutputM<Check, OM::Error, OM::Incomplete>>(i)?;
   92|  8.66k|    let (i, o2) = self.g.process::<OM>(i)?;
   93|       |
   94|  8.66k|    Ok((i, o2))
   95|  93.3k|  }
_RINvNtCselIyhuOc7xF_3nom8sequence10terminatedReINtNtCshZc3FwCJ069_4core6option6OptionBH_ENtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorINtNtB4_10combinator3OptNvNtB1t_6parser3intENCINvB2O_17ignore_whitespacecNCINvNtNtB4_9character8complete4charBH_B1p_E0B1p_E0EB1t_:
  118|  19.0k|pub fn terminated<I, O, E: ParseError<I>, F, G>(
  119|  19.0k|  first: F,
  120|  19.0k|  second: G,
  121|  19.0k|) -> impl Parser<I, Output = O, Error = E>
  122|  19.0k|where
  123|  19.0k|  F: Parser<I, Output = O, Error = E>,
  124|  19.0k|  G: Parser<I, Error = E>,
  125|  19.0k|{
  126|  19.0k|  Terminated {
  127|  19.0k|    f: first,
  128|  19.0k|    g: second,
  129|  19.0k|  }
  130|  19.0k|}
_RINvNtCselIyhuOc7xF_3nom8sequence8precededReBE_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorINtNtB4_10combinator3OptINtNtB4_6branch6ChoiceTNCINvNtNtB4_9character8complete4charBE_BJ_E0B2t_EEEINvB2y_6digit1BE_BJ_EEBN_:
   61|  23.2k|pub fn preceded<I, O, E: ParseError<I>, F, G>(
   62|  23.2k|  first: F,
   63|  23.2k|  second: G,
   64|  23.2k|) -> impl Parser<I, Output = O, Error = E>
   65|  23.2k|where
   66|  23.2k|  F: Parser<I, Error = E>,
   67|  23.2k|  G: Parser<I, Output = O, Error = E>,
   68|  23.2k|{
   69|  23.2k|  Preceded {
   70|  23.2k|    f: first,
   71|  23.2k|    g: second,
   72|  23.2k|  }
   73|  23.2k|}
_RINvNtCselIyhuOc7xF_3nom8sequence8precededReBE_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCINvNtNtB4_5bytes8complete11tag_no_caseBE_BE_BJ_E0INtB2_8PrecededINtNtB4_10combinator3OptINtNtB4_6branch6ChoiceTNCINvNtNtB4_9character8complete4charBE_BJ_E0B3x_EEEINvB3C_6digit1BE_BJ_EEEBN_:
   61|  23.2k|pub fn preceded<I, O, E: ParseError<I>, F, G>(
   62|  23.2k|  first: F,
   63|  23.2k|  second: G,
   64|  23.2k|) -> impl Parser<I, Output = O, Error = E>
   65|  23.2k|where
   66|  23.2k|  F: Parser<I, Error = E>,
   67|  23.2k|  G: Parser<I, Output = O, Error = E>,
   68|  23.2k|{
   69|  23.2k|  Preceded {
   70|  23.2k|    f: first,
   71|  23.2k|    g: second,
   72|  23.2k|  }
   73|  23.2k|}
_RINvNtCselIyhuOc7xF_3nom8sequence8precededReBE_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCINvNtNtB4_9character8complete4charBE_BJ_E0INvB1N_6digit1BE_BJ_EEBN_:
   61|  63.0k|pub fn preceded<I, O, E: ParseError<I>, F, G>(
   62|  63.0k|  first: F,
   63|  63.0k|  second: G,
   64|  63.0k|) -> impl Parser<I, Output = O, Error = E>
   65|  63.0k|where
   66|  63.0k|  F: Parser<I, Error = E>,
   67|  63.0k|  G: Parser<I, Output = O, Error = E>,
   68|  63.0k|{
   69|  63.0k|  Preceded {
   70|  63.0k|    f: first,
   71|  63.0k|    g: second,
   72|  63.0k|  }
   73|  63.0k|}
_RINvNtCselIyhuOc7xF_3nom8sequence8precededReBE_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCINvNtNtB4_9character8complete4charBE_BJ_E0NvNvNtBN_6parser5float10base_floatEBN_:
   61|  23.2k|pub fn preceded<I, O, E: ParseError<I>, F, G>(
   62|  23.2k|  first: F,
   63|  23.2k|  second: G,
   64|  23.2k|) -> impl Parser<I, Output = O, Error = E>
   65|  23.2k|where
   66|  23.2k|  F: Parser<I, Error = E>,
   67|  23.2k|  G: Parser<I, Output = O, Error = E>,
   68|  23.2k|{
   69|  23.2k|  Preceded {
   70|  23.2k|    f: first,
   71|  23.2k|    g: second,
   72|  23.2k|  }
   73|  23.2k|}
_RINvNtCselIyhuOc7xF_3nom8sequence8precededReINtNtCshZc3FwCJ069_4core6option6OptionBE_ENtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorNCINvNtNtB4_9character8complete4charBE_B1m_E0INtNtB4_10combinator3OptNCINvNtB1q_6parser17ignore_whitespaceBE_NvB3x_3intB1m_E0EEB1q_:
   61|  1.71k|pub fn preceded<I, O, E: ParseError<I>, F, G>(
   62|  1.71k|  first: F,
   63|  1.71k|  second: G,
   64|  1.71k|) -> impl Parser<I, Output = O, Error = E>
   65|  1.71k|where
   66|  1.71k|  F: Parser<I, Error = E>,
   67|  1.71k|  G: Parser<I, Output = O, Error = E>,
   68|  1.71k|{
   69|  1.71k|  Preceded {
   70|  1.71k|    f: first,
   71|  1.71k|    g: second,
   72|  1.71k|  }
   73|  1.71k|}
_RINvNtCselIyhuOc7xF_3nom8sequence8precededReNtCsiZ6QsNdkp8Z_15rsonpath_syntax11LogicalExprNtNtBI_5error18InternalParseErrorNCINvNtNtB4_9character8complete4charBE_B1q_E0NCINvNtBI_6parser17ignore_whitespaceBG_NCNvB2L_15filter_selector0B1q_E0EBI_:
   61|  14.1k|pub fn preceded<I, O, E: ParseError<I>, F, G>(
   62|  14.1k|  first: F,
   63|  14.1k|  second: G,
   64|  14.1k|) -> impl Parser<I, Output = O, Error = E>
   65|  14.1k|where
   66|  14.1k|  F: Parser<I, Error = E>,
   67|  14.1k|  G: Parser<I, Output = O, Error = E>,
   68|  14.1k|{
   69|  14.1k|  Preceded {
   70|  14.1k|    f: first,
   71|  14.1k|    g: second,
   72|  14.1k|  }
   73|  14.1k|}
_RINvNtCselIyhuOc7xF_3nom8sequence8precededReNtCsiZ6QsNdkp8Z_15rsonpath_syntax9SelectorsNtNtBI_5error18InternalParseErrorNCINvNtNtB4_5bytes8complete3tagBE_BE_B1n_E0INtNtB4_10combinator3CutINtNtB4_6branch6ChoiceTNCNvNtBI_6parser18descendant_segment0INtNtB4_8internal3MapNvB3q_17wildcard_selectorNvMst_BI_BG_3oneENvB3q_21member_name_shorthandNCINvB3q_14failed_segmentBG_E0EEEEBI_:
   61|  19.8k|pub fn preceded<I, O, E: ParseError<I>, F, G>(
   62|  19.8k|  first: F,
   63|  19.8k|  second: G,
   64|  19.8k|) -> impl Parser<I, Output = O, Error = E>
   65|  19.8k|where
   66|  19.8k|  F: Parser<I, Error = E>,
   67|  19.8k|  G: Parser<I, Output = O, Error = E>,
   68|  19.8k|{
   69|  19.8k|  Preceded {
   70|  19.8k|    f: first,
   71|  19.8k|    g: second,
   72|  19.8k|  }
   73|  19.8k|}
_RINvNtCselIyhuOc7xF_3nom8sequence8precededReNtCsiZ6QsNdkp8Z_15rsonpath_syntax9SelectorsNtNtBI_5error18InternalParseErrorNCINvNtNtB4_9character8complete4charBE_B1n_E0INtNtB4_10combinator3CutINtNtB4_6branch6ChoiceTINtNtB4_8internal3MapNvNtBI_6parser17wildcard_selectorNvMst_BI_BG_3oneENvB3L_21member_name_shorthandNCINvB3L_14failed_segmentBG_E0EEEEBI_:
   61|  6.16k|pub fn preceded<I, O, E: ParseError<I>, F, G>(
   62|  6.16k|  first: F,
   63|  6.16k|  second: G,
   64|  6.16k|) -> impl Parser<I, Output = O, Error = E>
   65|  6.16k|where
   66|  6.16k|  F: Parser<I, Error = E>,
   67|  6.16k|  G: Parser<I, Output = O, Error = E>,
   68|  6.16k|{
   69|  6.16k|  Preceded {
   70|  6.16k|    f: first,
   71|  6.16k|    g: second,
   72|  6.16k|  }
   73|  6.16k|}
_RINvNtCselIyhuOc7xF_3nom8sequence8precededReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax3str10JsonStringNtNtBK_5error18InternalParseErrorNCINvNtNtB4_9character8complete4charBE_B1v_E0NCNvNtBK_6parser6string0EBK_:
   61|  99.9k|pub fn preceded<I, O, E: ParseError<I>, F, G>(
   62|  99.9k|  first: F,
   63|  99.9k|  second: G,
   64|  99.9k|) -> impl Parser<I, Output = O, Error = E>
   65|  99.9k|where
   66|  99.9k|  F: Parser<I, Error = E>,
   67|  99.9k|  G: Parser<I, Output = O, Error = E>,
   68|  99.9k|{
   69|  99.9k|  Preceded {
   70|  99.9k|    f: first,
   71|  99.9k|    g: second,
   72|  99.9k|  }
   73|  99.9k|}
_RINvXNtCselIyhuOc7xF_3nom8sequenceINtB3_8PrecededNCINvNtNtB5_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtNtB5_10combinator3OptNCINvNtB1r_6parser17ignore_whitespaceB1l_NvB2R_3intB1n_E0EEINtNtB5_8internal6ParserB1l_E7processINtB3M_7OutputMNtB3M_4EmitB4z_NtB3M_9StreamingEEB1r_:
   88|  1.71k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
   89|  1.71k|    let (i, _) = self
   90|  1.71k|      .f
   91|  1.71k|      .process::<OutputM<Check, OM::Error, OM::Incomplete>>(i)?;
   92|  1.61k|    let (i, o2) = self.g.process::<OM>(i)?;
   93|       |
   94|  1.61k|    Ok((i, o2))
   95|  1.71k|  }
_RINvXs_NtCselIyhuOc7xF_3nom8sequenceINtB5_10TerminatedINtNtB7_10combinator3OptNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser3intENCINvB1g_17ignore_whitespacecNCINvNtNtB7_9character8complete4charReNtNtB1i_5error18InternalParseErrorE0B34_E0EINtNtB7_8internal6ParserB32_E7processINtB3O_7OutputMNtB3O_4EmitB4B_NtB3O_9StreamingEEB1i_:
  145|  19.0k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
  146|  19.0k|    let (i, o1) = self.f.process::<OM>(i)?;
  147|  19.0k|    let (i, _) = self
  148|  19.0k|      .g
  149|  19.0k|      .process::<OutputM<Check, OM::Error, OM::Incomplete>>(i)?;
  150|       |
  151|  1.71k|    Ok((i, o1))
  152|  19.0k|  }
_RINvXNtCselIyhuOc7xF_3nom8sequenceINtB3_8PrecededNCINvNtNtB5_5bytes8complete11tag_no_caseReB1p_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0IBx_INtNtB5_10combinator3OptINtNtB5_6branch6ChoiceTNCINvNtNtB5_9character8complete4charB1p_B1v_E0B3l_EEEINvB3q_6digit1B1p_B1v_EEEINtNtB5_8internal6ParserB1p_E7processINtB4E_7OutputMNtB4E_4EmitNtB4E_5CheckNtB4E_9StreamingEEB1z_:
   88|    777|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
   89|    777|    let (i, _) = self
   90|    777|      .f
   91|    777|      .process::<OutputM<Check, OM::Error, OM::Incomplete>>(i)?;
   92|      0|    let (i, o2) = self.g.process::<OM>(i)?;
   93|       |
   94|      0|    Ok((i, o2))
   95|    777|  }
_RINvXNtCselIyhuOc7xF_3nom8sequenceINtB3_8PrecededNCINvNtNtB5_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INvBQ_6digit1B1l_B1n_EEINtNtB5_8internal6ParserB1l_E7processINtB2O_7OutputMNtB2O_4EmitNtB2O_5CheckNtB2O_9StreamingEEB1r_:
   88|    777|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
   89|    777|    let (i, _) = self
   90|    777|      .f
   91|    777|      .process::<OutputM<Check, OM::Error, OM::Incomplete>>(i)?;
   92|    365|    let (i, o2) = self.g.process::<OM>(i)?;
   93|       |
   94|    365|    Ok((i, o2))
   95|    777|  }
_RINvXNtCselIyhuOc7xF_3nom8sequenceINtB3_8PrecededNCINvNtNtB5_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INvBQ_6digit1B1l_B1n_EEINtNtB5_8internal6ParserB1l_E7processINtB2O_7OutputMNtB2O_5CheckNtB2O_4EmitNtB2O_9StreamingEEB1r_:
   88|  39.7k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
   89|  39.7k|    let (i, _) = self
   90|  39.7k|      .f
   91|  39.7k|      .process::<OutputM<Check, OM::Error, OM::Incomplete>>(i)?;
   92|  4.81k|    let (i, o2) = self.g.process::<OM>(i)?;
   93|       |
   94|  4.81k|    Ok((i, o2))
   95|  39.7k|  }
_RINvXNtCselIyhuOc7xF_3nom8sequenceINtB3_8PrecededNCINvNtNtB5_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NvNvNtB1r_6parser5float10base_floatEINtNtB5_8internal6ParserB1l_E7processINtB31_7OutputMNtB31_5CheckNtB31_4EmitNtB31_9StreamingEEB1r_:
   88|  23.2k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
   89|  23.2k|    let (i, _) = self
   90|  23.2k|      .f
   91|  23.2k|      .process::<OutputM<Check, OM::Error, OM::Incomplete>>(i)?;
   92|    405|    let (i, o2) = self.g.process::<OM>(i)?;
   93|       |
   94|    405|    Ok((i, o2))
   95|  23.2k|  }
_RINvXNtCselIyhuOc7xF_3nom8sequenceINtB3_8PrecededNCINvNtNtB5_5bytes8complete3tagReB1g_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0INtNtB5_10combinator3CutINtNtB5_6branch6ChoiceTNCNvNtB1q_6parser18descendant_segment0INtNtB5_8internal3MapNvB3c_17wildcard_selectorNvMst_B1q_NtB1q_9Selectors3oneENvB3c_21member_name_shorthandNCINvB3c_14failed_segmentB4E_E0EEEEINtB3N_6ParserB1g_E7processINtB3N_7OutputMNtB3N_4EmitB6H_NtB3N_9StreamingEEB1q_:
   88|  19.8k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
   89|  19.8k|    let (i, _) = self
   90|  19.8k|      .f
   91|  19.8k|      .process::<OutputM<Check, OM::Error, OM::Incomplete>>(i)?;
   92|  13.6k|    let (i, o2) = self.g.process::<OM>(i)?;
   93|       |
   94|  12.4k|    Ok((i, o2))
   95|  19.8k|  }
_RINvXNtCselIyhuOc7xF_3nom8sequenceINtB3_8PrecededNCINvNtNtB5_9character8complete4charReNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0NCINvNtB1r_6parser17ignore_whitespaceNtB1r_11LogicalExprNCNvB2t_15filter_selector0B1n_E0EINtNtB5_8internal6ParserB1l_E7processINtB3S_7OutputMNtB3S_4EmitB4F_NtB3S_9StreamingEEB1r_:
   88|  14.1k|  fn process<OM: OutputMode>(&mut self, i: I) -> PResult<OM, I, Self::Output, Self::Error> {
   89|  14.1k|    let (i, _) = self
   90|  14.1k|      .f
   91|  14.1k|      .process::<OutputM<Check, OM::Error, OM::Incomplete>>(i)?;
   92|  14.1k|    let (i, o2) = self.g.process::<OM>(i)?;
   93|       |
   94|  12.8k|    Ok((i, o2))
   95|  14.1k|  }

_RINvXs_NtCselIyhuOc7xF_3nom6traitsReNtB5_5Input27split_at_position1_completeNCINvNtNtB7_9character8complete6digit1Bw_NtNtCsiZ6QsNdkp8Z_15rsonpath_syntax5error18InternalParseErrorE0B1R_EB1V_:
  470|  63.3k|  fn split_at_position1_complete<P, E: ParseError<Self>>(
  471|  63.3k|    &self,
  472|  63.3k|    predicate: P,
  473|  63.3k|    e: ErrorKind,
  474|  63.3k|  ) -> IResult<Self, Self, E>
  475|  63.3k|  where
  476|  63.3k|    P: Fn(Self::Item) -> bool,
  477|  63.3k|  {
  478|  63.3k|    match self.find(predicate) {
  479|  51.3k|      Some(0) => Err(Err::Error(E::from_error_kind(self, e))),
  480|       |      // The position i is returned from str::find() which means it is within the bounds of the string
  481|  11.9k|      Some(i) => {
  482|  11.9k|        let (str1, str2) = self.split_at(i);
  483|  11.9k|        Ok((str2, str1))
  484|       |      }
  485|       |      None => {
  486|      0|        if self.is_empty() {
  487|      0|          Err(Err::Error(E::from_error_kind(self, e)))
  488|       |        } else {
  489|       |          // the end of slice is a char boundary
  490|      0|          let (str1, str2) = self.split_at(self.len());
  491|      0|          Ok((str2, str1))
  492|       |        }
  493|       |      }
  494|       |    }
  495|  63.3k|  }
_RNvXs_NtCselIyhuOc7xF_3nom6traitsReNtB4_5Input13iter_elementsCsiZ6QsNdkp8Z_15rsonpath_syntax:
  392|   403k|  fn iter_elements(&self) -> Self::Iter {
  393|   403k|    self.chars()
  394|   403k|  }
_RNvXs_NtCselIyhuOc7xF_3nom6traitsReNtB4_5Input4takeCsiZ6QsNdkp8Z_15rsonpath_syntax:
  368|  35.9k|  fn take(&self, index: usize) -> Self {
  369|  35.9k|    &self[..index]
  370|  35.9k|  }
_RNvXs_NtCselIyhuOc7xF_3nom6traitsReNtB4_5Input9take_fromCsiZ6QsNdkp8Z_15rsonpath_syntax:
  373|   159k|  fn take_from(&self, index: usize) -> Self {
  374|   159k|    &self[index..]
  375|   159k|  }
_RNvXsc_NtCselIyhuOc7xF_3nom6traitscNtB5_6AsChar12is_dec_digitCsiZ6QsNdkp8Z_15rsonpath_syntax:
  788|   326k|  fn is_dec_digit(self) -> bool {
  789|   326k|    self.is_ascii_digit()
  790|   326k|  }
_RNvXsc_NtCselIyhuOc7xF_3nom6traitscNtB5_6AsChar3lenCsiZ6QsNdkp8Z_15rsonpath_syntax:
  804|  17.9k|  fn len(self) -> usize {
  805|  17.9k|    self.len_utf8()
  806|  17.9k|  }
_RNvXsc_NtCselIyhuOc7xF_3nom6traitscNtB5_6AsChar7as_charCsiZ6QsNdkp8Z_15rsonpath_syntax:
  776|   421k|  fn as_char(self) -> char {
  777|   421k|    self
  778|   421k|  }
_RNvXsd_NtCselIyhuOc7xF_3nom6traitsRcNtB5_6AsChar3lenCsiZ6QsNdkp8Z_15rsonpath_syntax:
  846|   117k|  fn len(self) -> usize {
  847|   117k|    self.len_utf8()
  848|   117k|  }
_RNvXsd_NtCselIyhuOc7xF_3nom6traitsRcNtB5_6AsChar7as_charCsiZ6QsNdkp8Z_15rsonpath_syntax:
  818|   117k|  fn as_char(self) -> char {
  819|   117k|    *self
  820|   117k|  }
_RNvXs4_NtCselIyhuOc7xF_3nom6traitsReNtB5_7AsBytes8as_bytes:
  620|   217k|  fn as_bytes(&self) -> &[u8] {
  621|   217k|    (*self).as_bytes()
  622|   217k|  }
_RNvXse_NtCselIyhuOc7xF_3nom6traitsRShINtB5_7CompareBw_E7compare:
  893|   217k|  fn compare(&self, t: &'b [u8]) -> CompareResult {
  894|   217k|    let pos = self.iter().zip(t.iter()).position(|(a, b)| a != b);
  895|   217k|
  896|   217k|    match pos {
  897|   193k|      Some(_) => CompareResult::Error,
  898|       |      None => {
  899|  23.5k|        if self.len() >= t.len() {
  900|  23.5k|          CompareResult::Ok
  901|       |        } else {
  902|      0|          CompareResult::Incomplete
  903|       |        }
  904|       |      }
  905|       |    }
  906|   217k|  }
_RNvXsg_NtCselIyhuOc7xF_3nom6traitsReINtB5_7CompareBw_E15compare_no_case:
  943|    777|  fn compare_no_case(&self, t: &'b str) -> CompareResult {
  944|    777|    let pos = self
  945|    777|      .chars()
  946|    777|      .zip(t.chars())
  947|    777|      .position(|(a, b)| a.to_lowercase().ne(b.to_lowercase()));
  948|    777|
  949|    777|    match pos {
  950|    777|      Some(_) => CompareResult::Error,
  951|       |      None => {
  952|      0|        if self.len() >= t.len() {
  953|      0|          CompareResult::Ok
  954|       |        } else {
  955|      0|          CompareResult::Incomplete
  956|       |        }
  957|       |      }
  958|       |    }
  959|    777|  }
_RNvXsg_NtCselIyhuOc7xF_3nom6traitsReINtB5_7CompareBw_E7compare:
  937|   217k|  fn compare(&self, t: &'b str) -> CompareResult {
  938|   217k|    self.as_bytes().compare(t.as_bytes())
  939|   217k|  }
_RNCNvXse_NtCselIyhuOc7xF_3nom6traitsRShINtB7_7CompareBy_E7compare0CsiZ6QsNdkp8Z_15rsonpath_syntax:
  894|   243k|    let pos = self.iter().zip(t.iter()).position(|(a, b)| a != b);
_RNCNvXsg_NtCselIyhuOc7xF_3nom6traitsReINtB7_7CompareBy_E15compare_no_case0CsiZ6QsNdkp8Z_15rsonpath_syntax:
  947|    777|      .position(|(a, b)| a.to_lowercase().ne(b.to_lowercase()));
_RNvXs_NtCselIyhuOc7xF_3nom6traitsReNtB4_5Input9input_len:
  363|   218k|  fn input_len(&self) -> usize {
  364|   218k|    self.len()
  365|   218k|  }
_RNvXs3_NtCselIyhuOc7xF_3nom6traitsReNtB5_6Offset6offset:
  604|  12.4k|  fn offset(&self, second: &Self) -> usize {
  605|  12.4k|    let fst = self.as_ptr();
  606|  12.4k|    let snd = second.as_ptr();
  607|  12.4k|
  608|  12.4k|    snd as usize - fst as usize
  609|  12.4k|  }
_RNvXsn_NtCselIyhuOc7xF_3nom6traitsReINtB5_9FindTokencE10find_token:
 1010|  36.0k|  fn find_token(&self, token: char) -> bool {
 1011|  36.0k|    self.chars().any(|i| i == token)
 1012|  36.0k|  }
_RNCNvXsn_NtCselIyhuOc7xF_3nom6traitsReINtB7_9FindTokencE10find_token0B9_:
 1011|  59.5k|    self.chars().any(|i| i == token)

_RNvNvNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax3num1__26RECURSIVE_COUNT_JsonNumber6___initB7_:
   79|      1|        fn __init() -> $t {
   80|      1|            $init
   81|      1|        }
_RNvNvNvCsiZ6QsNdkp8Z_15rsonpath_syntax1__23RECURSIVE_COUNT_Segment6___initB5_:
   79|      1|        fn __init() -> $t {
   80|      1|            $init
   81|      1|        }
_RNvNvNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs_1__24RECURSIVE_COUNT_Selector6___initB5_:
   79|      1|        fn __init() -> $t {
   80|      1|            $init
   81|      1|        }
_RNvNvNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs0_1__21RECURSIVE_COUNT_Slice6___initB5_:
   79|      1|        fn __init() -> $t {
   80|      1|            $init
   81|      1|        }
_RNvNvNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs1_1__23RECURSIVE_COUNT_Literal6___initB5_:
   79|      1|        fn __init() -> $t {
   80|      1|            $init
   81|      1|        }
_RNvNvNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs2_1__27RECURSIVE_COUNT_LogicalExpr6___initB5_:
   79|      1|        fn __init() -> $t {
   80|      1|            $init
   81|      1|        }
_RNvNvNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs3_1__24RECURSIVE_COUNT_TestExpr6___initB5_:
   79|      1|        fn __init() -> $t {
   80|      1|            $init
   81|      1|        }
_RNvNvNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs4_1__30RECURSIVE_COUNT_ComparisonExpr6___initB5_:
   79|      1|        fn __init() -> $t {
   80|      1|            $init
   81|      1|        }
_RNvNvNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs5_1__28RECURSIVE_COUNT_ComparisonOp6___initB5_:
   79|      1|        fn __init() -> $t {
   80|      1|            $init
   81|      1|        }
_RNvNvNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs6_1__26RECURSIVE_COUNT_Comparable6___initB5_:
   79|      1|        fn __init() -> $t {
   80|      1|            $init
   81|      1|        }
_RNvNvNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs7_1__37RECURSIVE_COUNT_SingularJsonPathQuery6___initB5_:
   79|      1|        fn __init() -> $t {
   80|      1|            $init
   81|      1|        }
_RNvNvNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs8_1__31RECURSIVE_COUNT_SingularSegment6___initB5_:
   79|      1|        fn __init() -> $t {
   80|      1|            $init
   81|      1|        }
_RNvNvNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs9_1__29RECURSIVE_COUNT_JsonPathQuery6___initB5_:
   79|      1|        fn __init() -> $t {
   80|      1|            $init
   81|      1|        }
_RNCNkNvNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax3num1__26RECURSIVE_COUNT_JsonNumber0s_0B9_:
   96|     14|                    |init| {
   97|     14|                        #[thread_local]
   98|     14|                        static VAL: LazyStorage<$t, !> = LazyStorage::new();
   99|     14|                        VAL.get_or_init(init, __init)
  100|     14|                    }
_RNCNkNvNvCsiZ6QsNdkp8Z_15rsonpath_syntax1__23RECURSIVE_COUNT_Segment0s_0B7_:
   96|    170|                    |init| {
   97|    170|                        #[thread_local]
   98|    170|                        static VAL: LazyStorage<$t, !> = LazyStorage::new();
   99|    170|                        VAL.get_or_init(init, __init)
  100|    170|                    }
_RNCNkNvNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs_1__24RECURSIVE_COUNT_Selector0s_0B7_:
   96|    380|                    |init| {
   97|    380|                        #[thread_local]
   98|    380|                        static VAL: LazyStorage<$t, !> = LazyStorage::new();
   99|    380|                        VAL.get_or_init(init, __init)
  100|    380|                    }
_RNCNkNvNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs0_1__21RECURSIVE_COUNT_Slice0s_0B7_:
   96|     36|                    |init| {
   97|     36|                        #[thread_local]
   98|     36|                        static VAL: LazyStorage<$t, !> = LazyStorage::new();
   99|     36|                        VAL.get_or_init(init, __init)
  100|     36|                    }
_RNCNkNvNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs1_1__23RECURSIVE_COUNT_Literal0s_0B7_:
   96|    774|                    |init| {
   97|    774|                        #[thread_local]
   98|    774|                        static VAL: LazyStorage<$t, !> = LazyStorage::new();
   99|    774|                        VAL.get_or_init(init, __init)
  100|    774|                    }
_RNCNkNvNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs2_1__27RECURSIVE_COUNT_LogicalExpr0s_0B7_:
   96|    900|                    |init| {
   97|    900|                        #[thread_local]
   98|    900|                        static VAL: LazyStorage<$t, !> = LazyStorage::new();
   99|    900|                        VAL.get_or_init(init, __init)
  100|    900|                    }
_RNCNkNvNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs3_1__24RECURSIVE_COUNT_TestExpr0s_0B7_:
   96|    138|                    |init| {
   97|    138|                        #[thread_local]
   98|    138|                        static VAL: LazyStorage<$t, !> = LazyStorage::new();
   99|    138|                        VAL.get_or_init(init, __init)
  100|    138|                    }
_RNCNkNvNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs4_1__30RECURSIVE_COUNT_ComparisonExpr0s_0B7_:
   96|     86|                    |init| {
   97|     86|                        #[thread_local]
   98|     86|                        static VAL: LazyStorage<$t, !> = LazyStorage::new();
   99|     86|                        VAL.get_or_init(init, __init)
  100|     86|                    }
_RNCNkNvNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs5_1__28RECURSIVE_COUNT_ComparisonOp0s_0B7_:
   96|    550|                    |init| {
   97|    550|                        #[thread_local]
   98|    550|                        static VAL: LazyStorage<$t, !> = LazyStorage::new();
   99|    550|                        VAL.get_or_init(init, __init)
  100|    550|                    }
_RNCNkNvNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs6_1__26RECURSIVE_COUNT_Comparable0s_0B7_:
   96|    688|                    |init| {
   97|    688|                        #[thread_local]
   98|    688|                        static VAL: LazyStorage<$t, !> = LazyStorage::new();
   99|    688|                        VAL.get_or_init(init, __init)
  100|    688|                    }
_RNCNkNvNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs7_1__37RECURSIVE_COUNT_SingularJsonPathQuery0s_0B7_:
   96|     72|                    |init| {
   97|     72|                        #[thread_local]
   98|     72|                        static VAL: LazyStorage<$t, !> = LazyStorage::new();
   99|     72|                        VAL.get_or_init(init, __init)
  100|     72|                    }
_RNCNkNvNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs8_1__31RECURSIVE_COUNT_SingularSegment0s_0B7_:
   96|    114|                    |init| {
   97|    114|                        #[thread_local]
   98|    114|                        static VAL: LazyStorage<$t, !> = LazyStorage::new();
   99|    114|                        VAL.get_or_init(init, __init)
  100|    114|                    }
_RNCNkNvNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs9_1__29RECURSIVE_COUNT_JsonPathQuery0s_0B7_:
   96|    250|                    |init| {
   97|    250|                        #[thread_local]
   98|    250|                        static VAL: LazyStorage<$t, !> = LazyStorage::new();
   99|    250|                        VAL.get_or_init(init, __init)
  100|    250|                    }

_RNvMNtCsiZ6QsNdkp8Z_15rsonpath_syntax5errorNtB2_10ParseError25is_nesting_limit_exceededCsaryQ4xZOwOZ_21query_fuzz_round_trip:
   35|     39|    pub fn is_nesting_limit_exceeded(&self) -> bool {
   36|     39|        matches!(self.inner, InnerParseError::RecursionLimit(_))
   37|     39|    }
_RNvMs_NtCsiZ6QsNdkp8Z_15rsonpath_syntax5errorNtB4_17ParseErrorBuilder3new:
   47|  1.01k|    pub(crate) fn new() -> Self {
   48|  1.01k|        Self { syntax_errors: vec![] }
   49|  1.01k|    }
_RNvMs_NtCsiZ6QsNdkp8Z_15rsonpath_syntax5errorNtB4_17ParseErrorBuilder8is_empty:
   59|    975|    pub(crate) fn is_empty(&self) -> bool {
   60|    975|        self.syntax_errors.is_empty()
   61|    975|    }
_RNvMs_NtCsiZ6QsNdkp8Z_15rsonpath_syntax5errorNtB4_17ParseErrorBuilder24recursion_limit_exceeded:
   70|     39|    pub(crate) fn recursion_limit_exceeded(str: String, recursion_limit: usize) -> ParseError {
   71|     39|        ParseError {
   72|     39|            input: str,
   73|     39|            inner: InnerParseError::RecursionLimit(recursion_limit),
   74|     39|        }
   75|     39|    }
_RNvMs1_NtCsiZ6QsNdkp8Z_15rsonpath_syntax5errorNtB5_11SyntaxError3new:
  192|  13.8k|    pub(crate) fn new(kind: SyntaxErrorKind, rev_idx: usize, len: usize) -> Self {
  193|  13.8k|        Self { kind, rev_idx, len }
  194|  13.8k|    }
_RNvXs3_NtCsiZ6QsNdkp8Z_15rsonpath_syntax5errorNtB5_18InternalParseErrorINtNtCselIyhuOc7xF_3nom5error10ParseErrorReE15from_error_kind:
  462|   458k|    fn from_error_kind(input: &'a str, kind: nom::error::ErrorKind) -> Self {
  463|   458k|        Self::NomError(nom::error::Error::from_error_kind(input, kind))
  464|   458k|    }
_RNvXs3_NtCsiZ6QsNdkp8Z_15rsonpath_syntax5errorNtB5_18InternalParseErrorINtNtCselIyhuOc7xF_3nom5error10ParseErrorReE6append:
  466|   145k|    fn append(input: &'a str, kind: nom::error::ErrorKind, other: Self) -> Self {
  467|   145k|        match other {
  468|   145k|            Self::NomError(e) => Self::NomError(nom::error::Error::append(input, kind, e)),
  469|      0|            _ => other,
  470|       |        }
  471|   145k|    }

_RNvCsiZ6QsNdkp8Z_15rsonpath_syntax5parseCsaryQ4xZOwOZ_21query_fuzz_round_trip:
  283|  1.01k|pub fn parse(str: &str) -> Result<JsonPathQuery> {
  284|  1.01k|    Parser::default().parse(str)
  285|  1.01k|}
_RNvMs2_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_6Parser5parseCsaryQ4xZOwOZ_21query_fuzz_round_trip:
  307|  1.01k|    pub fn parse(&self, str: &str) -> Result<JsonPathQuery> {
  308|  1.01k|        crate::parser::parse_with_options(str, &self.options)
  309|  1.01k|    }
_RNvMsc_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_5Slice23default_start_backwards:
  502|    826|    pub(crate) fn default_start_backwards() -> Index {
  503|    826|        Index::FromEnd(1.try_into().expect("const 1 is nonzero"))
  504|    826|    }
_RNvMsm_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_21SingularJsonPathQuery8segmentsCsaryQ4xZOwOZ_21query_fuzz_round_trip:
  762|  4.93k|    pub fn segments(&self) -> impl Iterator<Item = &'_ SingularSegment> {
  763|  4.93k|        self.segments.iter()
  764|  4.93k|    }
_RNvMsr_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_13JsonPathQuery8segments:
  834|  14.8k|    pub fn segments(&self) -> &[Segment] {
  835|  14.8k|        &self.segments
  836|  14.8k|    }
_RNvMst_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_9Selectors5firstCsaryQ4xZOwOZ_21query_fuzz_round_trip:
  924|  16.5k|    pub fn first(&self) -> &Selector {
  925|  16.5k|        &self.inner[0]
  926|  16.5k|    }
_RNvMsw_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_4Step10is_forward:
 1054|  1.72k|    pub const fn is_forward(&self) -> bool {
 1055|  1.72k|        matches!(self, Self::Forward(_))
 1056|  1.72k|    }
_RNvMsw_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_4Step11is_backward:
 1068|  2.54k|    pub const fn is_backward(&self) -> bool {
 1069|  2.54k|        matches!(self, Self::Backward(_))
 1070|  2.54k|    }
_RNvXs0_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_13ParserOptionsNtNtCshZc3FwCJ069_4core7default7Default7default:
  232|  1.01k|    fn default() -> Self {
  233|  1.01k|        Self {
  234|  1.01k|            recursion_limit: Some(Parser::RECURSION_LIMIT_DEFAULT),
  235|  1.01k|            relaxed_whitespace: false,
  236|  1.01k|        }
  237|  1.01k|    }
_RNvXsA_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_9SelectorsNtNtCshZc3FwCJ069_4core3fmt7Display3fmtCsaryQ4xZOwOZ_21query_fuzz_round_trip:
 1105|  16.5k|    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
 1106|  16.5k|        write!(f, "[{}", self.first())?;
 1107|  16.5k|        for s in self.inner.iter().skip(1) {
 1108|  7.76k|            write!(f, ", {s}")?;
 1109|       |        }
 1110|  16.5k|        write!(f, "]")?;
 1111|  16.5k|        Ok(())
 1112|  16.5k|    }
_RNvXsB_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_8SelectorNtNtCshZc3FwCJ069_4core3fmt7Display3fmtCsaryQ4xZOwOZ_21query_fuzz_round_trip:
 1117|  24.3k|    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
 1118|  24.3k|        match self {
 1119|  5.36k|            Self::Name(n) => write!(f, "'{}'", str::escape(n.unquoted(), str::EscapeMode::SingleQuoted)),
 1120|  1.79k|            Self::Wildcard => write!(f, "*"),
 1121|  1.19k|            Self::Index(idx) => write!(f, "{idx}"),
 1122|  1.72k|            Self::Slice(slice) => write!(f, "{slice}"),
 1123|  14.2k|            Self::Filter(filter) => write!(f, "?{filter}"),
 1124|       |        }
 1125|  24.3k|    }
_RNvXsC_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_5IndexNtNtCshZc3FwCJ069_4core3fmt7Display3fmtCsaryQ4xZOwOZ_21query_fuzz_round_trip:
 1130|  6.14k|    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
 1131|  6.14k|        match self {
 1132|  3.40k|            Self::FromStart(idx) => write!(f, "{idx}"),
 1133|  2.74k|            Self::FromEnd(idx) => write!(f, "-{idx}"),
 1134|       |        }
 1135|  6.14k|    }
_RNvXsD_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_4StepNtNtCshZc3FwCJ069_4core3fmt7Display3fmtCsaryQ4xZOwOZ_21query_fuzz_round_trip:
 1140|  1.62k|    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
 1141|  1.62k|        match self {
 1142|    867|            Self::Forward(idx) => write!(f, "{idx}"),
 1143|    758|            Self::Backward(idx) => write!(f, "-{idx}"),
 1144|       |        }
 1145|  1.62k|    }
_RNvXsE_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_5SliceNtNtCshZc3FwCJ069_4core3fmt7Display3fmtCsaryQ4xZOwOZ_21query_fuzz_round_trip:
 1150|  1.72k|    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
 1151|  1.72k|        if (self.step.is_forward() && self.start != Self::DEFAULT_START_FORWARDS)
 1152|    833|            || (self.step.is_backward() && self.start != Self::default_start_backwards())
 1153|       |        {
 1154|  1.57k|            write!(f, "{}", self.start)?;
 1155|    143|        }
 1156|  1.72k|        write!(f, ":")?;
 1157|  1.72k|        if let Some(end) = self.end {
 1158|  1.33k|            write!(f, "{end}")?;
 1159|    391|        }
 1160|  1.72k|        if self.step != Self::DEFAULT_STEP {
 1161|  1.62k|            write!(f, ":{}", self.step)?;
 1162|     96|        }
 1163|  1.72k|        Ok(())
 1164|  1.72k|    }
_RNvXsF_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_11LogicalExprNtNtCshZc3FwCJ069_4core3fmt7Display3fmtCsaryQ4xZOwOZ_21query_fuzz_round_trip:
 1169|  30.0k|    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
 1170|  30.0k|        match self {
 1171|  3.60k|            Self::Or(lhs, rhs) => {
 1172|  3.60k|                if lhs.precedence() <= self.precedence() {
 1173|  1.63k|                    write!(f, "({lhs})")?;
 1174|       |                } else {
 1175|  1.96k|                    write!(f, "{lhs}")?;
 1176|       |                }
 1177|  3.60k|                write!(f, " || ")?;
 1178|  3.60k|                if rhs.precedence() < self.precedence() {
 1179|      0|                    write!(f, "({rhs})")?;
 1180|       |                } else {
 1181|  3.60k|                    write!(f, "{rhs}")?;
 1182|       |                }
 1183|  3.60k|                Ok(())
 1184|       |            }
 1185|  1.34k|            Self::And(lhs, rhs) => {
 1186|  1.34k|                if lhs.precedence() < self.precedence() {
 1187|    383|                    write!(f, "({lhs})")?;
 1188|       |                } else {
 1189|    964|                    write!(f, "{lhs}")?;
 1190|       |                }
 1191|  1.34k|                write!(f, " && ")?;
 1192|  1.34k|                if rhs.precedence() <= self.precedence() {
 1193|    368|                    write!(f, "({rhs})")?;
 1194|       |                } else {
 1195|    979|                    write!(f, "{rhs}")?;
 1196|       |                }
 1197|  1.34k|                Ok(())
 1198|       |            }
 1199|  5.91k|            Self::Not(expr) => {
 1200|  5.91k|                if expr.precedence() <= self.precedence() {
 1201|  5.57k|                    write!(f, "!({expr})")
 1202|       |                } else {
 1203|    336|                    write!(f, "!{expr}")
 1204|       |                }
 1205|       |            }
 1206|  4.37k|            Self::Comparison(expr) => write!(f, "{expr}"),
 1207|  14.8k|            Self::Test(test) => write!(f, "{test}"),
 1208|       |        }
 1209|  30.0k|    }
_RNvXsG_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_14ComparisonExprNtNtCshZc3FwCJ069_4core3fmt7Display3fmtCsaryQ4xZOwOZ_21query_fuzz_round_trip:
 1214|  4.37k|    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
 1215|  4.37k|        write!(f, "{} {} {}", self.lhs, self.op, self.rhs)
 1216|  4.37k|    }
_RNvXsH_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_8TestExprNtNtCshZc3FwCJ069_4core3fmt7Display3fmtCsaryQ4xZOwOZ_21query_fuzz_round_trip:
 1221|  14.8k|    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
 1222|  14.8k|        match self {
 1223|  2.19k|            Self::Relative(q) => {
 1224|  2.19k|                write!(f, "@")?;
 1225|  2.19k|                for s in q.segments() {
 1226|  2.19k|                    write!(f, "{s}")?;
 1227|       |                }
 1228|       |            }
 1229|  12.6k|            Self::Absolute(q) => {
 1230|  12.6k|                write!(f, "$")?;
 1231|  12.6k|                for s in q.segments() {
 1232|  12.4k|                    write!(f, "{s}")?;
 1233|       |                }
 1234|       |            }
 1235|       |        }
 1236|  14.8k|        Ok(())
 1237|  14.8k|    }
_RNvXsI_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_10ComparableNtNtCshZc3FwCJ069_4core3fmt7Display3fmtCsaryQ4xZOwOZ_21query_fuzz_round_trip:
 1242|  8.74k|    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
 1243|  8.74k|        match self {
 1244|  3.81k|            Self::Literal(lit) => write!(f, "{lit}"),
 1245|  1.67k|            Self::RelativeSingularQuery(q) => {
 1246|  1.67k|                write!(f, "@")?;
 1247|  1.67k|                for s in q.segments() {
 1248|  1.19k|                    write!(f, "{s}")?;
 1249|       |                }
 1250|  1.67k|                Ok(())
 1251|       |            }
 1252|  3.26k|            Self::AbsoluteSingularQuery(q) => {
 1253|  3.26k|                write!(f, "$")?;
 1254|  3.26k|                for s in q.segments() {
 1255|  2.17k|                    write!(f, "{s}")?;
 1256|       |                }
 1257|  3.26k|                Ok(())
 1258|       |            }
 1259|       |        }
 1260|  8.74k|    }
_RNvXsJ_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_7LiteralNtNtCshZc3FwCJ069_4core3fmt7Display3fmtCsaryQ4xZOwOZ_21query_fuzz_round_trip:
 1265|  3.81k|    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
 1266|  3.81k|        match self {
 1267|  2.04k|            Self::String(s) => write!(f, "\"{}\"", str::escape(s.unquoted(), str::EscapeMode::DoubleQuoted)),
 1268|    777|            Self::Number(n) => write!(f, "{n}"),
 1269|    254|            Self::Bool(true) => write!(f, "true"),
 1270|    175|            Self::Bool(false) => write!(f, "false"),
 1271|    559|            Self::Null => write!(f, "null"),
 1272|       |        }
 1273|  3.81k|    }
_RNvXsK_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_12ComparisonOpNtNtCshZc3FwCJ069_4core3fmt7Display3fmtCsaryQ4xZOwOZ_21query_fuzz_round_trip:
 1278|  4.37k|    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
 1279|  4.37k|        match self {
 1280|    928|            Self::EqualTo => write!(f, "=="),
 1281|    307|            Self::NotEqualTo => write!(f, "!="),
 1282|    165|            Self::LesserOrEqualTo => write!(f, "<="),
 1283|    969|            Self::GreaterOrEqualTo => write!(f, ">="),
 1284|  1.27k|            Self::LessThan => write!(f, "<"),
 1285|    731|            Self::GreaterThan => write!(f, ">"),
 1286|       |        }
 1287|  4.37k|    }
_RNvXsM_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_15SingularSegmentNtNtCshZc3FwCJ069_4core3fmt7Display3fmtCsaryQ4xZOwOZ_21query_fuzz_round_trip:
 1302|  3.36k|    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
 1303|  3.36k|        match self {
 1304|  1.32k|            Self::Name(n) => write!(f, "['{}']", str::escape(n.unquoted(), str::EscapeMode::SingleQuoted)),
 1305|  2.04k|            Self::Index(i) => write!(f, "[{i}]"),
 1306|       |        }
 1307|  3.36k|    }
_RNvXsy_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_13JsonPathQueryNtNtCshZc3FwCJ069_4core3fmt7Display3fmtCsaryQ4xZOwOZ_21query_fuzz_round_trip:
 1084|  1.01k|    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
 1085|  1.01k|        write!(f, "$")?;
 1086|  2.92k|        for s in &self.segments {
 1087|  1.90k|            write!(f, "{s}")?;
 1088|       |        }
 1089|  1.01k|        Ok(())
 1090|  1.01k|    }
_RNvXsz_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_7SegmentNtNtCshZc3FwCJ069_4core3fmt7Display3fmtCsaryQ4xZOwOZ_21query_fuzz_round_trip:
 1095|  16.5k|    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
 1096|  16.5k|        match self {
 1097|  2.82k|            Self::Child(s) => write!(f, "{s}"),
 1098|  13.7k|            Self::Descendant(s) => write!(f, "..{s}"),
 1099|       |        }
 1100|  16.5k|    }
_RNvMs_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB4_13ParserOptions30is_trailing_whitespace_allowed:
  225|    975|    fn is_trailing_whitespace_allowed(&self) -> bool {
  226|    975|        self.relaxed_whitespace
  227|    975|    }
_RNvXs3_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_9SelectorsNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitraryB5_:
  334|  20.0k|    fn arbitrary(u: &mut arbitrary::Unstructured<'a>) -> arbitrary::Result<Self> {
  335|  20.0k|        let first = u.arbitrary::<Selector>()?;
  336|  19.1k|        let mut rest = u.arbitrary::<Vec<Selector>>()?;
  337|  18.4k|        rest.push(first);
  338|  18.4k|
  339|  18.4k|        Ok(Self::many(rest))
  340|  20.0k|    }
_RNvXs7_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_8SelectorINtNtCshZc3FwCJ069_4core7convert4FromNtB5_11LogicalExprE4fromB5_:
  397|  12.8k|    fn from(value: LogicalExpr) -> Self {
  398|  12.8k|        Self::Filter(value)
  399|  12.8k|    }
_RNvXs8_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_5IndexNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitraryB5_:
  419|  7.77k|    fn arbitrary(u: &mut arbitrary::Unstructured<'a>) -> arbitrary::Result<Self> {
  420|  7.77k|        let num = u.arbitrary::<num::JsonInt>()?;
  421|  7.77k|        Ok(Self::from(num))
  422|  7.77k|    }
_RNvXsa_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_4StepNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitraryB5_:
  452|  1.99k|    fn arbitrary(u: &mut arbitrary::Unstructured<'a>) -> arbitrary::Result<Self> {
  453|  1.99k|        let num = u.arbitrary::<num::JsonInt>()?;
  454|  1.99k|        Ok(Self::from(num))
  455|  1.99k|    }
_RNvXsb_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_4StepINtNtCshZc3FwCJ069_4core7convert4FromNtNtB5_3num7JsonIntE4fromB5_:
  460|  1.99k|    fn from(value: num::JsonInt) -> Self {
  461|  1.99k|        if value.as_i64() >= 0 {
  462|  1.14k|            Self::Forward(value.abs())
  463|       |        } else {
  464|    844|            Self::Backward(value.abs().try_into().expect("checked for zero already"))
  465|       |        }
  466|  1.99k|    }
_RNvXsd_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_5SliceNtNtCshZc3FwCJ069_4core7default7Default7defaultB5_:
  538|  1.71k|    fn default() -> Self {
  539|  1.71k|        Self {
  540|  1.71k|            start: Index::FromStart(0.into()),
  541|  1.71k|            end: None,
  542|  1.71k|            step: Step::Forward(1.into()),
  543|  1.71k|        }
  544|  1.71k|    }
_RNvMsj_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_11LogicalExpr10precedence:
  624|  31.6k|    fn precedence(&self) -> usize {
  625|  31.6k|        match self {
  626|  10.4k|            Self::Or(_, _) => 2,
  627|  3.97k|            Self::And(_, _) => 3,
  628|  3.23k|            Self::Comparison(_) => 4,
  629|  11.5k|            Self::Not(_) => 5,
  630|  2.41k|            Self::Test(_) => 10,
  631|       |        }
  632|  31.6k|    }
_RNvMsq_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_13JsonPathQuery15try_to_singular:
  815|  4.84k|    fn try_to_singular(self) -> std::result::Result<SingularJsonPathQuery, Self> {
  816|  4.84k|        if self.segments.iter().all(Segment::is_singular) {
  817|  4.84k|            let mut singular_segments = Vec::with_capacity(self.segments.len());
  818|  8.18k|            for segment in self.segments {
  819|  3.34k|                singular_segments.push(segment.into_singular());
  820|  3.34k|            }
  821|  4.84k|            Ok(SingularJsonPathQuery {
  822|  4.84k|                segments: singular_segments,
  823|  4.84k|            })
  824|       |        } else {
  825|      0|            Err(self)
  826|       |        }
  827|  4.84k|    }
_RNvMss_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_7Segment11is_singular:
  877|  6.68k|    fn is_singular(&self) -> bool {
  878|  6.68k|        match self {
  879|  6.68k|            Self::Child(s) => s.len() == 1 && s.first().is_singular(),
  880|      0|            Self::Descendant(_) => false,
  881|       |        }
  882|  6.68k|    }
_RNvMss_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_7Segment13into_singular:
  884|  3.34k|    fn into_singular(self) -> SingularSegment {
  885|  3.34k|        assert!(self.is_singular());
  886|  3.34k|        match self {
  887|  3.34k|            Self::Child(mut s) => match s.inner.drain(..).next().expect("is_singular") {
  888|  1.31k|                Selector::Name(n) => SingularSegment::Name(n),
  889|  2.02k|                Selector::Index(i) => SingularSegment::Index(i),
  890|      0|                _ => unreachable!(),
  891|       |            },
  892|      0|            Self::Descendant(_) => unreachable!(),
  893|       |        }
  894|  3.34k|    }
_RNvMst_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_9Selectors4manyB5_:
  916|  36.8k|    pub fn many(vec: Vec<Selector>) -> Self {
  917|  36.8k|        assert!(!vec.is_empty(), "cannot create an empty Selectors collection");
  918|  36.8k|        Self { inner: vec }
  919|  36.8k|    }
_RNvMst_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_9Selectors5firstB5_:
  924|  6.68k|    pub fn first(&self) -> &Selector {
  925|  6.68k|        &self.inner[0]
  926|  6.68k|    }
_RNvMsu_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_8Selector11is_singular:
 1008|  6.68k|    fn is_singular(&self) -> bool {
 1009|  6.68k|        matches!(self, Self::Name(_) | Self::Index(_))
 1010|  6.68k|    }
_RNvXsx_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_9SelectorsNtNtNtCshZc3FwCJ069_4core3ops5deref5Deref5deref:
 1077|  6.68k|    fn deref(&self) -> &Self::Target {
 1078|  6.68k|        &self.inner
 1079|  6.68k|    }
_RNvXsh_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_7LiteralINtNtCshZc3FwCJ069_4core7convert4FromNtNtB5_3num10JsonNumberE4from:
  589|    777|    fn from(value: num::JsonNumber) -> Self {
  590|    777|        Self::Number(value)
  591|    777|    }
_RNvXs9_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_5IndexINtNtCshZc3FwCJ069_4core7convert4FromNtNtB5_3num7JsonIntE4fromB5_:
  427|  7.77k|    fn from(value: N) -> Self {
  428|  7.77k|        let value = value.into();
  429|  7.77k|        if value.as_i64() >= 0 {
  430|  4.51k|            Self::FromStart(value.abs())
  431|       |        } else {
  432|  3.26k|            Self::FromEnd(value.abs().try_into().expect("checked for zero already"))
  433|       |        }
  434|  7.77k|    }
_RNvXsl_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_10ComparableINtNtCshZc3FwCJ069_4core7convert4FromNtB5_7LiteralE4from:
  739|  1.92k|    fn from(value: Literal) -> Self {
  740|  1.92k|        Self::Literal(value)
  741|  1.92k|    }
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntax1__NtB6_7SegmentNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrary0B6_:
  318|     85|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntax1__NtB6_7SegmentNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrarys_0B6_:
  318|  20.5k|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntax1__NtB6_7SegmentNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrarys0_0B6_:
  318|     85|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs_1__NtB6_8SelectorNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrary0B6_:
  355|    190|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs_1__NtB6_8SelectorNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrarys_0B6_:
  355|  29.9k|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs_1__NtB6_8SelectorNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrarys0_0B6_:
  355|    190|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs0_1__NtB6_5SliceNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrary0B6_:
  490|     18|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs0_1__NtB6_5SliceNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrarys_0B6_:
  490|  1.99k|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs0_1__NtB6_5SliceNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrarys0_0B6_:
  490|     18|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs1_1__NtB6_7LiteralNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrary0B6_:
  549|    387|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs1_1__NtB6_7LiteralNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrarys_0B6_:
  549|  4.17k|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs1_1__NtB6_7LiteralNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrarys0_0B6_:
  549|    387|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs2_1__NtB6_11LogicalExprNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrary0B6_:
  607|    600|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs2_1__NtB6_11LogicalExprNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrarys_0B6_:
  607|  38.7k|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs2_1__NtB6_11LogicalExprNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrarys0_0B6_:
  607|    300|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs3_1__NtB6_8TestExprNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrary0B6_:
  639|     69|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs3_1__NtB6_8TestExprNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrarys_0B6_:
  639|  18.3k|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs3_1__NtB6_8TestExprNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrarys0_0B6_:
  639|     69|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs4_1__NtB6_14ComparisonExprNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrary0B6_:
  667|     43|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs4_1__NtB6_14ComparisonExprNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrarys_0B6_:
  667|  5.18k|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs4_1__NtB6_14ComparisonExprNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrarys0_0B6_:
  667|     43|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs5_1__NtB6_12ComparisonOpNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrary0B6_:
  707|    275|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs5_1__NtB6_12ComparisonOpNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrarys_0B6_:
  707|  5.18k|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs5_1__NtB6_12ComparisonOpNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrarys0_0B6_:
  707|    275|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs6_1__NtB6_10ComparableNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrary0B6_:
  726|    344|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs6_1__NtB6_10ComparableNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrarys_0B6_:
  726|  10.3k|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs6_1__NtB6_10ComparableNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrarys0_0B6_:
  726|    344|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs7_1__NtB6_21SingularJsonPathQueryNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrary0B6_:
  753|     36|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs7_1__NtB6_21SingularJsonPathQueryNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrarys_0B6_:
  753|  6.19k|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs7_1__NtB6_21SingularJsonPathQueryNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrarys0_0B6_:
  753|     36|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs8_1__NtB6_15SingularSegmentNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrary0B6_:
  769|     57|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs8_1__NtB6_15SingularSegmentNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrarys_0B6_:
  769|  4.48k|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs8_1__NtB6_15SingularSegmentNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrarys0_0B6_:
  769|     57|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs9_1__NtB6_13JsonPathQueryNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrary0B6_:
  799|    125|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs9_1__NtB6_13JsonPathQueryNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrarys_0B6_:
  799|  19.1k|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs9_1__NtB6_13JsonPathQueryNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrarys0_0B6_:
  799|    125|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs9_1__NtB6_13JsonPathQueryNtCs3HmALEVcYcb_9arbitrary9Arbitrary19arbitrary_take_rests_0B6_:
  799|  1.61k|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvCsiZ6QsNdkp8Z_15rsonpath_syntaxs9_1__NtB6_13JsonPathQueryNtCs3HmALEVcYcb_9arbitrary9Arbitrary13try_size_hint0B6_:
  799|  1.31k|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNvXse_CsiZ6QsNdkp8Z_15rsonpath_syntaxNtB5_7LiteralINtNtCshZc3FwCJ069_4core7convert4FromNtNtB5_3str10JsonStringE4fromB5_:
  568|  2.01k|    fn from(value: S) -> Self {
  569|  2.01k|        Self::String(value.into())
  570|  2.01k|    }

_RNvMsb_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3numNtB5_10JsonNumber9normalizeCsaryQ4xZOwOZ_21query_fuzz_round_trip:
  593|  1.55k|    pub fn normalize(&self) -> Self {
  594|  1.55k|        match *self {
  595|    575|            Self::Int(x) => Self::Int(x),
  596|    979|            Self::Float(x) => match JsonInt::try_from(x) {
  597|     71|                Ok(int) => Self::Int(int),
  598|    908|                Err(_) => Self::Float(x),
  599|       |            },
  600|       |        }
  601|  1.55k|    }
_RNvXs2_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3numNtB5_10JsonNumberNtNtCshZc3FwCJ069_4core3cmp9PartialEq2eqCsaryQ4xZOwOZ_21query_fuzz_round_trip:
  199|    777|    fn eq(&self, other: &Self) -> bool {
  200|    777|        match (self.normalize(), other.normalize()) {
  201|    323|            (Self::Int(l0), Self::Int(r0)) => l0 == r0,
  202|    454|            (Self::Float(l0), Self::Float(r0)) => l0 == r0,
  203|      0|            _ => false,
  204|       |        }
  205|    777|    }
_RNvXsA_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3numNtB5_7JsonIntINtNtCshZc3FwCJ069_4core7convert7TryFromNtB5_9JsonFloatE8try_fromCsaryQ4xZOwOZ_21query_fuzz_round_trip:
  858|    979|    fn try_from(value: JsonFloat) -> Result<Self, Self::Error> {
  859|    979|        if value.0.fract() != 0.0 {
  860|    730|            return Err(JsonIntOverflowError::fractional(value.0));
  861|    249|        }
  862|    249|        // At this point the fractional part must be 0.0, so the value is *an* integer.
  863|    249|        // We need to check that it is within bounds of JsonInt. This is correct
  864|    249|        // only because JsonInt bounds are guaranteed to be interoperable with f64,
  865|    249|        // so every value within is exactly representable as a f64.
  866|    249|        let int_value = value.0.trunc();
  867|    249|        if int_value < JSON_INT_LOWER_LIMIT as f64 {
  868|     26|            return Err(JsonIntOverflowError::int_float_neg_overflow(value.0));
  869|    223|        }
  870|    223|        if int_value > JSON_INT_UPPER_LIMIT as f64 {
  871|    152|            return Err(JsonIntOverflowError::int_float_pos_overflow(value.0));
  872|     71|        }
  873|     71|
  874|     71|        // This conversion is now guaranteed to be lossless.
  875|     71|        Ok(Self(int_value as i64))
  876|    979|    }
_RNvXsH_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3numNtB5_7JsonIntNtNtCshZc3FwCJ069_4core3fmt7Display3fmtCsaryQ4xZOwOZ_21query_fuzz_round_trip:
 1027|    252|    fn fmt(&self, f: &mut Formatter<'_>) -> fmt::Result {
 1028|    252|        write!(f, "{}", self.0)
 1029|    252|    }
_RNvXsI_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3numNtB5_8JsonUIntNtNtCshZc3FwCJ069_4core3fmt7Display3fmtCsaryQ4xZOwOZ_21query_fuzz_round_trip:
 1034|  4.26k|    fn fmt(&self, f: &mut Formatter<'_>) -> fmt::Result {
 1035|  4.26k|        write!(f, "{}", self.0)
 1036|  4.26k|    }
_RNvXsJ_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3numNtB5_15JsonNonZeroUIntNtNtCshZc3FwCJ069_4core3fmt7Display3fmtCsaryQ4xZOwOZ_21query_fuzz_round_trip:
 1041|  3.50k|    fn fmt(&self, f: &mut Formatter<'_>) -> fmt::Result {
 1042|  3.50k|        write!(f, "{}", self.0)
 1043|  3.50k|    }
_RNvXsK_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3numNtB5_9JsonFloatNtNtCshZc3FwCJ069_4core3fmt7Display3fmtCsaryQ4xZOwOZ_21query_fuzz_round_trip:
 1048|    525|    fn fmt(&self, f: &mut Formatter<'_>) -> fmt::Result {
 1049|    525|        write!(f, "{}", self.0)
 1050|    525|    }
_RNvXsL_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3numNtB5_10JsonNumberNtNtCshZc3FwCJ069_4core3fmt7Display3fmtCsaryQ4xZOwOZ_21query_fuzz_round_trip:
 1055|    777|    fn fmt(&self, f: &mut Formatter<'_>) -> fmt::Result {
 1056|    777|        match self {
 1057|    252|            Self::Int(int) => int.fmt(f),
 1058|    525|            Self::Float(flt) => flt.fmt(f),
 1059|       |        }
 1060|    777|    }
_RNvMs7_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3numNtB5_7JsonInt3abs:
  367|  13.2k|    pub const fn abs(&self) -> JsonUInt {
  368|  13.2k|        JsonUInt(self.0.unsigned_abs())
  369|  13.2k|    }
_RNvMs7_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3numNtB5_7JsonInt3new:
  291|  17.7k|    const fn new(index: i64) -> Self {
  292|  17.7k|        Self(index)
  293|  17.7k|    }
_RNvMs8_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3numNtB5_8JsonUInt3new:
  405|  7.67k|    const fn new(index: u64) -> Self {
  406|  7.67k|        Self(index)
  407|  7.67k|    }
_RNvMsb_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3numNtB5_10JsonNumber9normalizeB7_:
  593|    777|    pub fn normalize(&self) -> Self {
  594|    777|        match *self {
  595|      0|            Self::Int(x) => Self::Int(x),
  596|    777|            Self::Float(x) => match JsonInt::try_from(x) {
  597|    323|                Ok(int) => Self::Int(int),
  598|    454|                Err(_) => Self::Float(x),
  599|       |            },
  600|       |        }
  601|    777|    }
_RNvXsc_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3numNtB5_7JsonIntINtNtCshZc3FwCJ069_4core7convert7TryFromxE8try_fromB7_:
  608|  7.68k|    fn try_from(value: i64) -> Result<Self, Self::Error> {
  609|  7.68k|        if value > JSON_INT_UPPER_LIMIT {
  610|      0|            Err(JsonIntOverflowError::int_pos_overflow(value))
  611|  7.68k|        } else if value < JSON_INT_LOWER_LIMIT {
  612|      0|            Err(JsonIntOverflowError::int_neg_overflow(value))
  613|       |        } else {
  614|  7.68k|            Ok(Self::new(value))
  615|       |        }
  616|  7.68k|    }
_RNvXsi_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3numNtB5_7JsonIntNtNtNtCshZc3FwCJ069_4core3str6traits7FromStr8from_strB7_:
  667|  7.68k|    fn from_str(s: &str) -> Result<Self, Self::Err> {
  668|  7.68k|        match i64::from_str(s) {
  669|  7.68k|            Ok(x) => x.try_into().map_err(|e| Self::Err::parse_conversion_err(s, &e)),
  670|      0|            Err(err) => Err(Self::Err::int_parse_error(s, err.kind())),
  671|       |        }
  672|  7.68k|    }
_RNvXsl_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3numNtB5_8JsonUIntINtNtCshZc3FwCJ069_4core7convert4FrommE4fromB7_:
  704|  3.43k|    fn from(value: u32) -> Self {
  705|  3.43k|        Self::new(u64::from(value))
  706|  3.43k|    }
_RNvXsp_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3numNtB5_8JsonUIntINtNtCshZc3FwCJ069_4core7convert7TryFromNtB5_7JsonIntE8try_fromB7_:
  741|  7.68k|    fn try_from(value: JsonInt) -> Result<Self, Self::Error> {
  742|  7.68k|        if value.0 < 0 {
  743|  3.43k|            Err(JsonIntOverflowError::negative_uint(value.0))
  744|       |        } else {
  745|  4.24k|            Ok(Self::new(value.0 as u64))
  746|       |        }
  747|  7.68k|    }
_RNvXsu_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3numNtB5_15JsonNonZeroUIntINtNtCshZc3FwCJ069_4core7convert7TryFromlE8try_fromB7_:
  792|    826|    fn try_from(value: i32) -> Result<Self, Self::Error> {
  793|    826|        Self::try_from(i64::from(value))
  794|    826|    }
_RNvXsv_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3numNtB5_15JsonNonZeroUIntINtNtCshZc3FwCJ069_4core7convert7TryFromyE8try_fromB7_:
  801|  8.36k|    fn try_from(value: u64) -> Result<Self, Self::Error> {
  802|  8.36k|        if value > JSON_UINT_UPPER_LIMIT {
  803|      0|            Err(JsonIntOverflowError::uint_pos_overflow(value))
  804|  8.36k|        } else if let Some(x) = NonZeroU64::new(value) {
  805|  8.36k|            Ok(Self(x))
  806|       |        } else {
  807|      0|            Err(JsonIntOverflowError::zero_non_zero_uint())
  808|       |        }
  809|  8.36k|    }
_RNvXsw_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3numNtB5_15JsonNonZeroUIntINtNtCshZc3FwCJ069_4core7convert7TryFromxE8try_fromB7_:
  816|    826|    fn try_from(value: i64) -> Result<Self, Self::Error> {
  817|    826|        if value < 0 {
  818|      0|            Err(JsonIntOverflowError::negative_uint(value))
  819|       |        } else {
  820|    826|            Self::try_from(value as u64)
  821|       |        }
  822|    826|    }
_RNvXsx_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3numNtB5_15JsonNonZeroUIntINtNtCshZc3FwCJ069_4core7convert7TryFromNtB5_8JsonUIntE8try_fromB7_:
  829|  7.54k|    fn try_from(value: JsonUInt) -> Result<Self, Self::Error> {
  830|  7.54k|        Self::try_from(value.0)
  831|  7.54k|    }
_RNvXsA_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3numNtB5_7JsonIntINtNtCshZc3FwCJ069_4core7convert7TryFromNtB5_9JsonFloatE8try_fromB7_:
  858|    777|    fn try_from(value: JsonFloat) -> Result<Self, Self::Error> {
  859|    777|        if value.0.fract() != 0.0 {
  860|    365|            return Err(JsonIntOverflowError::fractional(value.0));
  861|    412|        }
  862|    412|        // At this point the fractional part must be 0.0, so the value is *an* integer.
  863|    412|        // We need to check that it is within bounds of JsonInt. This is correct
  864|    412|        // only because JsonInt bounds are guaranteed to be interoperable with f64,
  865|    412|        // so every value within is exactly representable as a f64.
  866|    412|        let int_value = value.0.trunc();
  867|    412|        if int_value < JSON_INT_LOWER_LIMIT as f64 {
  868|     13|            return Err(JsonIntOverflowError::int_float_neg_overflow(value.0));
  869|    399|        }
  870|    399|        if int_value > JSON_INT_UPPER_LIMIT as f64 {
  871|     76|            return Err(JsonIntOverflowError::int_float_pos_overflow(value.0));
  872|    323|        }
  873|    323|
  874|    323|        // This conversion is now guaranteed to be lossless.
  875|    323|        Ok(Self(int_value as i64))
  876|    777|    }
_RNvXsE_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3numNtB5_9JsonFloatNtNtNtCshZc3FwCJ069_4core3str6traits7FromStr8from_strB7_:
  968|    777|    fn from_str(s: &str) -> Result<Self, Self::Err> {
  969|    777|        match f64::from_str(s) {
  970|    777|            Ok(x) => {
  971|    777|                assert!(!s.is_empty()); // Empty strings are not accepted by f64::from_str.
  972|       |                                        // Rule 1.
  973|    777|                if x.is_nan() || x.is_infinite() {
  974|      0|                    return Err(Self::Err::infinite_or_nan(s));
  975|    777|                }
  976|    777|                if let Some((before, after)) = s.split_once('.') {
  977|       |                    // Rule 3. The case `before == "+"` is checked later.
  978|    365|                    if before.is_empty() || before == "-" {
  979|      0|                        return Err(Self::Err::nothing_before_decimal_point(s));
  980|    365|                    }
  981|    365|                    // Rule 4.
  982|    365|                    if after.is_empty() || after.starts_with(['e', 'E']) {
  983|      0|                        return Err(Self::Err::nothing_after_decimal_point(s));
  984|    365|                    }
  985|    412|                }
  986|    777|                let mut chars = s.chars();
  987|    777|                let first_c = chars.next().expect("s is non-empty");
  988|    777|                // Rule 2.
  989|    777|                if first_c == '+' {
  990|      0|                    return Err(Self::Err::leading_plus_sign(s));
  991|    777|                }
  992|       |                // Skip the leading minus if it exists.
  993|    777|                let s_no_sign = if first_c == '-' { chars.as_str() } else { s };
  994|       |                // Rule 5.
  995|       |                // Check for leading zeroes. We strip the first zero from the front and check what's left.
  996|       |                // The only acceptable case is that the next character is not a digit.
  997|    777|                if let Some(rest) = s_no_sign.strip_prefix('0') {
  998|    370|                    if matches!(rest.chars().next(), Some('0'..='9')) {
  999|      0|                        return Err(Self::Err::leading_zeros(s));
 1000|    370|                    }
 1001|    407|                }
 1002|    777|                Ok(Self(x))
 1003|       |            }
 1004|       |            // Remember that all floats valid in JSON are also accepted by Rust,
 1005|       |            // so this is *definitely* not a valid JSON float.
 1006|      0|            Err(_) => Err(Self::Err::f64_parse_error(s)),
 1007|       |        }
 1008|    777|    }
_RNvXsG_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3numNtB5_10JsonNumberINtNtCshZc3FwCJ069_4core7convert4FromNtB5_9JsonFloatE4fromB7_:
 1020|    777|    fn from(value: JsonFloat) -> Self {
 1021|    777|        Self::Float(value)
 1022|    777|    }
_RNvXsM_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3numNtB5_7JsonIntNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitraryB7_:
 1067|  10.0k|    fn arbitrary(u: &mut arbitrary::Unstructured<'a>) -> arbitrary::Result<Self> {
 1068|  10.0k|        let val = u.int_in_range(JSON_INT_LOWER_LIMIT..=JSON_INT_UPPER_LIMIT)?;
 1069|       |
 1070|  10.0k|        Ok(Self::new(val))
 1071|  10.0k|    }
_RNvXsP_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3numNtB5_9JsonFloatNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitraryB7_:
 1100|    562|    fn arbitrary(u: &mut arbitrary::Unstructured<'a>) -> arbitrary::Result<Self> {
 1101|    562|        let val = u.arbitrary::<f64>()?;
 1102|       |        // Wrap NaN, +Inf, -Inf into zero.
 1103|    562|        let val = if val.is_nan() {
 1104|     72|            0.0
 1105|    490|        } else if val.is_infinite() {
 1106|      0|            (0.0_f64).copysign(val)
 1107|       |        } else {
 1108|    490|            val
 1109|       |        };
 1110|       |
 1111|    562|        Ok(Self(val))
 1112|    562|    }
_RNvMs7_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3numNtB5_7JsonInt6as_i64:
  335|  9.77k|    pub const fn as_i64(&self) -> i64 {
  336|  9.77k|        self.0
  337|  9.77k|    }
_RNCNvXNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax3num1__NtB6_10JsonNumberNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrary0B8_:
  188|      7|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax3num1__NtB6_10JsonNumberNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrarys_0B8_:
  188|    822|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]
_RNCNvXNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax3num1__NtB6_10JsonNumberNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitrarys0_0B8_:
  188|      7|#[cfg_attr(feature = "arbitrary", derive(arbitrary::Arbitrary))]

_RNvMNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax3num5errorNtB2_20JsonIntOverflowError13negative_uint:
   63|  3.43k|    pub(crate) fn negative_uint(src: i64) -> Self {
   64|  3.43k|        Self {
   65|  3.43k|            kind: JsonIntOverflowKind::UIntNeg(src),
   66|  3.43k|        }
   67|  3.43k|    }
_RNvMNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax3num5errorNtB2_20JsonIntOverflowError10fractional:
   75|  1.09k|    pub(crate) fn fractional(src: f64) -> Self {
   76|  1.09k|        Self {
   77|  1.09k|            kind: JsonIntOverflowKind::Fractional(src),
   78|  1.09k|        }
   79|  1.09k|    }
_RNvMNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax3num5errorNtB2_20JsonIntOverflowError22int_float_pos_overflow:
   81|    228|    pub(crate) fn int_float_pos_overflow(src: f64) -> Self {
   82|    228|        Self {
   83|    228|            kind: JsonIntOverflowKind::FloatPos(src),
   84|    228|        }
   85|    228|    }
_RNvMNtNtCsiZ6QsNdkp8Z_15rsonpath_syntax3num5errorNtB2_20JsonIntOverflowError22int_float_neg_overflow:
   87|     39|    pub(crate) fn int_float_neg_overflow(src: f64) -> Self {
   88|     39|        Self {
   89|     39|            kind: JsonIntOverflowKind::FloatNeg(src),
   90|     39|        }
   91|     39|    }

_RNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser15skip_whitespace:
   13|   442k|fn skip_whitespace(q: &str) -> &str {
   14|   442k|    q.trim_start_matches(WHITESPACE)
   15|   442k|}
_RNvMNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parserNtB2_8ParseCtx3new:
   44|  1.01k|    fn new(options: &'a ParserOptions) -> Self {
   45|  1.01k|        Self {
   46|  1.01k|            options,
   47|  1.01k|            current_nesting: 0,
   48|  1.01k|        }
   49|  1.01k|    }
_RNvMNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parserNtB2_8ParseCtx16increase_nesting:
   51|  25.4k|    fn increase_nesting(&self) -> Option<Self> {
   52|  25.4k|        match self.options.recursion_limit {
   53|  25.4k|            Some(limit) if limit <= self.current_nesting => None,
   54|  25.4k|            _ => Some(Self {
   55|  25.4k|                options: self.options,
   56|  25.4k|                current_nesting: self.current_nesting + 1,
   57|  25.4k|            }),
   58|       |        }
   59|  25.4k|    }
_RNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser18parse_with_options:
   62|  1.01k|pub(crate) fn parse_with_options(q: &str, options: &ParserOptions) -> Result<JsonPathQuery> {
   63|  1.01k|    parse_json_path_query(q, ParseCtx::new(options))
   64|  1.01k|}
_RNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser21parse_json_path_query:
   66|  1.01k|fn parse_json_path_query(q: &str, ctx: ParseCtx) -> Result<JsonPathQuery> {
   67|  1.01k|    let original_input = q;
   68|  1.01k|    let mut parse_error = ParseErrorBuilder::new();
   69|  1.01k|    let mut segments = vec![];
   70|  1.01k|    let q = skip_whitespace(q);
   71|  1.01k|    let leading_whitespace_len = original_input.len() - q.len();
   72|  1.01k|    if leading_whitespace_len > 0 && !ctx.options.is_leading_whitespace_allowed() {
   73|      0|        parse_error.add(SyntaxError::new(
   74|      0|            SyntaxErrorKind::DisallowedLeadingWhitespace,
   75|      0|            original_input.len(),
   76|      0|            leading_whitespace_len,
   77|      0|        ));
   78|  1.01k|    }
   79|  1.01k|    let q = match char::<_, nom::error::Error<_>>('$')(q).finish() {
   80|  1.01k|        Ok((q, _)) => skip_whitespace(q),
   81|      0|        Err(e) => {
   82|      0|            parse_error.add(SyntaxError::new(
   83|      0|                SyntaxErrorKind::MissingRootIdentifier,
   84|      0|                e.input.len(),
   85|      0|                q.chars().next().map_or(1, char::len_utf8),
   86|      0|            ));
   87|      0|            e.input
   88|       |        }
   89|       |    };
   90|       |
   91|  1.01k|    let mut q = q;
   92|  2.88k|    while !q.is_empty() {
   93|  1.90k|        q = match segment(q, ctx).finish() {
   94|  1.87k|            Ok((rest, segment)) => {
   95|  1.87k|                segments.push(segment);
   96|  1.87k|                rest
   97|       |            }
   98|      0|            Err(InternalParseError::SyntaxError(err, rest)) => {
   99|      0|                parse_error.add(err);
  100|      0|                rest
  101|       |            }
  102|      0|            Err(InternalParseError::SyntaxErrors(errs, rest)) => {
  103|      0|                parse_error.add_many(errs);
  104|      0|                rest
  105|       |            }
  106|       |            Err(InternalParseError::RecursionLimitExceeded) => {
  107|     39|                return Err(ParseErrorBuilder::recursion_limit_exceeded(
  108|     39|                    original_input.to_owned(),
  109|     39|                    ctx.options
  110|     39|                        .recursion_limit
  111|     39|                        .expect("recursion limit should exists when exceeded"),
  112|     39|                ));
  113|       |            }
  114|      0|            Err(InternalParseError::NomError(err)) => panic!(
  115|      0|                "unexpected parser error; raw nom errors should never be produced; this is a bug\ncontext:\n{err}"
  116|      0|            ),
  117|       |        };
  118|  1.87k|        q = skip_whitespace(q);
  119|       |    }
  120|       |
  121|       |    // For strict RFC compliance trailing whitespace has to be disallowed.
  122|       |    // This is hard to organically obtain from the parsing above, so we insert this awkward direct check if needed.
  123|    975|    if !ctx.options.is_trailing_whitespace_allowed() {
  124|    975|        let trimmed = original_input.trim_end_matches(WHITESPACE);
  125|    975|        let trailing_whitespace_len = original_input.len() - trimmed.len();
  126|    975|        if trailing_whitespace_len > 0 {
  127|      0|            parse_error.add(SyntaxError::new(
  128|      0|                SyntaxErrorKind::DisallowedTrailingWhitespace,
  129|      0|                trailing_whitespace_len,
  130|      0|                trailing_whitespace_len,
  131|      0|            ));
  132|    975|        }
  133|      0|    }
  134|       |
  135|    975|    if parse_error.is_empty() {
  136|    975|        Ok(JsonPathQuery { segments })
  137|       |    } else {
  138|      0|        Err(parse_error.build(original_input.to_owned()))
  139|       |    }
  140|  1.01k|}
_RNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser7segment:
  142|  1.90k|fn segment<'q>(q: &'q str, ctx: ParseCtx) -> IResult<&'q str, Segment, InternalParseError<'q>> {
  143|  1.90k|    // It's important to check descendant first, since we can always cut based on whether the prefix is ".." or not.
  144|  1.90k|    alt((
  145|  1.90k|        |q| descendant_segment(q, ctx),
  146|  1.90k|        |q| child_segment(q, ctx),
  147|  1.90k|        failed_segment(SyntaxErrorKind::InvalidSegmentStart),
  148|  1.90k|    ))
  149|  1.90k|    .parse(q)
  150|  1.90k|}
_RNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser18descendant_segment:
  152|  19.8k|fn descendant_segment<'q>(q: &'q str, ctx: ParseCtx) -> IResult<&'q str, Segment, InternalParseError<'q>> {
  153|  19.8k|    map(
  154|  19.8k|        preceded(
  155|  19.8k|            tag(".."),
  156|  19.8k|            cut(alt((
  157|  19.8k|                |q| bracketed_selection(q, ctx),
  158|  19.8k|                map(wildcard_selector, Selectors::one),
  159|  19.8k|                member_name_shorthand,
  160|  19.8k|                failed_segment(SyntaxErrorKind::InvalidSegmentAfterTwoPeriods),
  161|  19.8k|            ))),
  162|  19.8k|        ),
  163|  19.8k|        Segment::Descendant,
  164|  19.8k|    )
  165|  19.8k|    .parse(q)
  166|  19.8k|}
_RNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser13child_segment:
  168|  6.16k|fn child_segment<'q>(q: &'q str, ctx: ParseCtx) -> IResult<&'q str, Segment, InternalParseError<'q>> {
  169|  6.16k|    map(
  170|  6.16k|        alt((
  171|  6.16k|            |q| bracketed_selection(q, ctx),
  172|  6.16k|            // This cut is only correct because we try parsing descendant_segment first.
  173|  6.16k|            preceded(
  174|  6.16k|                char('.'),
  175|  6.16k|                cut(alt((
  176|  6.16k|                    map(wildcard_selector, Selectors::one),
  177|  6.16k|                    member_name_shorthand,
  178|  6.16k|                    failed_segment(SyntaxErrorKind::InvalidNameShorthandAfterOnePeriod),
  179|  6.16k|                ))),
  180|  6.16k|            ),
  181|  6.16k|        )),
  182|  6.16k|        Segment::Child,
  183|  6.16k|    )
  184|  6.16k|    .parse(q)
  185|  6.16k|}
_RNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser19bracketed_selection:
  196|  19.8k|fn bracketed_selection<'q>(q: &'q str, ctx: ParseCtx) -> IResult<&'q str, Selectors, InternalParseError<'q>> {
  197|  19.8k|    let (mut q, _) = char('[')(q)?;
  198|  19.8k|    let mut selectors = vec![];
  199|  19.8k|    let mut syntax_errors = vec![];
  200|       |
  201|       |    loop {
  202|  27.5k|        match selector(q, ctx).finish() {
  203|  26.1k|            Ok((rest, selector)) => {
  204|  26.1k|                selectors.push(selector);
  205|  26.1k|                q = rest;
  206|  26.1k|            }
  207|      0|            Err(InternalParseError::SyntaxError(err, rest)) => {
  208|      0|                syntax_errors.push(err);
  209|      0|                q = rest;
  210|      0|            }
  211|      0|            Err(InternalParseError::SyntaxErrors(mut errs, rest)) => {
  212|      0|                syntax_errors.append(&mut errs);
  213|      0|                q = rest;
  214|      0|            }
  215|  1.37k|            Err(err) => return Err(Err::Failure(err)),
  216|       |        }
  217|  26.1k|        q = skip_whitespace(q);
  218|  26.1k|
  219|  26.1k|        match char::<_, nom::error::Error<_>>(',')(q) {
  220|  7.67k|            Ok((rest, _)) => q = rest,
  221|       |            Err(_) => {
  222|  18.4k|                if let Ok((rest, _)) = char::<_, nom::error::Error<_>>(']')(q) {
  223|  18.4k|                    q = rest;
  224|  18.4k|                    break;
  225|      0|                } else if q.is_empty() {
  226|      0|                    syntax_errors.push(SyntaxError::new(SyntaxErrorKind::MissingClosingBracket, 0, 1));
  227|      0|                    break;
  228|       |                } else {
  229|      0|                    syntax_errors.push(SyntaxError::new(SyntaxErrorKind::MissingSelectorSeparator, q.len(), 1))
  230|       |                }
  231|       |            }
  232|       |        }
  233|       |    }
  234|       |
  235|  18.4k|    if syntax_errors.is_empty() {
  236|  18.4k|        Ok((q, Selectors::many(selectors)))
  237|       |    } else {
  238|      0|        Err(Err::Failure(InternalParseError::SyntaxErrors(syntax_errors, q)))
  239|       |    }
  240|  19.8k|}
_RNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser8selector:
  266|  27.5k|fn selector<'q>(q: &'q str, ctx: ParseCtx) -> IResult<&'q str, Selector, InternalParseError<'q>> {
  267|  27.5k|    alt((
  268|  27.5k|        ignore_whitespace(name_selector),
  269|  27.5k|        ignore_whitespace(wildcard_selector),
  270|  27.5k|        ignore_whitespace(slice_selector),
  271|  27.5k|        ignore_whitespace(index_selector),
  272|  27.5k|        ignore_whitespace(|q| filter_selector(q, ctx)),
  273|  27.5k|        failed_selector,
  274|  27.5k|    ))
  275|  27.5k|    .parse(q)
  276|  27.5k|}
_RNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser13name_selector:
  284|  27.5k|fn name_selector(q: &str) -> IResult<&str, Selector, InternalParseError<'_>> {
  285|  27.5k|    map(string_literal, Selector::Name).parse(q)
  286|  27.5k|}
_RNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser14string_literal:
  288|  49.9k|fn string_literal(q: &str) -> IResult<&str, JsonString, InternalParseError<'_>> {
  289|  49.9k|    alt((
  290|  49.9k|        preceded(char('\''), string(StringParseMode::SingleQuoted)),
  291|  49.9k|        preceded(char('"'), string(StringParseMode::DoubleQuoted)),
  292|  49.9k|    ))
  293|  49.9k|    .parse(q)
  294|  49.9k|}
_RNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17wildcard_selector:
  296|  20.8k|fn wildcard_selector(q: &str) -> IResult<&str, Selector, InternalParseError<'_>> {
  297|  20.8k|    map(tag("*"), |_| Selector::Wildcard).parse(q)
  298|  20.8k|}
_RNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser14slice_selector:
  300|  19.0k|fn slice_selector(q: &str) -> IResult<&str, Selector, InternalParseError<'_>> {
  301|  19.0k|    let (rest, opt_start) = terminated(opt(int), ignore_whitespace(char(':'))).parse(q)?;
  302|       |    // We have parsed a ':', so this *must* be a slice selector. Any errors after here are fatal.
  303|  1.71k|    let mut slice = crate::Slice::default();
  304|       |
  305|  1.71k|    if let Some(start_str) = opt_start {
  306|  1.57k|        match parse_directional_int(start_str) {
  307|    897|            DirectionalInt::Plus(int) => slice.start = Index::FromStart(int),
  308|    675|            DirectionalInt::Minus(int) => slice.start = Index::FromEnd(int),
  309|      0|            DirectionalInt::Error(err) => {
  310|      0|                return fail(
  311|      0|                    SyntaxErrorKind::SliceStartParseError(err),
  312|      0|                    q.len(),
  313|      0|                    start_str.len(),
  314|      0|                    rest,
  315|      0|                );
  316|       |            }
  317|       |        };
  318|    143|    }
  319|  1.71k|    let q = rest;
  320|  1.71k|    let (rest, opt_end) = opt(ignore_whitespace(int)).parse(q)?;
  321|       |
  322|  1.71k|    if let Some(end_str) = opt_end {
  323|  1.32k|        match parse_directional_int(end_str) {
  324|    696|            DirectionalInt::Plus(int) => slice.end = Some(Index::FromStart(int)),
  325|    630|            DirectionalInt::Minus(int) => slice.end = Some(Index::FromEnd(int)),
  326|      0|            DirectionalInt::Error(err) => {
  327|      0|                return fail(SyntaxErrorKind::SliceEndParseError(err), q.len(), end_str.len(), rest);
  328|       |            }
  329|       |        };
  330|    389|    }
  331|       |
  332|  1.71k|    let q = rest;
  333|  1.71k|    let (rest, opt_step) = opt(ignore_whitespace(preceded(char(':'), opt(ignore_whitespace(int))))).parse(q)?;
  334|       |
  335|  1.61k|    if let Some(Some(step_str)) = opt_step {
  336|  1.61k|        match parse_directional_int(step_str) {
  337|    863|            DirectionalInt::Plus(int) => slice.step = Step::Forward(int),
  338|    756|            DirectionalInt::Minus(int) => slice.step = Step::Backward(int),
  339|      0|            DirectionalInt::Error(err) => {
  340|      0|                return fail(SyntaxErrorKind::SliceStepParseError(err), q.len(), step_str.len(), rest);
  341|       |            }
  342|       |        };
  343|     96|    }
  344|       |
  345|       |    // Fixup the bounds - if start was not given and step is negative, the default must be reversed.
  346|  1.71k|    if slice.step.is_backward() && opt_start.is_none() {
  347|     68|        slice.start = crate::Slice::default_start_backwards();
  348|  1.64k|    }
  349|       |
  350|  1.71k|    Ok((rest, Selector::Slice(slice)))
  351|  19.0k|}
_RNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser14index_selector:
  353|  17.3k|fn index_selector(q: &str) -> IResult<&str, Selector, InternalParseError<'_>> {
  354|       |    // This has to be called after the slice selector.
  355|       |    // Thanks to that we can make a hard cut if we parsed an integer but it doesn't work as an index.
  356|  17.3k|    let (rest, int) = int(q)?;
  357|  3.16k|    match parse_directional_int(int) {
  358|  1.79k|        DirectionalInt::Plus(int) => Ok((rest, Selector::Index(Index::FromStart(int)))),
  359|  1.37k|        DirectionalInt::Minus(int) => Ok((rest, Selector::Index(Index::FromEnd(int)))),
  360|      0|        DirectionalInt::Error(err) => Err(Err::Failure(InternalParseError::SyntaxError(
  361|      0|            SyntaxError::new(SyntaxErrorKind::IndexParseError(err), q.len(), int.len()),
  362|      0|            rest,
  363|      0|        ))),
  364|       |    }
  365|  17.3k|}
_RNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser15filter_selector:
  390|  14.1k|fn filter_selector<'q>(q: &'q str, ctx: ParseCtx) -> IResult<&'q str, Selector, InternalParseError<'q>> {
  391|  14.1k|    into(preceded(char('?'), ignore_whitespace(|q| logical_expr(q, ctx)))).parse(q)
  392|  14.1k|}
_RNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_expr:
  394|  25.4k|fn logical_expr<'q>(q: &'q str, ctx: ParseCtx) -> IResult<&'q str, LogicalExpr, InternalParseError<'q>> {
  395|       |    // This is the most involved part of the parser, as it is inherently recursive.
  396|       |    //
  397|       |    // There are two sources of recursion here: parentheses introduce recursion,
  398|       |    // since the rule is simply '(' filter_expression ')'; and the boolean combinations
  399|       |    // require checking for an operator, and if any is present recursively parsing
  400|       |    // another filter and wrapping the result in an appropriate node type.
  401|       |    //
  402|       |    // In total, we handle the negation operator at the start and then apply the rules:
  403|       |    // - '(' |=> filter_expression, ')'
  404|       |    // - literal |=> comp_op, comparable
  405|       |    // - query, comp_op |=> comparable
  406|       |    // - query
  407|       |    // where |=> means a cut. We separately apply two additional restrictions:
  408|       |    // - negation cannot immediately precede a comparison,
  409|       |    // - query in a comparison must be singular.
  410|       |    // It would be possible to directly disallow them by the rules, but if the parser understands
  411|       |    // these two special cases it can give much clearer error messages about them.
  412|       |    //
  413|       |    // At the end, we check for `&&` and `||``, recurse and wrap if needed; if not, we end parsing
  414|       |    // and leave the rest to the parsers higher up the stack. They might accept the next
  415|       |    // character (e.g. it's `)` called from a recursive filter call, `,` chaining selectors,
  416|       |    // `]` ending a segment...) and are responsible for error handling otherwise.
  417|       |    #[derive(Debug, Clone, Copy)]
  418|       |    enum BooleanOp {
  419|       |        And,
  420|       |        Or,
  421|       |    }
  422|       |
  423|  25.4k|    let Some(ctx) = ctx.increase_nesting() else {
  424|     39|        return Err(Err::Failure(InternalParseError::RecursionLimitExceeded));
  425|       |    };
  426|       |
  427|  25.4k|    let (rest, this_expr) = ignore_whitespace(|q| parse_single(q, ctx))(q)?;
  428|  20.5k|    let mut loop_rest = skip_whitespace(rest);
  429|  20.5k|    let mut final_expr = this_expr;
  430|       |
  431|       |    loop {
  432|  25.2k|        let (rest, mb_boolean_op) = opt(ignore_whitespace(alt((
  433|  25.2k|            value(BooleanOp::And, tag("&&")),
  434|  25.2k|            value(BooleanOp::Or, tag("||")),
  435|  25.2k|        ))))
  436|  25.2k|        .parse(loop_rest)?;
  437|  25.2k|        loop_rest = rest;
  438|       |
  439|  4.79k|        match mb_boolean_op {
  440|       |            Some(BooleanOp::And) => {
  441|  1.33k|                let (rest, rhs_expr) = ignore_whitespace(|q| parse_single(q, ctx))(loop_rest)?;
  442|  1.29k|                loop_rest = rest;
  443|  1.29k|                final_expr = LogicalExpr::And(Box::new(final_expr), Box::new(rhs_expr));
  444|       |            }
  445|       |            Some(BooleanOp::Or) => {
  446|  3.46k|                let (rest, rhs_expr) = ignore_whitespace(|q| logical_expr(q, ctx))(loop_rest)?;
  447|  3.33k|                loop_rest = rest;
  448|  3.33k|                final_expr = LogicalExpr::Or(Box::new(final_expr), Box::new(rhs_expr));
  449|       |            }
  450|  20.4k|            None => break,
  451|  20.4k|        }
  452|  20.4k|    }
  453|  20.4k|
  454|  20.4k|    return Ok((loop_rest, final_expr));
  455|       |
  456|       |    fn parse_single<'q>(q: &'q str, ctx: ParseCtx) -> IResult<&'q str, LogicalExpr, InternalParseError<'q>> {
  457|       |        let (rest, opt_neg) = ignore_whitespace(opt(char('!')))(q)?;
  458|       |        let negated = opt_neg.is_some();
  459|       |        if let Ok((rest, _)) = char::<_, ()>('(')(rest) {
  460|       |            let (rest, nested_filter) = cut(|q| logical_expr(q, ctx)).parse(skip_whitespace(rest))?;
  461|       |            let rest = skip_whitespace(rest);
  462|       |            let Ok((rest, _)) = char::<_, ()>(')')(rest) else {
  463|       |                return failed_filter_expression(SyntaxErrorKind::MissingClosingParenthesis)(rest);
  464|       |            };
  465|       |            let selector = if negated {
  466|       |                LogicalExpr::Not(Box::new(nested_filter))
  467|       |            } else {
  468|       |                nested_filter
  469|       |            };
  470|       |            return Ok((rest, selector));
  471|       |        }
  472|       |
  473|       |        match literal(rest) {
  474|       |            Ok((rest, lhs)) => {
  475|       |                let rest = skip_whitespace(rest);
  476|       |                let (rest, comp_op) = match comparison_operator(rest) {
  477|       |                    Ok((rest, comp_op)) => (rest, comp_op),
  478|       |                    Err(Err::Failure(err)) => return Err(Err::Failure(err)),
  479|       |                    _ => {
  480|       |                        if peek(char::<_, ()>(']')).parse(rest).is_ok() {
  481|       |                            return fail(SyntaxErrorKind::MissingComparisonOperator, rest.len(), 1, rest);
  482|       |                        } else {
  483|       |                            return failed_filter_expression(SyntaxErrorKind::InvalidComparisonOperator)(rest);
  484|       |                        };
  485|       |                    }
  486|       |                };
  487|       |                let rest = skip_whitespace(rest);
  488|       |                let (rest, rhs) = match comparable(rest, ctx) {
  489|       |                    Ok((rest, rhs)) => (rest, rhs),
  490|       |                    Err(Err::Failure(err)) => return Err(Err::Failure(err)),
  491|       |                    _ => {
  492|       |                        if peek(char::<_, ()>(']')).parse(rest).is_ok() {
  493|       |                            return fail(SyntaxErrorKind::InvalidComparable, rest.len(), 1, rest);
  494|       |                        } else {
  495|       |                            return failed_filter_expression(SyntaxErrorKind::InvalidComparable)(rest);
  496|       |                        };
  497|       |                    }
  498|       |                };
  499|       |                if negated {
  500|       |                    return fail(SyntaxErrorKind::InvalidNegation, q.len(), 1, rest);
  501|       |                } else {
  502|       |                    return Ok((
  503|       |                        rest,
  504|       |                        LogicalExpr::Comparison(ComparisonExpr {
  505|       |                            lhs: Comparable::Literal(lhs),
  506|       |                            op: comp_op,
  507|       |                            rhs,
  508|       |                        }),
  509|       |                    ));
  510|       |                }
  511|       |            }
  512|       |            Err(Err::Failure(err)) => return Err(Err::Failure(err)),
  513|       |            _ => (),
  514|       |        };
  515|       |
  516|       |        match filter_query(rest, ctx) {
  517|       |            Ok((rest, query)) => {
  518|       |                let query_len = q.len() - rest.len();
  519|       |                let rest = skip_whitespace(rest);
  520|       |                if let Ok((rest, comp_op)) = comparison_operator(rest) {
  521|       |                    let rest = skip_whitespace(rest);
  522|       |                    let Ok((rest, rhs)) = comparable(rest, ctx) else {
  523|       |                        return failed_filter_expression(SyntaxErrorKind::InvalidComparable)(rest);
  524|       |                    };
  525|       |                    let Some(singular_query) = query.try_to_comparable() else {
  526|       |                        return fail(SyntaxErrorKind::NonSingularQueryInComparison, q.len(), query_len, rest);
  527|       |                    };
  528|       |                    if negated {
  529|       |                        fail(SyntaxErrorKind::InvalidNegation, q.len(), 1, rest)
  530|       |                    } else {
  531|       |                        Ok((
  532|       |                            rest,
  533|       |                            LogicalExpr::Comparison(ComparisonExpr {
  534|       |                                lhs: singular_query,
  535|       |                                rhs,
  536|       |                                op: comp_op,
  537|       |                            }),
  538|       |                        ))
  539|       |                    }
  540|       |                } else {
  541|       |                    let test_expr = LogicalExpr::Test(query.into_test_query());
  542|       |                    let expr = if negated {
  543|       |                        LogicalExpr::Not(Box::new(test_expr))
  544|       |                    } else {
  545|       |                        test_expr
  546|       |                    };
  547|       |                    Ok((rest, expr))
  548|       |                }
  549|       |            }
  550|       |            Err(Err::Failure(err)) => Err(Err::Failure(err)),
  551|       |            _ => failed_filter_expression(SyntaxErrorKind::InvalidFilter)(rest),
  552|       |        }
  553|       |    }
  554|  25.4k|}
_RNvNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_expr12parse_single:
  456|  26.7k|    fn parse_single<'q>(q: &'q str, ctx: ParseCtx) -> IResult<&'q str, LogicalExpr, InternalParseError<'q>> {
  457|  26.7k|        let (rest, opt_neg) = ignore_whitespace(opt(char('!')))(q)?;
  458|  26.7k|        let negated = opt_neg.is_some();
  459|  26.7k|        if let Ok((rest, _)) = char::<_, ()>('(')(rest) {
  460|  7.80k|            let (rest, nested_filter) = cut(|q| logical_expr(q, ctx)).parse(skip_whitespace(rest))?;
  461|  4.27k|            let rest = skip_whitespace(rest);
  462|  4.27k|            let Ok((rest, _)) = char::<_, ()>(')')(rest) else {
  463|      0|                return failed_filter_expression(SyntaxErrorKind::MissingClosingParenthesis)(rest);
  464|       |            };
  465|  4.27k|            let selector = if negated {
  466|  1.97k|                LogicalExpr::Not(Box::new(nested_filter))
  467|       |            } else {
  468|  2.30k|                nested_filter
  469|       |            };
  470|  4.27k|            return Ok((rest, selector));
  471|  18.9k|        }
  472|  18.9k|
  473|  18.9k|        match literal(rest) {
  474|  1.85k|            Ok((rest, lhs)) => {
  475|  1.85k|                let rest = skip_whitespace(rest);
  476|  1.85k|                let (rest, comp_op) = match comparison_operator(rest) {
  477|  1.85k|                    Ok((rest, comp_op)) => (rest, comp_op),
  478|      0|                    Err(Err::Failure(err)) => return Err(Err::Failure(err)),
  479|       |                    _ => {
  480|      0|                        if peek(char::<_, ()>(']')).parse(rest).is_ok() {
  481|      0|                            return fail(SyntaxErrorKind::MissingComparisonOperator, rest.len(), 1, rest);
  482|       |                        } else {
  483|      0|                            return failed_filter_expression(SyntaxErrorKind::InvalidComparisonOperator)(rest);
  484|       |                        };
  485|       |                    }
  486|       |                };
  487|  1.85k|                let rest = skip_whitespace(rest);
  488|  1.85k|                let (rest, rhs) = match comparable(rest, ctx) {
  489|  1.85k|                    Ok((rest, rhs)) => (rest, rhs),
  490|      0|                    Err(Err::Failure(err)) => return Err(Err::Failure(err)),
  491|       |                    _ => {
  492|      0|                        if peek(char::<_, ()>(']')).parse(rest).is_ok() {
  493|      0|                            return fail(SyntaxErrorKind::InvalidComparable, rest.len(), 1, rest);
  494|       |                        } else {
  495|      0|                            return failed_filter_expression(SyntaxErrorKind::InvalidComparable)(rest);
  496|       |                        };
  497|       |                    }
  498|       |                };
  499|  1.85k|                if negated {
  500|      0|                    return fail(SyntaxErrorKind::InvalidNegation, q.len(), 1, rest);
  501|       |                } else {
  502|  1.85k|                    return Ok((
  503|  1.85k|                        rest,
  504|  1.85k|                        LogicalExpr::Comparison(ComparisonExpr {
  505|  1.85k|                            lhs: Comparable::Literal(lhs),
  506|  1.85k|                            op: comp_op,
  507|  1.85k|                            rhs,
  508|  1.85k|                        }),
  509|  1.85k|                    ));
  510|       |                }
  511|       |            }
  512|      0|            Err(Err::Failure(err)) => return Err(Err::Failure(err)),
  513|  17.0k|            _ => (),
  514|  17.0k|        };
  515|  17.0k|
  516|  17.0k|        match filter_query(rest, ctx) {
  517|  15.7k|            Ok((rest, query)) => {
  518|  15.7k|                let query_len = q.len() - rest.len();
  519|  15.7k|                let rest = skip_whitespace(rest);
  520|  15.7k|                if let Ok((rest, comp_op)) = comparison_operator(rest) {
  521|  2.45k|                    let rest = skip_whitespace(rest);
  522|  2.45k|                    let Ok((rest, rhs)) = comparable(rest, ctx) else {
  523|      0|                        return failed_filter_expression(SyntaxErrorKind::InvalidComparable)(rest);
  524|       |                    };
  525|  2.45k|                    let Some(singular_query) = query.try_to_comparable() else {
  526|      0|                        return fail(SyntaxErrorKind::NonSingularQueryInComparison, q.len(), query_len, rest);
  527|       |                    };
  528|  2.45k|                    if negated {
  529|      0|                        fail(SyntaxErrorKind::InvalidNegation, q.len(), 1, rest)
  530|       |                    } else {
  531|  2.45k|                        Ok((
  532|  2.45k|                            rest,
  533|  2.45k|                            LogicalExpr::Comparison(ComparisonExpr {
  534|  2.45k|                                lhs: singular_query,
  535|  2.45k|                                rhs,
  536|  2.45k|                                op: comp_op,
  537|  2.45k|                            }),
  538|  2.45k|                        ))
  539|       |                    }
  540|       |                } else {
  541|  13.2k|                    let test_expr = LogicalExpr::Test(query.into_test_query());
  542|  13.2k|                    let expr = if negated {
  543|    254|                        LogicalExpr::Not(Box::new(test_expr))
  544|       |                    } else {
  545|  13.0k|                        test_expr
  546|       |                    };
  547|  13.2k|                    Ok((rest, expr))
  548|       |                }
  549|       |            }
  550|  1.34k|            Err(Err::Failure(err)) => Err(Err::Failure(err)),
  551|      0|            _ => failed_filter_expression(SyntaxErrorKind::InvalidFilter)(rest),
  552|       |        }
  553|  26.7k|    }
_RNvMs_NtCsiZ6QsNdkp8Z_15rsonpath_syntax6parserNtB4_11FilterQuery15into_test_query:
  568|  13.2k|    fn into_test_query(self) -> TestExpr {
  569|  13.2k|        match self {
  570|  2.00k|            Self::Relative(q) => TestExpr::Relative(q),
  571|  11.2k|            Self::Absolute(q) => TestExpr::Absolute(q),
  572|       |        }
  573|  13.2k|    }
_RNvMs_NtCsiZ6QsNdkp8Z_15rsonpath_syntax6parserNtB4_11FilterQuery17try_to_comparable:
  575|  4.84k|    fn try_to_comparable(self) -> Option<Comparable> {
  576|  4.84k|        match self {
  577|  1.65k|            Self::Relative(q) => q.try_to_singular().ok().map(Comparable::RelativeSingularQuery),
  578|  3.19k|            Self::Absolute(q) => q.try_to_singular().ok().map(Comparable::AbsoluteSingularQuery),
  579|       |        }
  580|  4.84k|    }
_RNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12filter_query:
  583|  19.4k|fn filter_query<'q>(q: &'q str, ctx: ParseCtx) -> IResult<&'q str, FilterQuery, InternalParseError<'q>> {
  584|  19.4k|    let (rest, root_type) = alt((
  585|  19.4k|        value(RootSelectorType::Absolute, char('$')),
  586|  19.4k|        value(RootSelectorType::Relative, char('@')),
  587|  19.4k|    ))
  588|  19.4k|    .parse(q)?;
  589|  19.4k|    let rest = skip_whitespace(rest);
  590|  19.4k|    let mut segments = vec![];
  591|  19.4k|    let mut syntax_errors = vec![];
  592|  19.4k|
  593|  19.4k|    let mut q = rest;
  594|       |
  595|       |    loop {
  596|  36.0k|        if peek(one_of::<_, _, ()>(".[")).parse(q).is_err() {
  597|  18.1k|            break;
  598|  17.9k|        }
  599|  17.9k|
  600|  17.9k|        q = match alt((
  601|  36.0k|            |q| descendant_segment(q, ctx),
  602|  36.0k|            |q| child_segment(q, ctx),
  603|  17.9k|            failed_segment_within_filter(SyntaxErrorKind::InvalidSegmentStart),
  604|  17.9k|        ))
  605|  17.9k|        .parse(q)
  606|  17.9k|        .finish()
  607|       |        {
  608|  16.5k|            Ok((rest, segment)) => {
  609|  16.5k|                segments.push(segment);
  610|  16.5k|                rest
  611|       |            }
  612|      0|            Err(InternalParseError::SyntaxError(err, rest)) => {
  613|      0|                syntax_errors.push(err);
  614|      0|                rest
  615|       |            }
  616|      0|            Err(InternalParseError::SyntaxErrors(mut errs, rest)) => {
  617|      0|                syntax_errors.append(&mut errs);
  618|      0|                rest
  619|       |            }
  620|       |            Err(InternalParseError::RecursionLimitExceeded) => {
  621|  1.34k|                return Err(Err::Failure(InternalParseError::RecursionLimitExceeded));
  622|       |            }
  623|      0|            Err(InternalParseError::NomError(err)) => panic!(
  624|      0|                "unexpected parser error; raw nom errors should never be produced; this is a bug\ncontext:\n{err}"
  625|      0|            ),
  626|       |        };
  627|  16.5k|        q = skip_whitespace(q);
  628|       |    }
  629|       |
  630|  18.1k|    if !syntax_errors.is_empty() {
  631|      0|        Err(Err::Failure(InternalParseError::SyntaxErrors(syntax_errors, q)))
  632|       |    } else {
  633|  18.1k|        let query = JsonPathQuery { segments };
  634|  18.1k|        let query = match root_type {
  635|  3.66k|            RootSelectorType::Relative => FilterQuery::Relative(query),
  636|  14.4k|            RootSelectorType::Absolute => FilterQuery::Absolute(query),
  637|       |        };
  638|  18.1k|        Ok((q, query))
  639|       |    }
  640|  19.4k|}
_RNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser19comparison_operator:
  662|  17.5k|fn comparison_operator(q: &str) -> IResult<&str, ComparisonOp, InternalParseError<'_>> {
  663|  17.5k|    alt((
  664|  17.5k|        value(ComparisonOp::EqualTo, tag("==")),
  665|  17.5k|        value(ComparisonOp::NotEqualTo, tag("!=")),
  666|  17.5k|        value(ComparisonOp::LesserOrEqualTo, tag("<=")),
  667|  17.5k|        value(ComparisonOp::GreaterOrEqualTo, tag(">=")),
  668|  17.5k|        value(ComparisonOp::LessThan, char('<')),
  669|  17.5k|        value(ComparisonOp::GreaterThan, char('>')),
  670|  17.5k|    ))
  671|  17.5k|    .parse(q)
  672|  17.5k|}
_RNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser10comparable:
  674|  4.31k|fn comparable<'q>(q: &'q str, ctx: ParseCtx) -> IResult<&'q str, Comparable, InternalParseError<'q>> {
  675|  4.31k|    return alt((into(literal), |q| singular_query(q, ctx))).parse(q);
  676|       |
  677|       |    fn singular_query<'q>(q: &'q str, ctx: ParseCtx) -> IResult<&'q str, Comparable, InternalParseError<'q>> {
  678|       |        let (rest, query) = filter_query(q, ctx)?;
  679|       |        let Some(cmp) = query.try_to_comparable() else {
  680|       |            let query_len = q.len() - rest.len();
  681|       |            return fail(SyntaxErrorKind::NonSingularQueryInComparison, q.len(), query_len, rest);
  682|       |        };
  683|       |        Ok((rest, cmp))
  684|       |    }
  685|  4.31k|}
_RNvNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser10comparable14singular_query:
  677|  2.38k|    fn singular_query<'q>(q: &'q str, ctx: ParseCtx) -> IResult<&'q str, Comparable, InternalParseError<'q>> {
  678|  2.38k|        let (rest, query) = filter_query(q, ctx)?;
  679|  2.38k|        let Some(cmp) = query.try_to_comparable() else {
  680|      0|            let query_len = q.len() - rest.len();
  681|      0|            return fail(SyntaxErrorKind::NonSingularQueryInComparison, q.len(), query_len, rest);
  682|       |        };
  683|  2.38k|        Ok((rest, cmp))
  684|  2.38k|    }
_RNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser7literal:
  687|  23.2k|fn literal(q: &str) -> IResult<&str, Literal, InternalParseError<'_>> {
  688|  23.2k|    alt((
  689|  23.2k|        into(number),
  690|  23.2k|        into(string_literal),
  691|  23.2k|        value(Literal::Bool(true), tag("true")),
  692|  23.2k|        value(Literal::Bool(false), tag("false")),
  693|  23.2k|        value(Literal::Null, tag("null")),
  694|  23.2k|    ))
  695|  23.2k|    .parse(q)
  696|  23.2k|}
_RNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser6number:
  698|  23.2k|fn number(q: &str) -> IResult<&str, JsonNumber, InternalParseError<'_>> {
  699|  23.2k|    map(float, |f| JsonNumber::from(f).normalize()).parse(q)
  700|  23.2k|}
_RNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser5float:
  703|  23.2k|fn float(q: &str) -> IResult<&str, JsonFloat, InternalParseError<'_>> {
  704|       |    // Look ahead to verify that this has a chance to be a number.
  705|  23.2k|    let (rest, valid_str) = recognize(alt((preceded(char('-'), base_float), base_float))).parse(q)?;
  706|       |
  707|       |    // It is a number, so after here we can hard cut.
  708|    777|    return match JsonFloat::from_str(valid_str) {
  709|    777|        Ok(n) => Ok((rest, n)),
  710|      0|        Err(e) => fail(SyntaxErrorKind::NumberParseError(e), rest.len(), valid_str.len(), q),
  711|       |    };
  712|       |
  713|       |    fn base_float(q: &str) -> IResult<&str, &str, InternalParseError<'_>> {
  714|       |        recognize((
  715|       |            digit1,
  716|       |            opt(preceded(char('.'), digit1)),
  717|       |            opt(preceded(
  718|       |                tag_no_case("e"),
  719|       |                preceded(opt(alt((char('+'), char('-')))), digit1),
  720|       |            )),
  721|       |        ))
  722|       |        .parse(q)
  723|       |    }
  724|  23.2k|}
_RNvNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser5float10base_float:
  713|  23.2k|    fn base_float(q: &str) -> IResult<&str, &str, InternalParseError<'_>> {
  714|  23.2k|        recognize((
  715|  23.2k|            digit1,
  716|  23.2k|            opt(preceded(char('.'), digit1)),
  717|  23.2k|            opt(preceded(
  718|  23.2k|                tag_no_case("e"),
  719|  23.2k|                preceded(opt(alt((char('+'), char('-')))), digit1),
  720|  23.2k|            )),
  721|  23.2k|        ))
  722|  23.2k|        .parse(q)
  723|  23.2k|    }
_RNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser21parse_directional_int:
  732|  7.68k|fn parse_directional_int(int_str: &str) -> DirectionalInt {
  733|  7.68k|    match JsonInt::from_str(int_str) {
  734|  7.68k|        Ok(int) => {
  735|  7.68k|            if let Ok(uint) = JsonUInt::try_from(int) {
  736|  4.24k|                DirectionalInt::Plus(uint)
  737|       |            } else {
  738|  3.43k|                DirectionalInt::Minus(int.abs().try_into().expect("zero would convert to JsonUInt above"))
  739|       |            }
  740|       |        }
  741|      0|        Err(err) => DirectionalInt::Error(err),
  742|       |    }
  743|  7.68k|}
_RNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser3int:
  745|  39.7k|fn int(q: &str) -> IResult<&str, &str, InternalParseError<'_>> {
  746|  39.7k|    let (rest, int) = recognize(alt((preceded(char('-'), digit1), digit1))).parse(q)?;
  747|       |
  748|  10.8k|    if int != "0" {
  749|  10.7k|        if int == "-0" {
  750|      0|            return fail(SyntaxErrorKind::NegativeZeroInteger, q.len(), int.len(), rest);
  751|  10.7k|        }
  752|  10.7k|        let without_minus = int.strip_prefix('-').unwrap_or(int);
  753|  10.7k|        if without_minus.strip_prefix(['0']).is_some() {
  754|      0|            return fail(SyntaxErrorKind::LeadingZeros, q.len(), int.len(), rest);
  755|  10.7k|        }
  756|    143|    }
  757|       |
  758|  10.8k|    Ok((rest, int))
  759|  39.7k|}
_RNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser6string:
  761|  99.9k|fn string(mode: StringParseMode) -> impl FnMut(&str) -> IResult<&str, JsonString, InternalParseError<'_>> {
  762|       |    move |q: &str| {
  763|       |        let mut builder = JsonStringBuilder::new();
  764|       |        let mut syntax_errors = vec![];
  765|       |        let mut stream = q.char_indices().peekable();
  766|       |
  767|       |        while let Some((c_idx, c)) = stream.next() {
  768|       |            match (c, mode) {
  769|       |                ('\\', _) => {
  770|       |                    match read_escape_sequence(q.len(), c_idx, &mut stream, mode) {
  771|       |                        Ok(r) => {
  772|       |                            builder.push(r);
  773|       |                        }
  774|       |                        Err(err) => {
  775|       |                            syntax_errors.push(err);
  776|       |                        }
  777|       |                    };
  778|       |                }
  779|       |                ('"', StringParseMode::DoubleQuoted) | ('\'', StringParseMode::SingleQuoted) => {
  780|       |                    let rest = stream.next().map_or("", |(i, _)| &q[i..]);
  781|       |                    return if syntax_errors.is_empty() {
  782|       |                        Ok((rest, builder.finish()))
  783|       |                    } else {
  784|       |                        Err(nom::Err::Failure(InternalParseError::SyntaxErrors(syntax_errors, rest)))
  785|       |                    };
  786|       |                }
  787|       |                (..='\u{001F}', _) => {
  788|       |                    let rest = stream.peek().map_or("", |(i, _)| &q[*i..]);
  789|       |                    syntax_errors.push(SyntaxError::new(
  790|       |                        SyntaxErrorKind::InvalidUnescapedCharacter,
  791|       |                        rest.len() + 1,
  792|       |                        1,
  793|       |                    ))
  794|       |                }
  795|       |                _ => {
  796|       |                    builder.push(c);
  797|       |                }
  798|       |            }
  799|       |        }
  800|       |
  801|       |        let err_kind = if mode == StringParseMode::SingleQuoted {
  802|       |            SyntaxErrorKind::MissingClosingSingleQuote
  803|       |        } else {
  804|       |            SyntaxErrorKind::MissingClosingDoubleQuote
  805|       |        };
  806|       |        syntax_errors.push(SyntaxError::new(err_kind, 0, 1));
  807|       |        return Err(nom::Err::Failure(InternalParseError::SyntaxErrors(syntax_errors, "")));
  808|       |
  809|       |        fn read_escape_sequence<I>(
  810|       |            q_len: usize,
  811|       |            c_idx: usize,
  812|       |            chars: &mut Peekable<I>,
  813|       |            mode: StringParseMode,
  814|       |        ) -> std::result::Result<char, SyntaxError>
  815|       |        where
  816|       |            I: Iterator<Item = (usize, char)>,
  817|       |        {
  818|       |            let (i, ctrl) = chars.next().ok_or(SyntaxError::new(
  819|       |                SyntaxErrorKind::InvalidUnescapedCharacter,
  820|       |                q_len - c_idx,
  821|       |                1,
  822|       |            ))?;
  823|       |            match ctrl {
  824|       |                'u' => {
  825|       |                    let raw_c = read_hexadecimal_escape(q_len, i, chars)?;
  826|       |                    match raw_c {
  827|       |                        // High surrogate, start of a UTF-16 pair.
  828|       |                        0xD800..=0xDBFF => {
  829|       |                            let &(_, next) = chars.peek().ok_or(SyntaxError::new(
  830|       |                                SyntaxErrorKind::UnpairedHighSurrogate,
  831|       |                                q_len - c_idx,
  832|       |                                6,
  833|       |                            ))?;
  834|       |                            if next != '\\' {
  835|       |                                return Err(SyntaxError::new(
  836|       |                                    SyntaxErrorKind::UnpairedHighSurrogate,
  837|       |                                    q_len - c_idx,
  838|       |                                    6,
  839|       |                                ));
  840|       |                            }
  841|       |                            chars.next();
  842|       |                            let (i, next) = chars.next().ok_or(SyntaxError::new(
  843|       |                                SyntaxErrorKind::UnpairedHighSurrogate,
  844|       |                                q_len - c_idx,
  845|       |                                6,
  846|       |                            ))?;
  847|       |                            if next != 'u' {
  848|       |                                return Err(SyntaxError::new(
  849|       |                                    SyntaxErrorKind::UnpairedHighSurrogate,
  850|       |                                    q_len - c_idx,
  851|       |                                    6,
  852|       |                                ));
  853|       |                            }
  854|       |                            let low = read_hexadecimal_escape(q_len, i, chars)?;
  855|       |                            match low {
  856|       |                                0xDC00..=0xDFFF => {
  857|       |                                    let n = (((raw_c - 0xD800) << 10) | (low - 0xDC00)) + 0x10000;
  858|       |                                    Ok(char::from_u32(n).expect("high and low surrogate pair is always a valid char"))
  859|       |                                }
  860|       |                                _ => Err(SyntaxError::new(
  861|       |                                    SyntaxErrorKind::UnpairedHighSurrogate,
  862|       |                                    q_len - c_idx,
  863|       |                                    6,
  864|       |                                )),
  865|       |                            }
  866|       |                        }
  867|       |                        // Low surrogate, invalid escape sequence.
  868|       |                        0xDC00..=0xDFFF => Err(SyntaxError::new(
  869|       |                            SyntaxErrorKind::UnpairedLowSurrogate,
  870|       |                            q_len - c_idx,
  871|       |                            6,
  872|       |                        )),
  873|       |                        _ => Ok(char::from_u32(raw_c).expect("invalid values are handled above")),
  874|       |                    }
  875|       |                }
  876|       |                'b' => Ok('\u{0008}'), // U+0008 BS backspace
  877|       |                't' => Ok('\t'),       // U+0009 HT horizontal tab
  878|       |                'n' => Ok('\n'),       // U+000A LF line feed
  879|       |                'f' => Ok('\u{000C}'), // U+000C FF form feed
  880|       |                'r' => Ok('\r'),       // U+000D CR carriage return
  881|       |                '"' if mode == StringParseMode::DoubleQuoted => Ok(ctrl),
  882|       |                '\'' if mode == StringParseMode::SingleQuoted => Ok(ctrl),
  883|       |                '/' | '\\' => Ok(ctrl), // " ' / \ are passed as is
  884|       |                _ => Err(SyntaxError::new(
  885|       |                    SyntaxErrorKind::InvalidEscapeSequence,
  886|       |                    q_len - c_idx,
  887|       |                    2,
  888|       |                )), // no other escape sequences are allowed
  889|       |            }
  890|       |        }
  891|       |
  892|       |        fn read_hexadecimal_escape<I>(
  893|       |            q_len: usize,
  894|       |            c_idx: usize,
  895|       |            chars: &mut Peekable<I>,
  896|       |        ) -> std::result::Result<u32, SyntaxError>
  897|       |        where
  898|       |            I: Iterator<Item = (usize, char)>,
  899|       |        {
  900|       |            let mut x = 0;
  901|       |            for i in 0..4 {
  902|       |                let &(_, c) = chars.peek().ok_or(SyntaxError::new(
  903|       |                    SyntaxErrorKind::InvalidEscapeSequence,
  904|       |                    q_len - c_idx + 1,
  905|       |                    2 + i,
  906|       |                ))?;
  907|       |                let v = match c {
  908|       |                    '0'..='9' => c as u32 - '0' as u32,
  909|       |                    // RFC8259.7-2 The hexadecimal letters A through F can be uppercase or lowercase.
  910|       |                    'a'..='f' => c as u32 - 'a' as u32 + 10,
  911|       |                    'A'..='F' => c as u32 - 'A' as u32 + 10,
  912|       |                    _ => {
  913|       |                        return Err(SyntaxError::new(
  914|       |                            SyntaxErrorKind::InvalidHexDigitInUnicodeEscape,
  915|       |                            q_len - c_idx - i - 1,
  916|       |                            1,
  917|       |                        ))
  918|       |                    }
  919|       |                };
  920|       |                x <<= 4;
  921|       |                x += v;
  922|       |                chars.next();
  923|       |            }
  924|       |            Ok(x)
  925|       |        }
  926|       |    }
  927|  99.9k|}
_RINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceINtNtCshZc3FwCJ069_4core6option6OptionReEINtNtCselIyhuOc7xF_3nom8sequence8PrecededNCINvNtNtB1J_9character8complete4charB1B_NtNtB4_5error18InternalParseErrorE0INtNtB1J_10combinator3OptNCIB0_B1B_NvB2_3intB2Y_E0EEB2Y_EB4_:
   23|  1.71k|fn ignore_whitespace<'a, T, F, E>(mut inner: F) -> impl FnMut(&'a str) -> IResult<&'a str, T, E>
   24|  1.71k|where
   25|  1.71k|    F: nom::Parser<&'a str, Output = T, Error = E>,
   26|  1.71k|{
   27|       |    move |q: &'a str| {
   28|       |        inner
   29|       |            .parse(skip_whitespace(q))
   30|       |            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|       |    }
   32|  1.71k|}
_RINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceINtNtCshZc3FwCJ069_4core6option6OptioncEINtNtCselIyhuOc7xF_3nom10combinator3OptNCINvNtNtB1I_9character8complete4charReNtNtB4_5error18InternalParseErrorE0EB2T_EB4_:
   23|  26.7k|fn ignore_whitespace<'a, T, F, E>(mut inner: F) -> impl FnMut(&'a str) -> IResult<&'a str, T, E>
   24|  26.7k|where
   25|  26.7k|    F: nom::Parser<&'a str, Output = T, Error = E>,
   26|  26.7k|{
   27|       |    move |q: &'a str| {
   28|       |        inner
   29|       |            .parse(skip_whitespace(q))
   30|       |            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|       |    }
   32|  26.7k|}
_RINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtB4_11LogicalExprNCNvB2_12logical_expr0NtNtB4_5error18InternalParseErrorEB4_:
   23|  25.4k|fn ignore_whitespace<'a, T, F, E>(mut inner: F) -> impl FnMut(&'a str) -> IResult<&'a str, T, E>
   24|  25.4k|where
   25|  25.4k|    F: nom::Parser<&'a str, Output = T, Error = E>,
   26|  25.4k|{
   27|       |    move |q: &'a str| {
   28|       |        inner
   29|       |            .parse(skip_whitespace(q))
   30|       |            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|       |    }
   32|  25.4k|}
_RINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtB4_11LogicalExprNCNvB2_12logical_exprs0_0NtNtB4_5error18InternalParseErrorEB4_:
   23|  3.46k|fn ignore_whitespace<'a, T, F, E>(mut inner: F) -> impl FnMut(&'a str) -> IResult<&'a str, T, E>
   24|  3.46k|where
   25|  3.46k|    F: nom::Parser<&'a str, Output = T, Error = E>,
   26|  3.46k|{
   27|       |    move |q: &'a str| {
   28|       |        inner
   29|       |            .parse(skip_whitespace(q))
   30|       |            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|       |    }
   32|  3.46k|}
_RINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtB4_11LogicalExprNCNvB2_12logical_exprs_0NtNtB4_5error18InternalParseErrorEB4_:
   23|  1.33k|fn ignore_whitespace<'a, T, F, E>(mut inner: F) -> impl FnMut(&'a str) -> IResult<&'a str, T, E>
   24|  1.33k|where
   25|  1.33k|    F: nom::Parser<&'a str, Output = T, Error = E>,
   26|  1.33k|{
   27|       |    move |q: &'a str| {
   28|       |        inner
   29|       |            .parse(skip_whitespace(q))
   30|       |            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|       |    }
   32|  1.33k|}
_RINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtB4_11LogicalExprNCNvB2_15filter_selector0NtNtB4_5error18InternalParseErrorEB4_:
   23|  14.1k|fn ignore_whitespace<'a, T, F, E>(mut inner: F) -> impl FnMut(&'a str) -> IResult<&'a str, T, E>
   24|  14.1k|where
   25|  14.1k|    F: nom::Parser<&'a str, Output = T, Error = E>,
   26|  14.1k|{
   27|       |    move |q: &'a str| {
   28|       |        inner
   29|       |            .parse(skip_whitespace(q))
   30|       |            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|       |    }
   32|  14.1k|}
_RINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtB4_8SelectorNCNvB2_8selector0NtNtB4_5error18InternalParseErrorEB4_:
   23|  27.5k|fn ignore_whitespace<'a, T, F, E>(mut inner: F) -> impl FnMut(&'a str) -> IResult<&'a str, T, E>
   24|  27.5k|where
   25|  27.5k|    F: nom::Parser<&'a str, Output = T, Error = E>,
   26|  27.5k|{
   27|       |    move |q: &'a str| {
   28|       |        inner
   29|       |            .parse(skip_whitespace(q))
   30|       |            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|       |    }
   32|  27.5k|}
_RINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtB4_8SelectorNvB2_13name_selectorNtNtB4_5error18InternalParseErrorEB4_:
   23|  27.5k|fn ignore_whitespace<'a, T, F, E>(mut inner: F) -> impl FnMut(&'a str) -> IResult<&'a str, T, E>
   24|  27.5k|where
   25|  27.5k|    F: nom::Parser<&'a str, Output = T, Error = E>,
   26|  27.5k|{
   27|       |    move |q: &'a str| {
   28|       |        inner
   29|       |            .parse(skip_whitespace(q))
   30|       |            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|       |    }
   32|  27.5k|}
_RINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtB4_8SelectorNvB2_14index_selectorNtNtB4_5error18InternalParseErrorEB4_:
   23|  27.5k|fn ignore_whitespace<'a, T, F, E>(mut inner: F) -> impl FnMut(&'a str) -> IResult<&'a str, T, E>
   24|  27.5k|where
   25|  27.5k|    F: nom::Parser<&'a str, Output = T, Error = E>,
   26|  27.5k|{
   27|       |    move |q: &'a str| {
   28|       |        inner
   29|       |            .parse(skip_whitespace(q))
   30|       |            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|       |    }
   32|  27.5k|}
_RINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtB4_8SelectorNvB2_14slice_selectorNtNtB4_5error18InternalParseErrorEB4_:
   23|  27.5k|fn ignore_whitespace<'a, T, F, E>(mut inner: F) -> impl FnMut(&'a str) -> IResult<&'a str, T, E>
   24|  27.5k|where
   25|  27.5k|    F: nom::Parser<&'a str, Output = T, Error = E>,
   26|  27.5k|{
   27|       |    move |q: &'a str| {
   28|       |        inner
   29|       |            .parse(skip_whitespace(q))
   30|       |            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|       |    }
   32|  27.5k|}
_RINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtB4_8SelectorNvB2_17wildcard_selectorNtNtB4_5error18InternalParseErrorEB4_:
   23|  27.5k|fn ignore_whitespace<'a, T, F, E>(mut inner: F) -> impl FnMut(&'a str) -> IResult<&'a str, T, E>
   24|  27.5k|where
   25|  27.5k|    F: nom::Parser<&'a str, Output = T, Error = E>,
   26|  27.5k|{
   27|       |    move |q: &'a str| {
   28|       |        inner
   29|       |            .parse(skip_whitespace(q))
   30|       |            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|       |    }
   32|  27.5k|}
_RINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtNvB2_12logical_expr9BooleanOpINtNtCselIyhuOc7xF_3nom6branch6ChoiceTINtNtB1z_8internal3MapNCINvNtNtB1z_5bytes8complete3tagReB2Y_NtNtB4_5error18InternalParseErrorE0NCINvNtB1z_10combinator5valueB2Y_BZ_B34_B2s_E0EB26_EEB34_EB4_:
   23|  25.2k|fn ignore_whitespace<'a, T, F, E>(mut inner: F) -> impl FnMut(&'a str) -> IResult<&'a str, T, E>
   24|  25.2k|where
   25|  25.2k|    F: nom::Parser<&'a str, Output = T, Error = E>,
   26|  25.2k|{
   27|       |    move |q: &'a str| {
   28|       |        inner
   29|       |            .parse(skip_whitespace(q))
   30|       |            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|       |    }
   32|  25.2k|}
_RINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceReNvB2_3intNtNtB4_5error18InternalParseErrorEB4_:
   23|  3.43k|fn ignore_whitespace<'a, T, F, E>(mut inner: F) -> impl FnMut(&'a str) -> IResult<&'a str, T, E>
   24|  3.43k|where
   25|  3.43k|    F: nom::Parser<&'a str, Output = T, Error = E>,
   26|  3.43k|{
   27|       |    move |q: &'a str| {
   28|       |        inner
   29|       |            .parse(skip_whitespace(q))
   30|       |            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|       |    }
   32|  3.43k|}
_RINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespacecNCINvNtNtCselIyhuOc7xF_3nom9character8complete4charReNtNtB4_5error18InternalParseErrorE0B1R_EB4_:
   23|  19.0k|fn ignore_whitespace<'a, T, F, E>(mut inner: F) -> impl FnMut(&'a str) -> IResult<&'a str, T, E>
   24|  19.0k|where
   25|  19.0k|    F: nom::Parser<&'a str, Output = T, Error = E>,
   26|  19.0k|{
   27|       |    move |q: &'a str| {
   28|       |        inner
   29|       |            .parse(skip_whitespace(q))
   30|       |            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|       |    }
   32|  19.0k|}
_RNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceINtNtCshZc3FwCJ069_4core6option6OptionReEINtNtCselIyhuOc7xF_3nom8sequence8PrecededNCINvNtNtB1L_9character8complete4charB1D_NtNtB6_5error18InternalParseErrorE0INtNtB1L_10combinator3OptNCIB2_B1D_NvB4_3intB30_E0EEB30_E0B6_:
   27|  1.71k|    move |q: &'a str| {
   28|  1.71k|        inner
   29|  1.71k|            .parse(skip_whitespace(q))
   30|  1.71k|            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|  1.71k|    }
_RNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceINtNtCshZc3FwCJ069_4core6option6OptioncEINtNtCselIyhuOc7xF_3nom10combinator3OptNCINvNtNtB1K_9character8complete4charReNtNtB6_5error18InternalParseErrorE0EB2V_E0B6_:
   27|  26.7k|    move |q: &'a str| {
   28|  26.7k|        inner
   29|  26.7k|            .parse(skip_whitespace(q))
   30|  26.7k|            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|  26.7k|    }
_RNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtB6_11LogicalExprNCNvB4_12logical_expr0NtNtB6_5error18InternalParseErrorE0B6_:
   27|  25.4k|    move |q: &'a str| {
   28|  25.4k|        inner
   29|  25.4k|            .parse(skip_whitespace(q))
   30|  25.4k|            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|  25.4k|    }
_RNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtB6_11LogicalExprNCNvB4_12logical_exprs0_0NtNtB6_5error18InternalParseErrorE0B6_:
   27|  3.46k|    move |q: &'a str| {
   28|  3.46k|        inner
   29|  3.46k|            .parse(skip_whitespace(q))
   30|  3.46k|            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|  3.46k|    }
_RNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtB6_11LogicalExprNCNvB4_12logical_exprs_0NtNtB6_5error18InternalParseErrorE0B6_:
   27|  1.33k|    move |q: &'a str| {
   28|  1.33k|        inner
   29|  1.33k|            .parse(skip_whitespace(q))
   30|  1.33k|            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|  1.33k|    }
_RNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtB6_11LogicalExprNCNvB4_15filter_selector0NtNtB6_5error18InternalParseErrorE0B6_:
   27|  14.1k|    move |q: &'a str| {
   28|  14.1k|        inner
   29|  14.1k|            .parse(skip_whitespace(q))
   30|  14.1k|            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|  14.1k|    }
_RNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtB6_8SelectorNCNvB4_8selector0NtNtB6_5error18InternalParseErrorE0B6_:
   27|  14.1k|    move |q: &'a str| {
   28|  14.1k|        inner
   29|  14.1k|            .parse(skip_whitespace(q))
   30|  14.1k|            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|  14.1k|    }
_RNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtB6_8SelectorNvB4_13name_selectorNtNtB6_5error18InternalParseErrorE0B6_:
   27|  27.5k|    move |q: &'a str| {
   28|  27.5k|        inner
   29|  27.5k|            .parse(skip_whitespace(q))
   30|  27.5k|            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|  27.5k|    }
_RNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtB6_8SelectorNvB4_14index_selectorNtNtB6_5error18InternalParseErrorE0B6_:
   27|  17.3k|    move |q: &'a str| {
   28|  17.3k|        inner
   29|  17.3k|            .parse(skip_whitespace(q))
   30|  17.3k|            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|  17.3k|    }
_RNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtB6_8SelectorNvB4_14slice_selectorNtNtB6_5error18InternalParseErrorE0B6_:
   27|  19.0k|    move |q: &'a str| {
   28|  19.0k|        inner
   29|  19.0k|            .parse(skip_whitespace(q))
   30|  19.0k|            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|  19.0k|    }
_RNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtB6_8SelectorNvB4_17wildcard_selectorNtNtB6_5error18InternalParseErrorE0B6_:
   27|  20.8k|    move |q: &'a str| {
   28|  20.8k|        inner
   29|  20.8k|            .parse(skip_whitespace(q))
   30|  20.8k|            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|  20.8k|    }
_RNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtNvB4_12logical_expr9BooleanOpINtNtCselIyhuOc7xF_3nom6branch6ChoiceTINtNtB1B_8internal3MapNCINvNtNtB1B_5bytes8complete3tagReB30_NtNtB6_5error18InternalParseErrorE0NCINvNtB1B_10combinator5valueB30_B11_B36_B2u_E0EB28_EEB36_E0B6_:
   27|  25.2k|    move |q: &'a str| {
   28|  25.2k|        inner
   29|  25.2k|            .parse(skip_whitespace(q))
   30|  25.2k|            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|  25.2k|    }
_RNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceReNvB4_3intNtNtB6_5error18InternalParseErrorE0B6_:
   27|  3.33k|    move |q: &'a str| {
   28|  3.33k|        inner
   29|  3.33k|            .parse(skip_whitespace(q))
   30|  3.33k|            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|  3.33k|    }
_RNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespacecNCINvNtNtCselIyhuOc7xF_3nom9character8complete4charReNtNtB6_5error18InternalParseErrorE0B1T_E0B6_:
   27|  19.0k|    move |q: &'a str| {
   28|  19.0k|        inner
   29|  19.0k|            .parse(skip_whitespace(q))
   30|  19.0k|            .map(|(rest, res)| (skip_whitespace(rest), res))
   31|  19.0k|    }
_RNCNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceINtNtCshZc3FwCJ069_4core6option6OptionReEINtNtCselIyhuOc7xF_3nom8sequence8PrecededNCINvNtNtB1N_9character8complete4charB1F_NtNtB8_5error18InternalParseErrorE0INtNtB1N_10combinator3OptNCIB4_B1F_NvB6_3intB32_E0EEB32_E00B8_:
   30|  1.61k|            .map(|(rest, res)| (skip_whitespace(rest), res))
_RNCNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceINtNtCshZc3FwCJ069_4core6option6OptioncEINtNtCselIyhuOc7xF_3nom10combinator3OptNCINvNtNtB1M_9character8complete4charReNtNtB8_5error18InternalParseErrorE0EB2X_E00B8_:
   30|  26.7k|            .map(|(rest, res)| (skip_whitespace(rest), res))
_RNCNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtB8_11LogicalExprNCNvB6_12logical_expr0NtNtB8_5error18InternalParseErrorE00B8_:
   30|  20.5k|            .map(|(rest, res)| (skip_whitespace(rest), res))
_RNCNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtB8_11LogicalExprNCNvB6_12logical_exprs0_0NtNtB8_5error18InternalParseErrorE00B8_:
   30|  3.33k|            .map(|(rest, res)| (skip_whitespace(rest), res))
_RNCNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtB8_11LogicalExprNCNvB6_12logical_exprs_0NtNtB8_5error18InternalParseErrorE00B8_:
   30|  1.29k|            .map(|(rest, res)| (skip_whitespace(rest), res))
_RNCNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtB8_11LogicalExprNCNvB6_15filter_selector0NtNtB8_5error18InternalParseErrorE00B8_:
   30|  12.8k|            .map(|(rest, res)| (skip_whitespace(rest), res))
_RNCNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtB8_8SelectorNCNvB6_8selector0NtNtB8_5error18InternalParseErrorE00B8_:
   30|  12.8k|            .map(|(rest, res)| (skip_whitespace(rest), res))
_RNCNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtB8_8SelectorNvB6_13name_selectorNtNtB8_5error18InternalParseErrorE00B8_:
   30|  6.64k|            .map(|(rest, res)| (skip_whitespace(rest), res))
_RNCNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtB8_8SelectorNvB6_14index_selectorNtNtB8_5error18InternalParseErrorE00B8_:
   30|  3.16k|            .map(|(rest, res)| (skip_whitespace(rest), res))
_RNCNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtB8_8SelectorNvB6_14slice_selectorNtNtB8_5error18InternalParseErrorE00B8_:
   30|  1.71k|            .map(|(rest, res)| (skip_whitespace(rest), res))
_RNCNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtB8_8SelectorNvB6_17wildcard_selectorNtNtB8_5error18InternalParseErrorE00B8_:
   30|  1.78k|            .map(|(rest, res)| (skip_whitespace(rest), res))
_RNCNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceNtNvB6_12logical_expr9BooleanOpINtNtCselIyhuOc7xF_3nom6branch6ChoiceTINtNtB1D_8internal3MapNCINvNtNtB1D_5bytes8complete3tagReB32_NtNtB8_5error18InternalParseErrorE0NCINvNtB1D_10combinator5valueB32_B13_B38_B2w_E0EB2a_EEB38_E00B8_:
   30|  4.79k|            .map(|(rest, res)| (skip_whitespace(rest), res))
_RNCNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespaceReNvB6_3intNtNtB8_5error18InternalParseErrorE00B8_:
   30|  2.94k|            .map(|(rest, res)| (skip_whitespace(rest), res))
_RNCNCINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17ignore_whitespacecNCINvNtNtCselIyhuOc7xF_3nom9character8complete4charReNtNtB8_5error18InternalParseErrorE0B1V_E00B8_:
   30|  1.71k|            .map(|(rest, res)| (skip_whitespace(rest), res))
_RNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser7segment0B5_:
  145|  1.90k|        |q| descendant_segment(q, ctx),
_RNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser7segments_0B5_:
  146|    774|        |q| child_segment(q, ctx),
_RNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser18descendant_segment0B5_:
  157|  13.6k|                |q| bracketed_selection(q, ctx),
_RNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser13child_segment0B5_:
  171|  6.16k|            |q| bracketed_selection(q, ctx),
_RINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser14failed_segmentNtB4_7SegmentEB4_:
  187|  1.90k|fn failed_segment<T>(kind: SyntaxErrorKind) -> impl FnMut(&str) -> IResult<&str, T, InternalParseError<'_>> {
  188|       |    move |q: &str| {
  189|       |        let rest = skip_one(q)
  190|       |            .trim_start_matches('.')
  191|       |            .trim_start_matches(|x| x != '.' && x != '[');
  192|       |        fail(kind.clone(), q.len(), q.len() - rest.len(), rest)
  193|       |    }
  194|  1.90k|}
_RINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser14failed_segmentNtB4_9SelectorsEB4_:
  187|  25.9k|fn failed_segment<T>(kind: SyntaxErrorKind) -> impl FnMut(&str) -> IResult<&str, T, InternalParseError<'_>> {
  188|       |    move |q: &str| {
  189|       |        let rest = skip_one(q)
  190|       |            .trim_start_matches('.')
  191|       |            .trim_start_matches(|x| x != '.' && x != '[');
  192|       |        fail(kind.clone(), q.len(), q.len() - rest.len(), rest)
  193|       |    }
  194|  25.9k|}
_RNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser8selector0B5_:
  272|  14.1k|        ignore_whitespace(|q| filter_selector(q, ctx)),
_RNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser17wildcard_selector0B5_:
  297|  1.78k|    map(tag("*"), |_| Selector::Wildcard).parse(q)
_RNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser15filter_selector0B5_:
  391|  14.1k|    into(preceded(char('?'), ignore_whitespace(|q| logical_expr(q, ctx)))).parse(q)
_RNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_expr0B5_:
  427|  25.4k|    let (rest, this_expr) = ignore_whitespace(|q| parse_single(q, ctx))(q)?;
_RNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_exprs_0B5_:
  441|  1.33k|                let (rest, rhs_expr) = ignore_whitespace(|q| parse_single(q, ctx))(loop_rest)?;
_RNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_exprs0_0B5_:
  446|  3.46k|                let (rest, rhs_expr) = ignore_whitespace(|q| logical_expr(q, ctx))(loop_rest)?;
_RNCNvNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12logical_expr12parse_single0B7_:
  460|  7.80k|            let (rest, nested_filter) = cut(|q| logical_expr(q, ctx)).parse(skip_whitespace(rest))?;
_RNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12filter_query0B5_:
  601|  17.9k|            |q| descendant_segment(q, ctx),
_RNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser12filter_querys_0B5_:
  602|  5.38k|            |q| child_segment(q, ctx),
_RINvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser28failed_segment_within_filterNtB4_7SegmentEB4_:
  642|  17.9k|fn failed_segment_within_filter<T>(
  643|  17.9k|    kind: SyntaxErrorKind,
  644|  17.9k|) -> impl FnMut(&str) -> IResult<&str, T, InternalParseError<'_>> {
  645|       |    move |q: &str| {
  646|       |        // We want to find the next segment or close the filter.
  647|       |        let rest = skip_one(q)
  648|       |            .trim_start_matches('.')
  649|       |            .trim_start_matches(|x| x != ',' && x != ']' && x != '.' && x != '[');
  650|       |        fail(kind.clone(), q.len(), q.len() - rest.len(), rest)
  651|       |    }
  652|  17.9k|}
_RNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser10comparable0B5_:
  675|  2.38k|    return alt((into(literal), |q| singular_query(q, ctx))).parse(q);
_RNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser6number0B5_:
  699|    777|    map(float, |f| JsonNumber::from(f).normalize()).parse(q)
_RNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser6string0B5_:
  762|  8.66k|    move |q: &str| {
  763|  8.66k|        let mut builder = JsonStringBuilder::new();
  764|  8.66k|        let mut syntax_errors = vec![];
  765|  8.66k|        let mut stream = q.char_indices().peekable();
  766|       |
  767|  26.9k|        while let Some((c_idx, c)) = stream.next() {
  768|  26.9k|            match (c, mode) {
  769|       |                ('\\', _) => {
  770|  7.69k|                    match read_escape_sequence(q.len(), c_idx, &mut stream, mode) {
  771|  7.69k|                        Ok(r) => {
  772|  7.69k|                            builder.push(r);
  773|  7.69k|                        }
  774|      0|                        Err(err) => {
  775|      0|                            syntax_errors.push(err);
  776|      0|                        }
  777|       |                    };
  778|       |                }
  779|       |                ('"', StringParseMode::DoubleQuoted) | ('\'', StringParseMode::SingleQuoted) => {
  780|  8.66k|                    let rest = stream.next().map_or("", |(i, _)| &q[i..]);
  781|  8.66k|                    return if syntax_errors.is_empty() {
  782|  8.66k|                        Ok((rest, builder.finish()))
  783|       |                    } else {
  784|      0|                        Err(nom::Err::Failure(InternalParseError::SyntaxErrors(syntax_errors, rest)))
  785|       |                    };
  786|       |                }
  787|  9.56k|                (..='\u{001F}', _) => {
  788|      0|                    let rest = stream.peek().map_or("", |(i, _)| &q[*i..]);
  789|      0|                    syntax_errors.push(SyntaxError::new(
  790|      0|                        SyntaxErrorKind::InvalidUnescapedCharacter,
  791|      0|                        rest.len() + 1,
  792|      0|                        1,
  793|      0|                    ))
  794|       |                }
  795|  10.5k|                _ => {
  796|  10.5k|                    builder.push(c);
  797|  10.5k|                }
  798|       |            }
  799|       |        }
  800|       |
  801|      0|        let err_kind = if mode == StringParseMode::SingleQuoted {
  802|      0|            SyntaxErrorKind::MissingClosingSingleQuote
  803|       |        } else {
  804|      0|            SyntaxErrorKind::MissingClosingDoubleQuote
  805|       |        };
  806|      0|        syntax_errors.push(SyntaxError::new(err_kind, 0, 1));
  807|      0|        return Err(nom::Err::Failure(InternalParseError::SyntaxErrors(syntax_errors, "")));
  808|       |
  809|       |        fn read_escape_sequence<I>(
  810|       |            q_len: usize,
  811|       |            c_idx: usize,
  812|       |            chars: &mut Peekable<I>,
  813|       |            mode: StringParseMode,
  814|       |        ) -> std::result::Result<char, SyntaxError>
  815|       |        where
  816|       |            I: Iterator<Item = (usize, char)>,
  817|       |        {
  818|       |            let (i, ctrl) = chars.next().ok_or(SyntaxError::new(
  819|       |                SyntaxErrorKind::InvalidUnescapedCharacter,
  820|       |                q_len - c_idx,
  821|       |                1,
  822|       |            ))?;
  823|       |            match ctrl {
  824|       |                'u' => {
  825|       |                    let raw_c = read_hexadecimal_escape(q_len, i, chars)?;
  826|       |                    match raw_c {
  827|       |                        // High surrogate, start of a UTF-16 pair.
  828|       |                        0xD800..=0xDBFF => {
  829|       |                            let &(_, next) = chars.peek().ok_or(SyntaxError::new(
  830|       |                                SyntaxErrorKind::UnpairedHighSurrogate,
  831|       |                                q_len - c_idx,
  832|       |                                6,
  833|       |                            ))?;
  834|       |                            if next != '\\' {
  835|       |                                return Err(SyntaxError::new(
  836|       |                                    SyntaxErrorKind::UnpairedHighSurrogate,
  837|       |                                    q_len - c_idx,
  838|       |                                    6,
  839|       |                                ));
  840|       |                            }
  841|       |                            chars.next();
  842|       |                            let (i, next) = chars.next().ok_or(SyntaxError::new(
  843|       |                                SyntaxErrorKind::UnpairedHighSurrogate,
  844|       |                                q_len - c_idx,
  845|       |                                6,
  846|       |                            ))?;
  847|       |                            if next != 'u' {
  848|       |                                return Err(SyntaxError::new(
  849|       |                                    SyntaxErrorKind::UnpairedHighSurrogate,
  850|       |                                    q_len - c_idx,
  851|       |                                    6,
  852|       |                                ));
  853|       |                            }
  854|       |                            let low = read_hexadecimal_escape(q_len, i, chars)?;
  855|       |                            match low {
  856|       |                                0xDC00..=0xDFFF => {
  857|       |                                    let n = (((raw_c - 0xD800) << 10) | (low - 0xDC00)) + 0x10000;
  858|       |                                    Ok(char::from_u32(n).expect("high and low surrogate pair is always a valid char"))
  859|       |                                }
  860|       |                                _ => Err(SyntaxError::new(
  861|       |                                    SyntaxErrorKind::UnpairedHighSurrogate,
  862|       |                                    q_len - c_idx,
  863|       |                                    6,
  864|       |                                )),
  865|       |                            }
  866|       |                        }
  867|       |                        // Low surrogate, invalid escape sequence.
  868|       |                        0xDC00..=0xDFFF => Err(SyntaxError::new(
  869|       |                            SyntaxErrorKind::UnpairedLowSurrogate,
  870|       |                            q_len - c_idx,
  871|       |                            6,
  872|       |                        )),
  873|       |                        _ => Ok(char::from_u32(raw_c).expect("invalid values are handled above")),
  874|       |                    }
  875|       |                }
  876|       |                'b' => Ok('\u{0008}'), // U+0008 BS backspace
  877|       |                't' => Ok('\t'),       // U+0009 HT horizontal tab
  878|       |                'n' => Ok('\n'),       // U+000A LF line feed
  879|       |                'f' => Ok('\u{000C}'), // U+000C FF form feed
  880|       |                'r' => Ok('\r'),       // U+000D CR carriage return
  881|       |                '"' if mode == StringParseMode::DoubleQuoted => Ok(ctrl),
  882|       |                '\'' if mode == StringParseMode::SingleQuoted => Ok(ctrl),
  883|       |                '/' | '\\' => Ok(ctrl), // " ' / \ are passed as is
  884|       |                _ => Err(SyntaxError::new(
  885|       |                    SyntaxErrorKind::InvalidEscapeSequence,
  886|       |                    q_len - c_idx,
  887|       |                    2,
  888|       |                )), // no other escape sequences are allowed
  889|       |            }
  890|       |        }
  891|       |
  892|       |        fn read_hexadecimal_escape<I>(
  893|       |            q_len: usize,
  894|       |            c_idx: usize,
  895|       |            chars: &mut Peekable<I>,
  896|       |        ) -> std::result::Result<u32, SyntaxError>
  897|       |        where
  898|       |            I: Iterator<Item = (usize, char)>,
  899|       |        {
  900|       |            let mut x = 0;
  901|       |            for i in 0..4 {
  902|       |                let &(_, c) = chars.peek().ok_or(SyntaxError::new(
  903|       |                    SyntaxErrorKind::InvalidEscapeSequence,
  904|       |                    q_len - c_idx + 1,
  905|       |                    2 + i,
  906|       |                ))?;
  907|       |                let v = match c {
  908|       |                    '0'..='9' => c as u32 - '0' as u32,
  909|       |                    // RFC8259.7-2 The hexadecimal letters A through F can be uppercase or lowercase.
  910|       |                    'a'..='f' => c as u32 - 'a' as u32 + 10,
  911|       |                    'A'..='F' => c as u32 - 'A' as u32 + 10,
  912|       |                    _ => {
  913|       |                        return Err(SyntaxError::new(
  914|       |                            SyntaxErrorKind::InvalidHexDigitInUnicodeEscape,
  915|       |                            q_len - c_idx - i - 1,
  916|       |                            1,
  917|       |                        ))
  918|       |                    }
  919|       |                };
  920|       |                x <<= 4;
  921|       |                x += v;
  922|       |                chars.next();
  923|       |            }
  924|       |            Ok(x)
  925|       |        }
  926|  8.66k|    }
_RNCNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser6string00B7_:
  780|  8.66k|                    let rest = stream.next().map_or("", |(i, _)| &q[i..]);
_RINvNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser6string020read_escape_sequenceNtNtNtCshZc3FwCJ069_4core3str4iter11CharIndicesEB8_:
  809|  7.69k|        fn read_escape_sequence<I>(
  810|  7.69k|            q_len: usize,
  811|  7.69k|            c_idx: usize,
  812|  7.69k|            chars: &mut Peekable<I>,
  813|  7.69k|            mode: StringParseMode,
  814|  7.69k|        ) -> std::result::Result<char, SyntaxError>
  815|  7.69k|        where
  816|  7.69k|            I: Iterator<Item = (usize, char)>,
  817|  7.69k|        {
  818|  7.69k|            let (i, ctrl) = chars.next().ok_or(SyntaxError::new(
  819|  7.69k|                SyntaxErrorKind::InvalidUnescapedCharacter,
  820|  7.69k|                q_len - c_idx,
  821|  7.69k|                1,
  822|  7.69k|            ))?;
  823|    140|            match ctrl {
  824|       |                'u' => {
  825|  1.53k|                    let raw_c = read_hexadecimal_escape(q_len, i, chars)?;
  826|  1.53k|                    match raw_c {
  827|       |                        // High surrogate, start of a UTF-16 pair.
  828|      0|                        0xD800..=0xDBFF => {
  829|      0|                            let &(_, next) = chars.peek().ok_or(SyntaxError::new(
  830|      0|                                SyntaxErrorKind::UnpairedHighSurrogate,
  831|      0|                                q_len - c_idx,
  832|      0|                                6,
  833|      0|                            ))?;
  834|      0|                            if next != '\\' {
  835|      0|                                return Err(SyntaxError::new(
  836|      0|                                    SyntaxErrorKind::UnpairedHighSurrogate,
  837|      0|                                    q_len - c_idx,
  838|      0|                                    6,
  839|      0|                                ));
  840|      0|                            }
  841|      0|                            chars.next();
  842|      0|                            let (i, next) = chars.next().ok_or(SyntaxError::new(
  843|      0|                                SyntaxErrorKind::UnpairedHighSurrogate,
  844|      0|                                q_len - c_idx,
  845|      0|                                6,
  846|      0|                            ))?;
  847|      0|                            if next != 'u' {
  848|      0|                                return Err(SyntaxError::new(
  849|      0|                                    SyntaxErrorKind::UnpairedHighSurrogate,
  850|      0|                                    q_len - c_idx,
  851|      0|                                    6,
  852|      0|                                ));
  853|      0|                            }
  854|      0|                            let low = read_hexadecimal_escape(q_len, i, chars)?;
  855|      0|                            match low {
  856|      0|                                0xDC00..=0xDFFF => {
  857|      0|                                    let n = (((raw_c - 0xD800) << 10) | (low - 0xDC00)) + 0x10000;
  858|      0|                                    Ok(char::from_u32(n).expect("high and low surrogate pair is always a valid char"))
  859|       |                                }
  860|      0|                                _ => Err(SyntaxError::new(
  861|      0|                                    SyntaxErrorKind::UnpairedHighSurrogate,
  862|      0|                                    q_len - c_idx,
  863|      0|                                    6,
  864|      0|                                )),
  865|       |                            }
  866|       |                        }
  867|       |                        // Low surrogate, invalid escape sequence.
  868|      0|                        0xDC00..=0xDFFF => Err(SyntaxError::new(
  869|      0|                            SyntaxErrorKind::UnpairedLowSurrogate,
  870|      0|                            q_len - c_idx,
  871|      0|                            6,
  872|      0|                        )),
  873|  1.53k|                        _ => Ok(char::from_u32(raw_c).expect("invalid values are handled above")),
  874|       |                    }
  875|       |                }
  876|    488|                'b' => Ok('\u{0008}'), // U+0008 BS backspace
  877|    269|                't' => Ok('\t'),       // U+0009 HT horizontal tab
  878|    138|                'n' => Ok('\n'),       // U+000A LF line feed
  879|    497|                'f' => Ok('\u{000C}'), // U+000C FF form feed
  880|    474|                'r' => Ok('\r'),       // U+000D CR carriage return
  881|    140|                '"' if mode == StringParseMode::DoubleQuoted => Ok(ctrl),
  882|    325|                '\'' if mode == StringParseMode::SingleQuoted => Ok(ctrl),
  883|  3.83k|                '/' | '\\' => Ok(ctrl), // " ' / \ are passed as is
  884|      0|                _ => Err(SyntaxError::new(
  885|      0|                    SyntaxErrorKind::InvalidEscapeSequence,
  886|      0|                    q_len - c_idx,
  887|      0|                    2,
  888|      0|                )), // no other escape sequences are allowed
  889|       |            }
  890|  7.69k|        }
_RINvNCNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax6parser6string023read_hexadecimal_escapeNtNtNtCshZc3FwCJ069_4core3str4iter11CharIndicesEB8_:
  892|  1.53k|        fn read_hexadecimal_escape<I>(
  893|  1.53k|            q_len: usize,
  894|  1.53k|            c_idx: usize,
  895|  1.53k|            chars: &mut Peekable<I>,
  896|  1.53k|        ) -> std::result::Result<u32, SyntaxError>
  897|  1.53k|        where
  898|  1.53k|            I: Iterator<Item = (usize, char)>,
  899|  1.53k|        {
  900|  1.53k|            let mut x = 0;
  901|  7.66k|            for i in 0..4 {
  902|  6.12k|                let &(_, c) = chars.peek().ok_or(SyntaxError::new(
  903|  6.12k|                    SyntaxErrorKind::InvalidEscapeSequence,
  904|  6.12k|                    q_len - c_idx + 1,
  905|  6.12k|                    2 + i,
  906|  6.12k|                ))?;
  907|  6.12k|                let v = match c {
  908|  6.12k|                    '0'..='9' => c as u32 - '0' as u32,
  909|       |                    // RFC8259.7-2 The hexadecimal letters A through F can be uppercase or lowercase.
  910|    663|                    'a'..='f' => c as u32 - 'a' as u32 + 10,
  911|      0|                    'A'..='F' => c as u32 - 'A' as u32 + 10,
  912|       |                    _ => {
  913|      0|                        return Err(SyntaxError::new(
  914|      0|                            SyntaxErrorKind::InvalidHexDigitInUnicodeEscape,
  915|      0|                            q_len - c_idx - i - 1,
  916|      0|                            1,
  917|      0|                        ))
  918|       |                    }
  919|       |                };
  920|  6.12k|                x <<= 4;
  921|  6.12k|                x += v;
  922|  6.12k|                chars.next();
  923|       |            }
  924|  1.53k|            Ok(x)
  925|  1.53k|        }

_RNvMs2_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3strNtB5_10JsonString8unquoted:
  188|  25.9k|    pub fn unquoted(&self) -> &str {
  189|  25.9k|        let len = self.quoted.len();
  190|  25.9k|        debug_assert!(len >= 2);
  191|  25.9k|        &self.quoted[1..len - 1]
  192|  25.9k|    }
_RNvXs3_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3strNtB5_10JsonStringNtNtCshZc3FwCJ069_4core3cmp9PartialEq2eq:
  211|  8.62k|    fn eq(&self, other: &Self) -> bool {
  212|  8.62k|        self.unquoted() == other.unquoted()
  213|  8.62k|    }
_RNvNtCsiZ6QsNdkp8Z_15rsonpath_syntax3str6escapeCsaryQ4xZOwOZ_21query_fuzz_round_trip:
  132|  8.74k|pub fn escape(str: &str, mode: EscapeMode) -> String {
  133|       |    use std::fmt::Write;
  134|  8.74k|    let mut result = String::new();
  135|  18.2k|    for c in str.chars() {
  136|    803|        match c {
  137|       |            // # Mode-dependent quote escapes.
  138|  1.12k|            '\'' if mode == EscapeMode::SingleQuoted => result.push_str(r"\'"),
  139|    803|            '\'' if mode == EscapeMode::DoubleQuoted => result.push('\''),
  140|    304|            '"' if mode == EscapeMode::SingleQuoted => result.push('"'),
  141|    140|            '"' if mode == EscapeMode::DoubleQuoted => result.push_str(r#"\""#),
  142|       |            // # Mode-independent escapes.
  143|  3.83k|            '\\' => result.push_str(r"\\"),
  144|       |            // ## Special control sequences.
  145|    489|            '\u{0008}' => result.push_str(r"\b"),
  146|    497|            '\u{000C}' => result.push_str(r"\f"),
  147|    138|            '\n' => result.push_str(r"\n"),
  148|    474|            '\r' => result.push_str(r"\r"),
  149|    269|            '\t' => result.push_str(r"\t"),
  150|       |            // ## Other control sequences escaped as Unicode escapes.
  151|  11.1k|            '\u{0000}'..='\u{001F}' => write!(result, "\\u{:0>4x}", c as u8).expect("writing to string never fails"),
  152|       |            // # Non-escapable characters.
  153|  9.58k|            _ => result.push(c),
  154|       |        }
  155|       |    }
  156|       |
  157|  8.74k|    result
  158|  8.74k|}
_RNvMs_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3strNtB4_17JsonStringBuilder3new:
   40|  19.9k|    pub(crate) fn new() -> Self {
   41|  19.9k|        Self {
   42|  19.9k|            quoted: String::from('"'),
   43|  19.9k|        }
   44|  19.9k|    }
_RNvMs_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3strNtB4_17JsonStringBuilder4push:
   46|  37.6k|    pub(crate) fn push(&mut self, char: char) -> &mut Self {
   47|  37.6k|        self.quoted.push(char);
   48|  37.6k|        self
   49|  37.6k|    }
_RNvMs_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3strNtB4_17JsonStringBuilder6finish:
   51|  19.9k|    pub(crate) fn finish(mut self) -> JsonString {
   52|  19.9k|        self.quoted.push('"');
   53|  19.9k|        JsonString { quoted: self.quoted }
   54|  19.9k|    }
_RNvXs6_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3strNtB5_10JsonStringNtCs3HmALEVcYcb_9arbitrary9Arbitrary9arbitraryB7_:
  229|  11.2k|    fn arbitrary(u: &mut arbitrary::Unstructured<'a>) -> arbitrary::Result<Self> {
  230|  11.2k|        let chars = u.arbitrary_iter()?;
  231|  11.2k|        let mut builder = JsonStringBuilder::new();
  232|       |
  233|       |        // RFC 7159: All Unicode characters may be placed [in the string],
  234|       |        // except for characters that must be escaped: quotation mark,
  235|       |        // reverse solidus, and the control characters (U+0000 through U+001F).
  236|  26.4k|        for c in chars {
  237|  15.1k|            let c = c?;
  238|  15.1k|            match c {
  239|  15.3k|                '\u{0000}'..='\u{001F}' | '\"' | '\\' => {
  240|  3.88k|                    builder.push('\\');
  241|  3.88k|                    builder.push(c);
  242|  3.88k|                }
  243|  11.2k|                _ => {
  244|  11.2k|                    builder.push(c);
  245|  11.2k|                }
  246|       |            }
  247|       |        }
  248|       |
  249|  11.2k|        Ok(builder.into())
  250|  11.2k|    }
_RNvXs0_NtCsiZ6QsNdkp8Z_15rsonpath_syntax3strNtB5_10JsonStringINtNtCshZc3FwCJ069_4core7convert4FromNtB5_17JsonStringBuilderE4from:
   59|  11.2k|    fn from(value: JsonStringBuilder) -> Self {
   60|  11.2k|        value.finish()
   61|  11.2k|    }

